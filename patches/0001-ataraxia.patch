From 580373e26ac8c87d0b76b624ec14267a1787573b Mon Sep 17 00:00:00 2001
From: Ishimoto Shinobu <nagakamira@gmail.com>
Date: Wed, 1 Jul 2020 13:52:04 +0300
Subject: [PATCH] ataraxia

Signed-off-by: Ishimoto Shinobu <nagakamira@gmail.com>
---
 policy/modules/admin/bootloader.te      |  3 +
 policy/modules/admin/netutils.te        |  1 +
 policy/modules/apps/chromium.te         |  2 +
 policy/modules/apps/gpg.fc              |  4 +-
 policy/modules/apps/gpg.if              | 30 ++++++++
 policy/modules/apps/mplayer.if          |  2 +-
 policy/modules/apps/mplayer.te          |  7 +-
 policy/modules/apps/pulseaudio.te       | 12 ++-
 policy/modules/kernel/corecommands.fc   |  1 -
 policy/modules/kernel/corecommands.if   |  1 +
 policy/modules/kernel/corecommands.te   |  2 +-
 policy/modules/kernel/devices.te        |  1 +
 policy/modules/kernel/kernel.if         |  2 +-
 policy/modules/roles/staff.te           | 17 ++++-
 policy/modules/roles/sysadm.te          | 11 ++-
 policy/modules/roles/unprivuser.te      | 24 +++++-
 policy/modules/services/apache.fc       |  2 +-
 policy/modules/services/apache.if       |  1 +
 policy/modules/services/apache.te       |  9 ++-
 policy/modules/services/bind.te         |  1 +
 policy/modules/services/certbot.fc      |  4 +
 policy/modules/services/certbot.if      | 46 ++++++++++++
 policy/modules/services/certbot.te      | 99 +++++++++++++++++++++++++
 policy/modules/services/clamav.te       |  2 +
 policy/modules/services/cron.if         | 21 ++++++
 policy/modules/services/cron.te         |  2 +
 policy/modules/services/dbus.if         | 20 ++++-
 policy/modules/services/dkim.te         |  2 +
 policy/modules/services/dovecot.te      |  6 ++
 policy/modules/services/entropyd.te     |  1 +
 policy/modules/services/fail2ban.te     |  6 ++
 policy/modules/services/jabber.te       |  3 +
 policy/modules/services/mailman.if      |  1 +
 policy/modules/services/mon.te          |  5 ++
 policy/modules/services/monit.te        |  1 +
 policy/modules/services/mta.if          |  3 +
 policy/modules/services/mysql.if        |  2 +-
 policy/modules/services/mysql.te        |  3 +
 policy/modules/services/postfix.te      |  9 +++
 policy/modules/services/postgrey.te     |  1 +
 policy/modules/services/smartmon.te     |  2 +-
 policy/modules/services/spamassassin.if | 19 +++++
 policy/modules/services/spamassassin.te | 41 ++--------
 policy/modules/services/squid.te        |  2 +
 policy/modules/services/ssh.if          |  2 +
 policy/modules/services/ssh.te          |  1 +
 policy/modules/services/tor.te          |  1 +
 policy/modules/services/xserver.if      |  6 +-
 policy/modules/system/authlogin.te      |  4 +-
 policy/modules/system/fstools.te        |  5 ++
 policy/modules/system/init.if           |  6 +-
 policy/modules/system/lvm.if            | 18 +++++
 policy/modules/system/lvm.te            |  2 +
 policy/modules/system/miscfiles.fc      |  2 +
 policy/modules/system/miscfiles.if      | 20 +++++
 policy/modules/system/modutils.te       |  2 +
 policy/modules/system/raid.fc           |  2 +
 policy/modules/system/raid.te           |  2 +
 policy/modules/system/sysnetwork.fc     |  1 +
 policy/modules/system/sysnetwork.te     |  5 ++
 policy/modules/system/systemd.fc        |  1 -
 policy/modules/system/systemd.te        | 15 ++--
 policy/modules/system/unconfined.te     |  5 ++
 policy/modules/system/userdomain.if     | 56 ++++++++++++++
 policy/modules/system/xdg.if            | 18 +++++
 policy/support/obj_perm_sets.spt        |  5 --
 66 files changed, 541 insertions(+), 72 deletions(-)
 create mode 100644 policy/modules/services/certbot.fc
 create mode 100644 policy/modules/services/certbot.if
 create mode 100644 policy/modules/services/certbot.te

diff --git a/policy/modules/admin/bootloader.te b/policy/modules/admin/bootloader.te
index e3fd3d4..22ba27f 100644
--- a/policy/modules/admin/bootloader.te
+++ b/policy/modules/admin/bootloader.te
@@ -181,6 +181,9 @@ ifdef(`distro_debian',`
 
 	dpkg_read_db(bootloader_t)
 	dpkg_rw_pipes(bootloader_t)
+
+	apt_use_fds(bootloader_t)
+	apt_use_ptys(bootloader_t)
 ')
 
 ifdef(`distro_redhat',`
diff --git a/policy/modules/admin/netutils.te b/policy/modules/admin/netutils.te
index 8991155..063ed21 100644
--- a/policy/modules/admin/netutils.te
+++ b/policy/modules/admin/netutils.te
@@ -110,6 +110,7 @@ allow ping_t self:tcp_socket create_socket_perms;
 allow ping_t self:rawip_socket { create ioctl read write bind getopt setopt getattr };
 allow ping_t self:packet_socket { create ioctl read write bind getopt setopt };
 allow ping_t self:netlink_route_socket create_netlink_socket_perms;
+allow ping_t self:icmp_socket create;
 
 corenet_all_recvfrom_unlabeled(ping_t)
 corenet_all_recvfrom_netlabel(ping_t)
diff --git a/policy/modules/apps/chromium.te b/policy/modules/apps/chromium.te
index 05987d4..7766938 100644
--- a/policy/modules/apps/chromium.te
+++ b/policy/modules/apps/chromium.te
@@ -43,6 +43,7 @@ type chromium_t;
 domain_dyntrans_type(chromium_t)
 
 type chromium_exec_t;
+typealias chromium_exec_t alias chrome_browser_exec_t;
 application_domain(chromium_t, chromium_exec_t)
 
 type chromium_naclhelper_t;
@@ -51,6 +52,7 @@ application_domain(chromium_naclhelper_t, chromium_naclhelper_exec_t)
 
 type chromium_sandbox_t;
 type chromium_sandbox_exec_t;
+typealias chromium_sandbox_exec_t alias chrome_browser_sandbox_exec_t;
 application_domain(chromium_sandbox_t, chromium_sandbox_exec_t)
 
 type chromium_renderer_t;
diff --git a/policy/modules/apps/gpg.fc b/policy/modules/apps/gpg.fc
index c936239..40ccc33 100644
--- a/policy/modules/apps/gpg.fc
+++ b/policy/modules/apps/gpg.fc
@@ -6,10 +6,10 @@ HOME_DIR/\.gnupg/S\.scdaemon		-s	gen_context(system_u:object_r:gpg_agent_tmp_t,s
 /usr/bin/gpg(2)?			--	gen_context(system_u:object_r:gpg_exec_t,s0)
 /usr/bin/gpgsm				--	gen_context(system_u:object_r:gpg_exec_t,s0)
 /usr/bin/gpg-agent			--	gen_context(system_u:object_r:gpg_agent_exec_t,s0)
-/usr/bin/pinentry.*			--	gen_context(system_u:object_r:gpg_pinentry_exec_t,s0)
+/usr/bin/pinentry.*			--	gen_context(system_u:object_r:gpg_exec_t,s0)
 
 /usr/lib/gnupg/.*			--	gen_context(system_u:object_r:gpg_exec_t,s0)
-/usr/lib/gnupg/gpgkeys.*		--	gen_context(system_u:object_r:gpg_helper_exec_t,s0)
+/usr/lib/gnupg/gpgkeys.*		--	gen_context(system_u:object_r:gpg_exec_t,s0)
 
 /run/user/%{USERID}/gnupg(/.*)?			gen_context(system_u:object_r:gpg_runtime_t,s0)
 /run/user/%{USERID}/gnupg/S\.gpg-agent.* -s	gen_context(system_u:object_r:gpg_agent_tmp_t,s0)
diff --git a/policy/modules/apps/gpg.if b/policy/modules/apps/gpg.if
index 78efb18..d2a75e5 100644
--- a/policy/modules/apps/gpg.if
+++ b/policy/modules/apps/gpg.if
@@ -31,6 +31,11 @@ interface(`gpg_role',`
 	domtrans_pattern($2, gpg_exec_t, gpg_t)
 	domtrans_pattern($2, gpg_agent_exec_t, gpg_agent_t)
 
+	# transition to user_t when running ck-launch-session or other bin_t
+	corecmd_bin_domtrans(gpg_agent_t, $2)
+	allow gpg_agent_t $2:process signull;
+	allow $2 gpg_agent_t:fd use;
+
 	allow $2 self:process setrlimit;
 	allow $2 { gpg_t gpg_agent_t gpg_helper_t gpg_pinentry_t }:process { ptrace signal_perms };
 	ps_process_pattern($2, { gpg_t gpg_agent_t gpg_helper_t gpg_pinentry_t })
@@ -46,6 +51,9 @@ interface(`gpg_role',`
 	filetrans_pattern($2, gpg_secret_t, gpg_agent_tmp_t, sock_file, "log-socket")
 	userdom_user_home_dir_filetrans($2, gpg_secret_t, dir, ".gnupg")
 
+	# so gpg_agent_t can append to .xsession-errors
+	userdom_append_inherited_user_home_content_files(gpg_agent_t)
+
 	optional_policy(`
 		gpg_pinentry_dbus_chat($2)
 	')
@@ -179,6 +187,28 @@ interface(`gpg_signal',`
 	allow $1 gpg_t:process signal;
 ')
 
+#######################################
+## <summary>
+##      Transition to $2_gpg_agent_t from another domain via gpg_agent_exec_t
+## </summary>
+## <param name="domain">
+##      <summary>
+##      source domain
+##      </summary>
+## </param>
+## <param name="domain">
+##      <summary>
+##      base of target domain
+##      </summary>
+## </param>
+#
+interface(`gpg_enter_user_gpg_agent_domain',`
+        gen_require(`
+                type gpg_agent_exec_t, $2_gpg_agent_t;
+        ')
+        domain_auto_transition_pattern($1, gpg_agent_exec_t, $2_gpg_agent_t)
+')
+
 ########################################
 ## <summary>
 ##	Read and write gpg agent pipes.
diff --git a/policy/modules/apps/mplayer.if b/policy/modules/apps/mplayer.if
index 861d5e9..62643bc 100644
--- a/policy/modules/apps/mplayer.if
+++ b/policy/modules/apps/mplayer.if
@@ -38,7 +38,7 @@ interface(`mplayer_role',`
 	domtrans_pattern($2, mencoder_exec_t, mencoder_t)
 	domtrans_pattern($2, mplayer_exec_t, mplayer_t)
 
-	allow $2 { mplayer_t mencoder_t }:process { ptrace signal_perms };
+	allow $2 { mplayer_t mencoder_t }:process { getsched ptrace signal_perms };
 	ps_process_pattern($2, { mplayer_t mencoder_t })
 
 	allow $2 mplayer_home_t:dir { manage_dir_perms relabel_dir_perms };
diff --git a/policy/modules/apps/mplayer.te b/policy/modules/apps/mplayer.te
index df8cf5e..a466567 100644
--- a/policy/modules/apps/mplayer.te
+++ b/policy/modules/apps/mplayer.te
@@ -119,12 +119,16 @@ tunable_policy(`use_samba_home_dirs',`
 	fs_manage_cifs_symlinks(mencoder_t)
 ')
 
+tunable_policy(`xserver_allow_dri',`
+	dev_rw_dri(mplayer_t)
+')
+
 ########################################
 #
 # Mplayer local policy
 #
 
-allow mplayer_t self:process { signal_perms getsched };
+allow mplayer_t self:process { signal_perms getsched setsched };
 allow mplayer_t self:fifo_file rw_fifo_file_perms;
 allow mplayer_t self:sem create_sem_perms;
 allow mplayer_t self:udp_socket create_socket_perms;
@@ -147,6 +151,7 @@ fs_tmpfs_filetrans(mplayer_t, mplayer_tmpfs_t,{ dir file lnk_file sock_file fifo
 kernel_dontaudit_list_unlabeled(mplayer_t)
 kernel_dontaudit_getattr_unlabeled_files(mplayer_t)
 kernel_dontaudit_read_unlabeled_files(mplayer_t)
+kernel_read_crypto_sysctls(mplayer_t)
 kernel_read_system_state(mplayer_t)
 kernel_read_kernel_sysctls(mplayer_t)
 
diff --git a/policy/modules/apps/pulseaudio.te b/policy/modules/apps/pulseaudio.te
index 29b03c4..28721ac 100644
--- a/policy/modules/apps/pulseaudio.te
+++ b/policy/modules/apps/pulseaudio.te
@@ -92,6 +92,8 @@ files_pid_filetrans(pulseaudio_t, pulseaudio_runtime_t, { dir file })
 
 manage_dirs_pattern(pulseaudio_t, pulseaudio_xdg_config_t, pulseaudio_xdg_config_t)
 manage_files_pattern(pulseaudio_t, pulseaudio_xdg_config_t, pulseaudio_xdg_config_t)
+allow pulseaudio_t pulseaudio_xdg_config_t:file map;
+
 xdg_config_filetrans(pulseaudio_t, pulseaudio_xdg_config_t, dir, "pulse")
 
 allow pulseaudio_t pulseaudio_client:process signull;
@@ -146,7 +148,7 @@ miscfiles_read_localization(pulseaudio_t)
 
 seutil_read_config(pulseaudio_t)
 
-userdom_read_user_tmpfs_files(pulseaudio_t)
+userdom_rw_user_tmpfs_files(pulseaudio_t)
 userdom_map_user_tmpfs_files(pulseaudio_t)
 userdom_delete_user_tmpfs_files(pulseaudio_t)
 userdom_search_user_home_dirs(pulseaudio_t)
@@ -155,6 +157,7 @@ userdom_search_user_home_content(pulseaudio_t)
 userdom_manage_user_tmp_dirs(pulseaudio_t)
 userdom_manage_user_tmp_files(pulseaudio_t)
 userdom_manage_user_tmp_sockets(pulseaudio_t)
+userdom_write_all_user_runtime_named_sockets(pulseaudio_t)
 
 tunable_policy(`pulseaudio_execmem',`
 	allow pulseaudio_t self:process execmem;
@@ -223,6 +226,13 @@ optional_policy(`
 	policykit_read_reload(pulseaudio_t)
 ')
 
+optional_policy(`
+	systemd_read_logind_sessions_files(pulseaudio_t)
+	# for /run/systemd/users/$PID
+	systemd_read_logind_pids(pulseaudio_t)
+	# for /run/user/1000/systemd/notify
+')
+
 optional_policy(`
 	udev_read_pid_files(pulseaudio_t)
 	udev_read_state(pulseaudio_t)
diff --git a/policy/modules/kernel/corecommands.fc b/policy/modules/kernel/corecommands.fc
index 07224b8..5663a0a 100644
--- a/policy/modules/kernel/corecommands.fc
+++ b/policy/modules/kernel/corecommands.fc
@@ -305,7 +305,6 @@ ifdef(`distro_debian',`
 /usr/sbin/sesh			--	gen_context(system_u:object_r:shell_exec_t,s0)
 /usr/sbin/smrsh			--	gen_context(system_u:object_r:shell_exec_t,s0)
 
-/usr/share/mdadm/checkarray	--	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/(.*/)?bin(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 /usr/share/ajaxterm/ajaxterm\.py.* --	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/ajaxterm/qweb\.py.* --	gen_context(system_u:object_r:bin_t,s0)
diff --git a/policy/modules/kernel/corecommands.if b/policy/modules/kernel/corecommands.if
index c605ca5..8253ea4 100644
--- a/policy/modules/kernel/corecommands.if
+++ b/policy/modules/kernel/corecommands.if
@@ -662,6 +662,7 @@ interface(`corecmd_read_all_executables',`
 
 	corecmd_search_bin($1)
 	read_files_pattern($1, exec_type, exec_type)
+	allow $1 exec_type:file map;
 ')
 
 ########################################
diff --git a/policy/modules/kernel/corecommands.te b/policy/modules/kernel/corecommands.te
index 8443203..4fae70c 100644
--- a/policy/modules/kernel/corecommands.te
+++ b/policy/modules/kernel/corecommands.te
@@ -13,7 +13,7 @@ attribute exec_type;
 #
 # bin_t is the type of files in the system bin/sbin directories.
 #
-type bin_t alias { ls_exec_t sbin_t };
+type bin_t alias { ls_exec_t sbin_t systemd_analyze_exec_t };
 corecmd_executable_file(bin_t)
 dev_associate(bin_t)	#For /dev/MAKEDEV
 
diff --git a/policy/modules/kernel/devices.te b/policy/modules/kernel/devices.te
index 8f6f064..b2556a1 100644
--- a/policy/modules/kernel/devices.te
+++ b/policy/modules/kernel/devices.te
@@ -36,6 +36,7 @@ dev_node(agp_device_t)
 # Type for /dev/apm_bios
 #
 type acpi_bios_t;
+typealias acpi_bios_t alias apm_bios_t;
 dev_node(acpi_bios_t)
 
 #
diff --git a/policy/modules/kernel/kernel.if b/policy/modules/kernel/kernel.if
index 48fc6a5..b574267 100644
--- a/policy/modules/kernel/kernel.if
+++ b/policy/modules/kernel/kernel.if
@@ -270,7 +270,7 @@ interface(`kernel_rw_pipes',`
 		type kernel_t;
 	')
 
-	allow $1 kernel_t:fifo_file { read write };
+	allow $1 kernel_t:fifo_file { getattr read write };
 ')
 
 ########################################
diff --git a/policy/modules/roles/staff.te b/policy/modules/roles/staff.te
index 6d840a5..746d261 100644
--- a/policy/modules/roles/staff.te
+++ b/policy/modules/roles/staff.te
@@ -15,6 +15,10 @@ userdom_unpriv_user_template(staff)
 #
 corenet_ib_access_unlabeled_pkeys(staff_t)
 
+corenet_tcp_bind_all_unreserved_ports(staff_t)
+corenet_udp_bind_all_unreserved_ports(staff_t)
+corenet_tcp_bind_generic_node(staff_t)
+
 optional_policy(`
 	apache_role(staff_r, staff_t)
 ')
@@ -35,6 +39,10 @@ optional_policy(`
 	modemmanager_dbus_chat(staff_t)
 ')
 
+optional_policy(`
+	netutils_domtrans_ping(staff_t)
+')
+
 optional_policy(`
 	postgresql_role(staff_r, staff_t)
 ')
@@ -64,6 +72,11 @@ optional_policy(`
 	vlock_run(staff_t, staff_r)
 ')
 
+optional_policy(`
+	# for torbrowser-launcher
+	xdg_exec_data(staff_t)
+')
+
 optional_policy(`
 	xscreensaver_role(staff_r, staff_t)
 ')
@@ -125,10 +138,6 @@ ifndef(`distro_redhat',`
 		gift_role(staff_r, staff_t)
 	')
 
-	optional_policy(`
-		gpg_role(staff_r, staff_t)
-	')
-
 	optional_policy(`
 		irc_role(staff_r, staff_t)
 	')
diff --git a/policy/modules/roles/sysadm.te b/policy/modules/roles/sysadm.te
index cf4ca14..d8a787b 100644
--- a/policy/modules/roles/sysadm.te
+++ b/policy/modules/roles/sysadm.te
@@ -57,6 +57,9 @@ selinux_read_policy(sysadm_t)
 userdom_manage_user_home_dirs(sysadm_t)
 userdom_home_filetrans_user_home_dir(sysadm_t)
 
+# for systemd-analyze
+files_get_etc_unit_status(sysadm_t)
+
 ifdef(`direct_sysadm_daemon',`
 	optional_policy(`
 		init_run_daemon(sysadm_t, sysadm_r)
@@ -1114,6 +1117,10 @@ optional_policy(`
 	systemd_dbus_chat_hostnamed(sysadm_t)
 ')
 
+optional_policy(`
+	systemd_dbus_chat_logind(sysadm_t)
+')
+
 optional_policy(`
 	tboot_run_txtstat(sysadm_t, sysadm_r)
 ')
@@ -1343,10 +1350,6 @@ ifndef(`distro_redhat',`
 		gift_role(sysadm_r, sysadm_t)
 	')
 
-	optional_policy(`
-		gpg_role(sysadm_r, sysadm_t)
-	')
-
 	optional_policy(`
 		irc_role(sysadm_r, sysadm_t)
 	')
diff --git a/policy/modules/roles/unprivuser.te b/policy/modules/roles/unprivuser.te
index 9b80f75..d72b9c9 100644
--- a/policy/modules/roles/unprivuser.te
+++ b/policy/modules/roles/unprivuser.te
@@ -7,11 +7,23 @@ policy_module(unprivuser, 2.10.0)
 #
 # Declarations
 #
+## <desc>
+## <p>
+## Allow user to bind all unreserved ports
+## </p>
+## </desc>
+gen_tunable(user_bind_unreserved, false)
 
 #role user_r;
 
 userdom_unpriv_user_template(user)
 
+tunable_policy(`user_bind_unreserved', `
+	corenet_tcp_bind_all_unreserved_ports(user_t)
+	corenet_udp_bind_all_unreserved_ports(user_t)
+	corenet_tcp_bind_generic_node(user_t)
+')
+
 optional_policy(`
 	apache_role(user_r, user_t)
 ')
@@ -24,6 +36,10 @@ optional_policy(`
 	modemmanager_dbus_chat(user_t)
 ')
 
+optional_policy(`
+	netutils_domtrans_ping(user_t)
+')
+
 optional_policy(`
 	screen_role_template(user, user_r, user_t)
 ')
@@ -32,6 +48,11 @@ optional_policy(`
 	vlock_run(user_t, user_r)
 ')
 
+optional_policy(`
+	# for torbrowser-launcher
+	xdg_exec_data(user_t)
+')
+
 optional_policy(`
 	xscreensaver_role(user_r, user_t)
 ')
@@ -165,8 +186,9 @@ ifndef(`distro_redhat',`
 		spamassassin_role(user_r, user_t)
 	')
 
-	optional_policy(`
+        optional_policy(`
 		ssh_role_template(user, user_r, user_t)
+		gpg_enter_user_gpg_agent_domain(user_ssh_agent_t, user)
 	')
 
 	optional_policy(`
diff --git a/policy/modules/services/apache.fc b/policy/modules/services/apache.fc
index 2e359f6..eeaa11f 100644
--- a/policy/modules/services/apache.fc
+++ b/policy/modules/services/apache.fc
@@ -138,7 +138,7 @@ ifdef(`distro_suse',`
 /var/lib/php/session(/.*)?					gen_context(system_u:object_r:httpd_runtime_t,s0)
 /var/lib/pootle/po(/.*)?					gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
 /var/lib/rt3/data/RT-Shredder(/.*)?				gen_context(system_u:object_r:httpd_var_lib_t,s0)
-/var/lib/squirrelmail/prefs(/.*)?				gen_context(system_u:object_r:httpd_squirrelmail_t,s0)
+/var/lib/squirrelmail(/.*)?					gen_context(system_u:object_r:httpd_squirrelmail_t,s0)
 /var/lib/stickshift/\.httpd\.d(/.*)?				gen_context(system_u:object_r:httpd_config_t,s0)
 /var/lib/svn(/.*)?						gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
 /var/lib/trac(/.*)?						gen_context(system_u:object_r:httpd_sys_content_t,s0)
diff --git a/policy/modules/services/apache.if b/policy/modules/services/apache.if
index 3b50a07..4e1bbbb 100644
--- a/policy/modules/services/apache.if
+++ b/policy/modules/services/apache.if
@@ -1005,6 +1005,7 @@ interface(`apache_manage_sys_rw_content',`
 	apache_search_sys_content($1)
 	manage_dirs_pattern($1, httpd_sys_rw_content_t, httpd_sys_rw_content_t)
 	manage_files_pattern($1,httpd_sys_rw_content_t, httpd_sys_rw_content_t)
+	allow $1 httpd_sys_rw_content_t:file map;
 	manage_lnk_files_pattern($1, httpd_sys_rw_content_t, httpd_sys_rw_content_t)
 ')
 
diff --git a/policy/modules/services/apache.te b/policy/modules/services/apache.te
index be587ba..4dd702c 100644
--- a/policy/modules/services/apache.te
+++ b/policy/modules/services/apache.te
@@ -381,6 +381,7 @@ manage_dirs_pattern(httpd_t, httpd_cache_t, httpd_cache_t)
 manage_files_pattern(httpd_t, httpd_cache_t, httpd_cache_t)
 manage_lnk_files_pattern(httpd_t, httpd_cache_t, httpd_cache_t)
 files_var_filetrans(httpd_t, httpd_cache_t, dir)
+allow httpd_t httpd_cache_t:file map;
 
 allow httpd_t httpd_config_t:dir list_dir_perms;
 read_files_pattern(httpd_t, httpd_config_t, httpd_config_t)
@@ -416,6 +417,7 @@ allow httpd_t httpd_rotatelogs_t:process signal_perms;
 manage_dirs_pattern(httpd_t, httpd_squirrelmail_t, httpd_squirrelmail_t)
 manage_files_pattern(httpd_t, httpd_squirrelmail_t, httpd_squirrelmail_t)
 manage_lnk_files_pattern(httpd_t, httpd_squirrelmail_t, httpd_squirrelmail_t)
+allow httpd_t httpd_squirrelmail_t:file map;
 
 allow httpd_t httpd_suexec_exec_t:file read_file_perms;
 
@@ -439,6 +441,7 @@ fs_tmpfs_filetrans(httpd_t, httpd_tmpfs_t, { dir file lnk_file sock_file fifo_fi
 
 manage_dirs_pattern(httpd_t, httpd_var_lib_t, httpd_var_lib_t)
 manage_files_pattern(httpd_t, httpd_var_lib_t, httpd_var_lib_t)
+allow httpd_t httpd_var_lib_t:file map;
 manage_lnk_files_pattern(httpd_t, httpd_var_lib_t, httpd_var_lib_t)
 files_var_lib_filetrans(httpd_t, httpd_var_lib_t, { dir file })
 
@@ -494,11 +497,13 @@ fs_search_auto_mountpoints(httpd_t)
 fs_getattr_all_fs(httpd_t)
 fs_read_anon_inodefs_files(httpd_t)
 fs_rw_inherited_hugetlbfs_files(httpd_t)
+fs_mmap_rw_hugetlbfs_files(httpd_t)
 fs_read_iso9660_files(httpd_t)
 fs_search_auto_mountpoints(httpd_t)
 
 files_dontaudit_getattr_all_pids(httpd_t)
 files_read_usr_files(httpd_t)
+files_map_usr_files(httpd_t)
 files_list_mnt(httpd_t)
 files_search_spool(httpd_t)
 files_read_var_symlinks(httpd_t)
@@ -507,6 +512,7 @@ files_search_home(httpd_t)
 files_getattr_home_dir(httpd_t)
 files_read_etc_runtime_files(httpd_t)
 files_read_var_lib_symlinks(httpd_t)
+files_map_etc_files(httpd_t)
 
 auth_use_nsswitch(httpd_t)
 
@@ -628,7 +634,7 @@ tunable_policy(`httpd_enable_ftp_server',`
 ')
 
 tunable_policy(`httpd_enable_homedirs',`
-	userdom_search_user_home_dirs(httpd_t)
+	userdom_list_user_home_content(httpd_t)
 ')
 
 tunable_policy(`httpd_enable_homedirs && use_nfs_home_dirs',`
@@ -910,6 +916,7 @@ optional_policy(`
 #
 
 read_files_pattern(httpd_helper_t, httpd_config_t, httpd_config_t)
+allow httpd_t httpd_config_t:file map;
 
 append_files_pattern(httpd_helper_t, httpd_log_t, httpd_log_t)
 read_lnk_files_pattern(httpd_helper_t, httpd_log_t, httpd_log_t)
diff --git a/policy/modules/services/bind.te b/policy/modules/services/bind.te
index 5eba462..55df39d 100644
--- a/policy/modules/services/bind.te
+++ b/policy/modules/services/bind.te
@@ -150,6 +150,7 @@ domain_use_interactive_fds(named_t)
 
 files_read_etc_runtime_files(named_t)
 files_read_usr_files(named_t)
+files_map_usr_files(named_t)
 
 fs_getattr_all_fs(named_t)
 fs_search_auto_mountpoints(named_t)
diff --git a/policy/modules/services/certbot.fc b/policy/modules/services/certbot.fc
new file mode 100644
index 0000000..6d296fe
--- /dev/null
+++ b/policy/modules/services/certbot.fc
@@ -0,0 +1,4 @@
+/usr/bin/certbot	--	gen_context(system_u:object_r:certbot_exec_t,s0)
+/usr/bin/letsencrypt	--	gen_context(system_u:object_r:certbot_exec_t,s0)
+/var/log/letsencrypt(/.*)?	gen_context(system_u:object_r:certbot_log_t,s0)
+/var/lib/letsencrypt(/.*)?	gen_context(system_u:object_r:certbot_var_lib_t,s0)
diff --git a/policy/modules/services/certbot.if b/policy/modules/services/certbot.if
new file mode 100644
index 0000000..cc56b0c
--- /dev/null
+++ b/policy/modules/services/certbot.if
@@ -0,0 +1,46 @@
+## <summary>SSL certificate requesting tool certbot AKA letsencrypt.</summary>
+
+########################################
+## <summary>
+##      Execute certbot/letsencrypt in the certbot
+##      domain.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed to transition.
+##      </summary>
+## </param>
+#
+interface(`certbot_domtrans',`
+	gen_require(`
+		type certbot_t, certbot_exec_t;
+	')
+
+	domtrans_pattern($1, certbot_exec_t, certbot_t)
+')
+
+########################################
+## <summary>
+##      Execute certbot/letsencrypt in the certbot
+##      domain, and allow the specified role
+##      the firstboot domain.
+## </summary>
+## <param name="role">
+##      <summary>
+##      Role allowed access.
+##      </summary>
+## </param>
+## <param name="domain">
+##      <summary>
+##      Domain allowed to transition.
+##      </summary>
+## </param>
+#
+interface(`certbot_run',`
+	gen_require(`
+		type certbot_t;
+	')
+
+	certbot_domtrans($2)
+	role $1 types certbot_t;
+')
diff --git a/policy/modules/services/certbot.te b/policy/modules/services/certbot.te
new file mode 100644
index 0000000..6b3b84d
--- /dev/null
+++ b/policy/modules/services/certbot.te
@@ -0,0 +1,99 @@
+policy_module(certbot, 1.3.0)
+
+########################################
+#
+# Declarations
+#
+
+type certbot_t;
+type certbot_exec_t;
+init_daemon_domain(certbot_t, certbot_exec_t)
+
+type certbot_log_t;
+logging_log_file(certbot_log_t)
+
+type certbot_var_run_t;
+files_pid_file(certbot_var_run_t)
+
+type certbot_tmp_t;
+files_tmp_file(certbot_tmp_t)
+
+type certbot_tmpfs_t;
+files_tmpfs_file(certbot_tmpfs_t)
+
+type certbot_var_lib_t;
+files_type(certbot_var_lib_t)
+
+########################################
+#
+# Local policy
+#
+
+allow certbot_t self:fifo_file { getattr ioctl read write };
+
+allow certbot_t self:capability { chown dac_override sys_resource };
+
+# this is for certbot to have write-exec memory, I know it is bad
+allow certbot_t self:process execmem;
+allow certbot_t certbot_tmp_t:file { map execute };
+allow certbot_t certbot_tmpfs_t:file { map execute };
+allow certbot_t certbot_var_run_t:file { map execute };
+
+kernel_search_fs_sysctls(certbot_t)
+
+allow certbot_t self:tcp_socket all_tcp_socket_perms;
+allow certbot_t self:netlink_route_socket create_netlink_socket_perms;
+corenet_tcp_bind_generic_node(certbot_t)
+corenet_tcp_connect_http_port(certbot_t)
+
+# bind to http port for standalone mode
+corenet_tcp_bind_http_port(certbot_t)
+
+allow certbot_t self:udp_socket all_udp_socket_perms;
+sysnet_read_config(certbot_t)
+files_read_etc_files(certbot_t)
+
+# for /usr/bin/x86_64-linux-gnu-gcc-8 why?
+corecmd_exec_bin(certbot_t)
+# for /usr/lib/gcc/x86_64-linux-gnu/8/collect2
+libs_exec_lib_files(certbot_t)
+
+libs_exec_ldconfig(certbot_t)
+
+apache_search_config(certbot_t)
+
+# for bin_t map
+corecmd_bin_entry_type(certbot_t)
+corecmd_list_bin(certbot_t)
+miscfiles_read_localization(certbot_t)
+
+miscfiles_read_generic_certs(certbot_t)
+miscfiles_manage_generic_tls_privkey_dirs(certbot_t)
+miscfiles_manage_generic_tls_privkey_files(certbot_t)
+miscfiles_manage_generic_tls_privkey_lnk_files(certbot_t)
+
+manage_files_pattern(certbot_t, certbot_var_run_t, certbot_var_run_t)
+files_pid_filetrans(certbot_t, certbot_var_run_t, file)
+
+logging_search_logs(certbot_t)
+allow certbot_t certbot_log_t:dir manage_dir_perms;
+allow certbot_t certbot_log_t:file manage_file_perms;
+
+files_search_var_lib(certbot_t)
+manage_dirs_pattern(certbot_t, certbot_var_lib_t, certbot_var_lib_t)
+manage_files_pattern(certbot_t, certbot_var_lib_t, certbot_var_lib_t)
+
+manage_files_pattern(certbot_t, certbot_tmp_t, certbot_tmp_t)
+files_tmp_filetrans(certbot_t, certbot_tmp_t, { file })
+
+manage_files_pattern(certbot_t, certbot_tmpfs_t, certbot_tmpfs_t)
+fs_tmpfs_filetrans(certbot_t, certbot_tmpfs_t, { file })
+
+domain_use_interactive_fds(certbot_t)
+userdom_use_user_ptys(certbot_t)
+userdom_dontaudit_search_user_home_dirs(certbot_t)
+
+optional_policy(`
+	# for writing to webroot
+	apache_manage_sys_content(certbot_t)
+')
diff --git a/policy/modules/services/clamav.te b/policy/modules/services/clamav.te
index 9f3e543..06d69be 100644
--- a/policy/modules/services/clamav.te
+++ b/policy/modules/services/clamav.te
@@ -146,6 +146,7 @@ auth_use_nsswitch(clamd_t)
 
 logging_send_syslog_msg(clamd_t)
 
+miscfiles_read_generic_certs(clamd_t)
 miscfiles_read_localization(clamd_t)
 
 tunable_policy(`clamd_use_jit',`
@@ -235,6 +236,7 @@ auth_use_nsswitch(freshclam_t)
 
 logging_send_syslog_msg(freshclam_t)
 
+miscfiles_read_generic_certs(freshclam_t)
 miscfiles_read_localization(freshclam_t)
 
 tunable_policy(`clamd_use_jit',`
diff --git a/policy/modules/services/cron.if b/policy/modules/services/cron.if
index 89d2321..92e4520 100644
--- a/policy/modules/services/cron.if
+++ b/policy/modules/services/cron.if
@@ -855,9 +855,30 @@ interface(`cron_read_system_job_tmp_files',`
 	')
 
 	files_search_tmp($1)
+	allow $1 system_cronjob_tmp_t:dir search_dir_perms;
 	allow $1 system_cronjob_tmp_t:file read_file_perms;
 ')
 
+########################################
+## <summary>
+##	Read/write system cron job temporary files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`cron_rw_system_job_tmp_files',`
+	gen_require(`
+		type system_cronjob_tmp_t;
+	')
+
+	files_search_tmp($1)
+	allow $1 system_cronjob_tmp_t:dir search_dir_perms;
+	allow $1 system_cronjob_tmp_t:file rw_file_perms;
+')
+
 ########################################
 ## <summary>
 ##	Do not audit attempts to append temporary
diff --git a/policy/modules/services/cron.te b/policy/modules/services/cron.te
index 34654f1..f441907 100644
--- a/policy/modules/services/cron.te
+++ b/policy/modules/services/cron.te
@@ -509,6 +509,7 @@ corenet_tcp_sendrecv_generic_if(system_cronjob_t)
 corenet_udp_sendrecv_generic_if(system_cronjob_t)
 corenet_tcp_sendrecv_generic_node(system_cronjob_t)
 corenet_udp_sendrecv_generic_node(system_cronjob_t)
+corenet_udp_bind_generic_node(system_cronjob_t)
 
 dev_getattr_all_blk_files(system_cronjob_t)
 dev_getattr_all_chr_files(system_cronjob_t)
@@ -661,6 +662,7 @@ optional_policy(`
 
 optional_policy(`
 	spamassassin_manage_lib_files(system_cronjob_t)
+	spamassassin_service_reload(system_cronjob_t)
 ')
 
 optional_policy(`
diff --git a/policy/modules/services/dbus.if b/policy/modules/services/dbus.if
index f1b4a9d..ce8df1d 100644
--- a/policy/modules/services/dbus.if
+++ b/policy/modules/services/dbus.if
@@ -75,6 +75,9 @@ template(`dbus_role_template',`
 	domain_entry_file($1_dbusd_t, dbusd_exec_t)
 	ubac_constrained($1_dbusd_t)
 
+	# for .xsession-errors
+	userdom_append_inherited_user_home_content_files($1_dbusd_t)
+
 	role $2 types $1_dbusd_t;
 
 	##############################
@@ -82,8 +85,9 @@ template(`dbus_role_template',`
 	# Local policy
 	#
 
-	allow $3 $1_dbusd_t:unix_stream_socket connectto;
+	allow $3 $1_dbusd_t:unix_stream_socket { connectto rw_socket_perms };
 	allow $3 $1_dbusd_t:dbus { send_msg acquire_svc };
+	allow $1_dbusd_t $3:dbus send_msg;
 	allow $3 $1_dbusd_t:fd use;
 
 	allow $3 system_dbusd_t:dbus { send_msg acquire_svc };
@@ -99,15 +103,25 @@ template(`dbus_role_template',`
 
 	allow $1_dbusd_t $3:process sigkill;
 
+	allow $1_dbusd_t self:process getcap;
+
 	corecmd_bin_domtrans($1_dbusd_t, $3)
 	corecmd_shell_domtrans($1_dbusd_t, $3)
 
+	dev_read_sysfs($1_dbusd_t)
+	xdg_read_data_files($1_dbusd_t)
+
 	auth_use_nsswitch($1_dbusd_t)
 
 	ifdef(`hide_broken_symptoms',`
 		dontaudit $3 $1_dbusd_t:netlink_selinux_socket { read write };
 	')
 
+	optional_policy(`
+		init_dbus_chat($1_dbusd_t)
+		dbus_system_bus_client($1_dbusd_t)
+	')
+
 	optional_policy(`
 		systemd_read_logind_pids($1_dbusd_t)
 	')
@@ -213,7 +227,7 @@ interface(`dbus_all_session_bus_client',`
 	allow $1 { session_bus_type self }:dbus send_msg;
 	allow session_bus_type $1:dbus send_msg;
 
-	allow $1 session_bus_type:unix_stream_socket connectto;
+	allow $1 session_bus_type:unix_stream_socket { connectto rw_socket_perms };
 	allow $1 session_bus_type:fd use;
 ')
 
@@ -246,7 +260,7 @@ interface(`dbus_spec_session_bus_client',`
 	allow $2 { $1_dbusd_t self }:dbus send_msg;
 	allow $1_dbusd_t $2:dbus send_msg;
 
-	allow $2 $1_dbusd_t:unix_stream_socket connectto;
+	allow $2 $1_dbusd_t:unix_stream_socket { connectto rw_socket_perms };
 	allow $2 $1_dbusd_t:fd use;
 ')
 
diff --git a/policy/modules/services/dkim.te b/policy/modules/services/dkim.te
index 03c8fc6..31baec9 100644
--- a/policy/modules/services/dkim.te
+++ b/policy/modules/services/dkim.te
@@ -44,6 +44,8 @@ files_pid_filetrans(dkim_milter_t, dkim_milter_data_t, { dir file })
 files_read_usr_files(dkim_milter_t)
 files_search_spool(dkim_milter_t)
 
+miscfiles_read_generic_certs(dkim_milter_t)
+
 optional_policy(`
 	mta_read_config(dkim_milter_t)
 ')
diff --git a/policy/modules/services/dovecot.te b/policy/modules/services/dovecot.te
index d32813a..7760551 100644
--- a/policy/modules/services/dovecot.te
+++ b/policy/modules/services/dovecot.te
@@ -173,6 +173,7 @@ files_read_usr_files(dovecot_t)
 
 fs_getattr_all_fs(dovecot_t)
 fs_getattr_all_dirs(dovecot_t)
+fs_read_tmpfs_symlinks(dovecot_t)
 fs_search_auto_mountpoints(dovecot_t)
 fs_list_inotifyfs(dovecot_t)
 
@@ -269,7 +270,12 @@ selinux_get_fs_mount(dovecot_auth_t)
 auth_domtrans_chk_passwd(dovecot_auth_t)
 auth_use_nsswitch(dovecot_auth_t)
 
+fs_search_tmpfs(dovecot_auth_t)
+fs_read_tmpfs_symlinks(dovecot_auth_t)
+
 init_rw_utmp(dovecot_auth_t)
+init_rw_inherited_stream_socket(dovecot_auth_t)
+init_use_fds(dovecot_auth_t)
 
 logging_send_audit_msgs(dovecot_auth_t)
 
diff --git a/policy/modules/services/entropyd.te b/policy/modules/services/entropyd.te
index b29b01c..e14c9ef 100644
--- a/policy/modules/services/entropyd.te
+++ b/policy/modules/services/entropyd.te
@@ -55,6 +55,7 @@ files_read_usr_files(entropyd_t)
 
 fs_getattr_all_fs(entropyd_t)
 fs_search_auto_mountpoints(entropyd_t)
+fs_search_tmpfs(entropyd_t)
 
 domain_use_interactive_fds(entropyd_t)
 
diff --git a/policy/modules/services/fail2ban.te b/policy/modules/services/fail2ban.te
index dde1171..50cf01a 100644
--- a/policy/modules/services/fail2ban.te
+++ b/policy/modules/services/fail2ban.te
@@ -63,6 +63,7 @@ manage_files_pattern(fail2ban_t, fail2ban_runtime_t, fail2ban_runtime_t)
 files_pid_filetrans(fail2ban_t, fail2ban_runtime_t, file)
 
 kernel_read_system_state(fail2ban_t)
+kernel_search_fs_sysctls(fail2ban_t)
 
 corecmd_exec_bin(fail2ban_t)
 corecmd_exec_shell(fail2ban_t)
@@ -91,6 +92,7 @@ fs_getattr_all_fs(fail2ban_t)
 auth_use_nsswitch(fail2ban_t)
 
 logging_read_all_logs(fail2ban_t)
+logging_read_audit_log(fail2ban_t)
 logging_send_syslog_msg(fail2ban_t)
 
 miscfiles_read_localization(fail2ban_t)
@@ -140,12 +142,16 @@ corecmd_exec_bin(fail2ban_client_t)
 
 domain_use_interactive_fds(fail2ban_client_t)
 
+# for /run/fail2ban
+allow fail2ban_client_t fail2ban_var_run_t:dir write;
+
 files_read_etc_files(fail2ban_client_t)
 files_read_usr_files(fail2ban_client_t)
 files_search_pids(fail2ban_client_t)
 
 logging_getattr_all_logs(fail2ban_client_t)
 logging_search_all_logs(fail2ban_client_t)
+logging_read_audit_log(fail2ban_client_t)
 
 miscfiles_read_localization(fail2ban_client_t)
 
diff --git a/policy/modules/services/jabber.te b/policy/modules/services/jabber.te
index 183a1d3..5d59ee3 100644
--- a/policy/modules/services/jabber.te
+++ b/policy/modules/services/jabber.te
@@ -111,8 +111,11 @@ files_read_etc_runtime_files(jabberd_t)
 # usr for lua modules
 files_read_usr_files(jabberd_t)
 
+files_search_var_lib(jabberd_t)
+
 fs_search_auto_mountpoints(jabberd_t)
 
+miscfiles_read_generic_tls_privkey(jabberd_t)
 miscfiles_read_all_certs(jabberd_t)
 
 sysnet_read_config(jabberd_t)
diff --git a/policy/modules/services/mailman.if b/policy/modules/services/mailman.if
index 259f0c3..52e3714 100644
--- a/policy/modules/services/mailman.if
+++ b/policy/modules/services/mailman.if
@@ -319,6 +319,7 @@ interface(`mailman_read_archive',`
 	files_search_var_lib($1)
 	allow $1 mailman_archive_t:dir list_dir_perms;
 	read_files_pattern($1, mailman_archive_t, mailman_archive_t)
+	allow $1 mailman_archive_t:file map;
 	read_lnk_files_pattern($1, mailman_archive_t, mailman_archive_t)
 ')
 
diff --git a/policy/modules/services/mon.te b/policy/modules/services/mon.te
index f85c1ca..2908254 100644
--- a/policy/modules/services/mon.te
+++ b/policy/modules/services/mon.te
@@ -147,6 +147,11 @@ optional_policy(`
 	bind_read_zone(mon_net_test_t)
 ')
 
+optional_policy(`
+	mysql_search_pid_files(mon_net_test_t)
+	mysql_stream_connect(mon_net_test_t)
+')
+
 ########################################
 #
 # Local policy
diff --git a/policy/modules/services/monit.te b/policy/modules/services/monit.te
index e250a00..3c6a89a 100644
--- a/policy/modules/services/monit.te
+++ b/policy/modules/services/monit.te
@@ -34,6 +34,7 @@ type monit_log_t;
 logging_log_file(monit_log_t)
 
 type monit_runtime_t alias monit_pid_t;
+typealias monit_runtime_t alias monit_run_t;
 files_pid_file(monit_runtime_t)
 
 type monit_unit_t;
diff --git a/policy/modules/services/mta.if b/policy/modules/services/mta.if
index 7c3154d..b0ce28b 100644
--- a/policy/modules/services/mta.if
+++ b/policy/modules/services/mta.if
@@ -251,6 +251,7 @@ interface(`mta_manage_mail_home_rw_content',`
 	userdom_search_user_home_dirs($1)
 	manage_dirs_pattern($1, mail_home_rw_t, mail_home_rw_t)
 	manage_files_pattern($1, mail_home_rw_t, mail_home_rw_t)
+	allow $1 mail_home_rw_t:file map;
 	manage_lnk_files_pattern($1, mail_home_rw_t, mail_home_rw_t)
 ')
 
@@ -867,6 +868,7 @@ interface(`mta_read_spool_files',`
 
 	files_search_spool($1)
 	read_files_pattern($1, mail_spool_t, mail_spool_t)
+	allow $1 mail_spool_t:file map;
 ')
 
 ########################################
@@ -949,6 +951,7 @@ interface(`mta_manage_spool',`
 	files_search_spool($1)
 	manage_dirs_pattern($1, mail_spool_t, mail_spool_t)
 	manage_files_pattern($1, mail_spool_t, mail_spool_t)
+	allow $1 mail_spool_t:file map;
 	manage_lnk_files_pattern($1, mail_spool_t, mail_spool_t)
 ')
 
diff --git a/policy/modules/services/mysql.if b/policy/modules/services/mysql.if
index a98f8c4..75f6bd6 100644
--- a/policy/modules/services/mysql.if
+++ b/policy/modules/services/mysql.if
@@ -59,7 +59,7 @@ interface(`mysql_signal',`
 		type mysqld_t;
 	')
 
-	allow $1 mysqld_t:process signal;
+	allow $1 mysqld_t:process { signull signal };
 ')
 
 ########################################
diff --git a/policy/modules/services/mysql.te b/policy/modules/services/mysql.te
index 922c8b8..02f3ca2 100644
--- a/policy/modules/services/mysql.te
+++ b/policy/modules/services/mysql.te
@@ -75,6 +75,7 @@ allow mysqld_t self:tcp_socket { accept listen };
 
 manage_dirs_pattern(mysqld_t, mysqld_db_t, mysqld_db_t)
 manage_files_pattern(mysqld_t, mysqld_db_t, mysqld_db_t)
+allow mysqld_t mysqld_db_t:file map;
 manage_lnk_files_pattern(mysqld_t, mysqld_db_t, mysqld_db_t)
 files_var_lib_filetrans(mysqld_t, mysqld_db_t, { dir file lnk_file })
 
@@ -124,6 +125,7 @@ domain_use_interactive_fds(mysqld_t)
 
 fs_getattr_all_fs(mysqld_t)
 fs_search_auto_mountpoints(mysqld_t)
+fs_search_tmpfs(mysqld_t)
 fs_rw_hugetlbfs_files(mysqld_t)
 
 files_read_etc_runtime_files(mysqld_t)
@@ -133,6 +135,7 @@ auth_use_nsswitch(mysqld_t)
 
 logging_send_syslog_msg(mysqld_t)
 
+miscfiles_read_generic_certs(mysqld_t)
 miscfiles_read_localization(mysqld_t)
 
 userdom_search_user_home_dirs(mysqld_t)
diff --git a/policy/modules/services/postfix.te b/policy/modules/services/postfix.te
index c3c6ee1..2c66ff5 100644
--- a/policy/modules/services/postfix.te
+++ b/policy/modules/services/postfix.te
@@ -336,6 +336,7 @@ optional_policy(`
 ')
 
 optional_policy(`
+	mysql_read_config(postfix_master_t)
 	mysql_stream_connect(postfix_master_t)
 ')
 
@@ -426,6 +427,10 @@ optional_policy(`
 	mailman_read_data_files(postfix_cleanup_t)
 ')
 
+optional_policy(`
+	mysql_read_config(postfix_cleanup_t)
+')
+
 optional_policy(`
 	dbus_send_system_bus(postfix_cleanup_t)
 	dbus_system_bus_client(postfix_cleanup_t)
@@ -825,6 +830,10 @@ optional_policy(`
 	milter_stream_connect_all(postfix_smtpd_t)
 ')
 
+optional_policy(`
+	mysql_read_config(postfix_smtpd_t)
+')
+
 optional_policy(`
 	postgrey_stream_connect(postfix_smtpd_t)
 ')
diff --git a/policy/modules/services/postgrey.te b/policy/modules/services/postgrey.te
index c4c3e10..8a1d02b 100644
--- a/policy/modules/services/postgrey.te
+++ b/policy/modules/services/postgrey.te
@@ -47,6 +47,7 @@ manage_fifo_files_pattern(postgrey_t, postgrey_spool_t, postgrey_spool_t)
 manage_sock_files_pattern(postgrey_t, postgrey_spool_t, postgrey_spool_t)
 
 manage_files_pattern(postgrey_t, postgrey_var_lib_t, postgrey_var_lib_t)
+allow postgrey_t postgrey_var_lib_t:file map;
 files_var_lib_filetrans(postgrey_t, postgrey_var_lib_t, file)
 
 manage_dirs_pattern(postgrey_t, postgrey_runtime_t, postgrey_runtime_t)
diff --git a/policy/modules/services/smartmon.te b/policy/modules/services/smartmon.te
index 5477e93..a1bb00d 100644
--- a/policy/modules/services/smartmon.te
+++ b/policy/modules/services/smartmon.te
@@ -38,7 +38,7 @@ ifdef(`enable_mls',`
 # Local policy
 #
 
-allow fsdaemon_t self:capability { dac_override kill setgid setpcap sys_admin sys_rawio };
+allow fsdaemon_t self:capability { dac_override kill setgid setuid setpcap sys_admin sys_rawio };
 dontaudit fsdaemon_t self:capability sys_tty_config;
 allow fsdaemon_t self:process { getcap setcap signal_perms };
 allow fsdaemon_t self:fifo_file rw_fifo_file_perms;
diff --git a/policy/modules/services/spamassassin.if b/policy/modules/services/spamassassin.if
index 7a3701d..de835c9 100644
--- a/policy/modules/services/spamassassin.if
+++ b/policy/modules/services/spamassassin.if
@@ -433,3 +433,22 @@ interface(`spamassassin_admin',`
 	# sa-update
 	spamassassin_run_update($1, $2)
 ')
+
+########################################
+## <summary>
+##	Get SA service status
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`spamassassin_service_reload',`
+	gen_require(`
+		type spamassassin_unit_t;
+	')
+
+	allow $1 spamassassin_unit_t:service { status reload };
+')
diff --git a/policy/modules/services/spamassassin.te b/policy/modules/services/spamassassin.te
index ad61914..8dddbf6 100644
--- a/policy/modules/services/spamassassin.te
+++ b/policy/modules/services/spamassassin.te
@@ -22,6 +22,7 @@ gen_tunable(spamassassin_can_network, false)
 gen_tunable(spamd_enable_home_dirs, false)
 
 type spamd_update_t;
+typealias spamd_update_t alias { spamd_gpg_t };
 type spamd_update_exec_t;
 init_system_domain(spamd_update_t, spamd_update_exec_t)
 
@@ -62,9 +63,6 @@ files_type(spamd_compiled_t)
 type spamd_etc_t;
 files_config_file(spamd_etc_t)
 
-type spamd_gpg_t;
-domain_type(spamd_gpg_t)
-
 type spamd_home_t;
 userdom_user_home_content(spamd_home_t)
 
@@ -351,6 +349,7 @@ corenet_udp_bind_imaze_port(spamd_t)
 
 corenet_dontaudit_udp_bind_all_ports(spamd_t)
 
+corecmd_exec_shell(spamd_t)
 corecmd_exec_bin(spamd_t)
 
 dev_read_sysfs(spamd_t)
@@ -358,6 +357,7 @@ dev_read_urand(spamd_t)
 
 domain_use_interactive_fds(spamd_t)
 
+files_map_etc_files(spamd_t)
 files_read_usr_files(spamd_t)
 files_read_etc_runtime_files(spamd_t)
 
@@ -372,6 +372,7 @@ libs_use_shared_libs(spamd_t)
 
 logging_send_syslog_msg(spamd_t)
 
+miscfiles_read_generic_certs(spamd_t)
 miscfiles_read_localization(spamd_t)
 
 sysnet_use_ldap(spamd_t)
@@ -487,6 +488,7 @@ manage_dirs_pattern(spamd_update_t, spamd_var_lib_t, spamd_var_lib_t)
 manage_files_pattern(spamd_update_t, spamd_var_lib_t, spamd_var_lib_t)
 manage_lnk_files_pattern(spamd_update_t, spamd_var_lib_t, spamd_var_lib_t)
 
+kernel_search_fs_sysctls(spamd_update_t)
 kernel_read_system_state(spamd_update_t)
 
 corecmd_exec_bin(spamd_update_t)
@@ -512,6 +514,7 @@ fs_getattr_xattr_fs(spamd_update_t)
 auth_use_nsswitch(spamd_update_t)
 auth_dontaudit_read_shadow(spamd_update_t)
 
+miscfiles_read_generic_certs(spamd_update_t)
 miscfiles_read_localization(spamd_update_t)
 
 userdom_use_inherited_user_terminals(spamd_update_t)
@@ -523,35 +526,5 @@ optional_policy(`
 ')
 
 optional_policy(`
-	gpg_spec_domtrans(spamd_update_t, spamd_gpg_t)
-	gpg_entry_type(spamd_gpg_t)
-	role system_r types spamd_gpg_t;
-
-	allow spamd_gpg_t self:capability { dac_override dac_read_search };
-	allow spamd_gpg_t self:unix_stream_socket { connect create };
-
-	allow spamd_gpg_t spamd_update_t:fd use;
-	allow spamd_gpg_t spamd_update_t:process sigchld;
-	allow spamd_gpg_t spamd_update_t:fifo_file { getattr write };
-	allow spamd_gpg_t spamd_var_lib_t:dir rw_dir_perms;
-	allow spamd_gpg_t spamd_var_lib_t:file manage_file_perms;
-	allow spamd_gpg_t spamd_update_tmp_t:file read_file_perms;
-
-	# fips
-	kernel_read_crypto_sysctls(spamd_gpg_t)
-
-	domain_use_interactive_fds(spamd_gpg_t)
-
-	files_read_etc_files(spamd_gpg_t)
-	files_read_usr_files(spamd_gpg_t)
-	files_search_var_lib(spamd_gpg_t)
-	files_search_pids(spamd_gpg_t)
-	files_search_tmp(spamd_gpg_t)
-
-	init_use_fds(spamd_gpg_t)
-	init_rw_inherited_stream_socket(spamd_gpg_t)
-
-	miscfiles_read_localization(spamd_gpg_t)
-
-	userdom_use_inherited_user_terminals(spamd_gpg_t)
+	gpg_exec(spamd_update_t)
 ')
diff --git a/policy/modules/services/squid.te b/policy/modules/services/squid.te
index 2082a6d..54887fd 100644
--- a/policy/modules/services/squid.te
+++ b/policy/modules/services/squid.te
@@ -71,6 +71,7 @@ allow squid_t self:msg { send receive };
 allow squid_t self:unix_dgram_socket sendto;
 allow squid_t self:unix_stream_socket { accept connectto listen };
 allow squid_t self:tcp_socket { accept listen };
+allow squid_t self:netlink_netfilter_socket all_netlink_netfilter_socket_perms;
 
 manage_dirs_pattern(squid_t, squid_cache_t, squid_cache_t)
 manage_files_pattern(squid_t, squid_cache_t, squid_cache_t)
@@ -91,6 +92,7 @@ manage_files_pattern(squid_t, squid_tmp_t, squid_tmp_t)
 files_tmp_filetrans(squid_t, squid_tmp_t, { file dir })
 
 manage_files_pattern(squid_t, squid_tmpfs_t, squid_tmpfs_t)
+allow squid_t squid_tmpfs_t:file map;
 fs_tmpfs_filetrans(squid_t, squid_tmpfs_t, file)
 
 manage_files_pattern(squid_t, squid_runtime_t, squid_runtime_t)
diff --git a/policy/modules/services/ssh.if b/policy/modules/services/ssh.if
index 4775c58..200052b 100644
--- a/policy/modules/services/ssh.if
+++ b/policy/modules/services/ssh.if
@@ -371,6 +371,7 @@ template(`ssh_role_template',`
 	ps_process_pattern($3, $1_ssh_agent_t)
 
 	domtrans_pattern($3, ssh_agent_exec_t, $1_ssh_agent_t)
+	userdom_append_inherited_user_home_content_files($1_ssh_agent_t)
 
 	kernel_read_kernel_sysctls($1_ssh_agent_t)
 
@@ -437,6 +438,7 @@ template(`ssh_role_template',`
 		xserver_use_xdm_fds($1_ssh_agent_t)
 		xserver_rw_xdm_pipes($1_ssh_agent_t)
 		xserver_sigchld_xdm($1_ssh_agent_t)
+		xserver_write_inherited_xsession_log($1_ssh_agent_t)
 	')
 ')
 
diff --git a/policy/modules/services/ssh.te b/policy/modules/services/ssh.te
index 53261e9..68d3885 100644
--- a/policy/modules/services/ssh.te
+++ b/policy/modules/services/ssh.te
@@ -272,6 +272,7 @@ ifdef(`init_systemd',`
 	init_dbus_chat(sshd_t)
 	systemd_dbus_chat_logind(sshd_t)
 	init_rw_stream_sockets(sshd_t)
+	systemd_read_logind_sessions_files(sshd_t)
 ')
 
 tunable_policy(`ssh_sysadm_login',`
diff --git a/policy/modules/services/tor.te b/policy/modules/services/tor.te
index c92d20e..02f07c7 100644
--- a/policy/modules/services/tor.te
+++ b/policy/modules/services/tor.te
@@ -74,6 +74,7 @@ files_pid_filetrans(tor_t, tor_runtime_t, { dir file sock_file })
 kernel_read_kernel_sysctls(tor_t)
 kernel_read_net_sysctls(tor_t)
 kernel_read_system_state(tor_t)
+kernel_read_vm_overcommit_sysctl(tor_t)
 
 corenet_all_recvfrom_unlabeled(tor_t)
 corenet_all_recvfrom_netlabel(tor_t)
diff --git a/policy/modules/services/xserver.if b/policy/modules/services/xserver.if
index c95a6b0..1bef057 100644
--- a/policy/modules/services/xserver.if
+++ b/policy/modules/services/xserver.if
@@ -102,6 +102,7 @@ interface(`xserver_restricted_role',`
 	xserver_xsession_entry_type($2)
 	xserver_dontaudit_write_log($2)
 	xserver_stream_connect_xdm($2)
+	xserver_use_user_fonts($2)
 	# certain apps want to read xdm.pid file
 	xserver_read_xdm_pid($2)
 	# gnome-session creates socket under /tmp/.ICE-unix/
@@ -140,7 +141,7 @@ interface(`xserver_role',`
 	gen_require(`
 		type iceauth_home_t, xserver_t, xserver_tmp_t, xserver_tmpfs_t, xauth_home_t;
 		type user_fonts_t, user_fonts_cache_t, user_fonts_config_t;
-		type mesa_shader_cache_t;
+		type mesa_shader_cache_t, xdm_t;
 	')
 
 	xserver_restricted_role($1, $2)
@@ -183,6 +184,8 @@ interface(`xserver_role',`
 
 	xserver_read_xkb_libs($2)
 
+	allow $2 xdm_t:unix_stream_socket accept;
+
 	optional_policy(`
 		xdg_manage_all_cache($2)
 		xdg_relabel_all_cache($2)
@@ -1251,6 +1254,7 @@ interface(`xserver_read_xkb_libs',`
 	allow $1 xkb_var_lib_t:dir list_dir_perms;
 	read_files_pattern($1, xkb_var_lib_t, xkb_var_lib_t)
 	read_lnk_files_pattern($1, xkb_var_lib_t, xkb_var_lib_t)
+	allow $1 xkb_var_lib_t:file map;
 ')
 
 ########################################
diff --git a/policy/modules/system/authlogin.te b/policy/modules/system/authlogin.te
index 604cf27..81875af 100644
--- a/policy/modules/system/authlogin.te
+++ b/policy/modules/system/authlogin.te
@@ -98,12 +98,13 @@ optional_policy(`
 
 allow chkpwd_t self:capability { dac_override setuid };
 dontaudit chkpwd_t self:capability sys_tty_config;
-allow chkpwd_t self:process { getattr signal };
+allow chkpwd_t self:process { getcap getattr signal };
 
 allow chkpwd_t shadow_t:file read_file_perms;
 files_list_etc(chkpwd_t)
 
 kernel_read_crypto_sysctls(chkpwd_t)
+kernel_read_kernel_sysctls(chkpwd_t)
 # is_selinux_enabled
 kernel_read_system_state(chkpwd_t)
 
@@ -118,6 +119,7 @@ files_read_etc_files(chkpwd_t)
 files_dontaudit_search_var(chkpwd_t)
 
 fs_dontaudit_getattr_xattr_fs(chkpwd_t)
+fs_search_tmpfs(chkpwd_t)
 
 selinux_get_enforce_mode(chkpwd_t)
 selinux_getattr_fs(chkpwd_t)
diff --git a/policy/modules/system/fstools.te b/policy/modules/system/fstools.te
index 7172218..feddd9c 100644
--- a/policy/modules/system/fstools.te
+++ b/policy/modules/system/fstools.te
@@ -150,6 +150,11 @@ init_use_script_ptys(fsadm_t)
 init_dontaudit_getattr_initctl(fsadm_t)
 init_rw_script_stream_sockets(fsadm_t)
 
+ifdef(`hide_broken_symptoms',`
+	# for /run/pm-utils/locks/pm-powersave.lock
+	init_read_utmp(fsadm_t)
+')
+
 logging_send_syslog_msg(fsadm_t)
 
 miscfiles_read_localization(fsadm_t)
diff --git a/policy/modules/system/init.if b/policy/modules/system/init.if
index f941e57..b7e6e49 100644
--- a/policy/modules/system/init.if
+++ b/policy/modules/system/init.if
@@ -178,7 +178,11 @@ interface(`init_domain',`
 
 	role system_r types $1;
 
-	domtrans_pattern(init_t, $2, $1)
+	ifdef(`init_systemd', `
+		domtrans_pattern(init_t, $2, $1)
+		allow init_t $1:unix_stream_socket create_stream_socket_perms;
+		allow $1 init_t:unix_dgram_socket sendto;
+	')
 
 	allow init_t $1:process rlimitinh;
 
diff --git a/policy/modules/system/lvm.if b/policy/modules/system/lvm.if
index b20362c..3870007 100644
--- a/policy/modules/system/lvm.if
+++ b/policy/modules/system/lvm.if
@@ -222,3 +222,21 @@ interface(`lvm_admin',`
 	files_search_tmp($1)
 	admin_pattern($1, lvm_tmp_t)
 ')
+
+######################################
+## <summary>
+##	Allow lvm_t to use a semaphore
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain that created the semaphore
+##	</summary>
+## </param>
+#
+interface(`lvm_use_sem',`
+	gen_require(`
+		type lvm_t;
+	')
+
+	allow lvm_t $1:sem all_sem_perms;
+')
diff --git a/policy/modules/system/lvm.te b/policy/modules/system/lvm.te
index a447fd4..46e6efb 100644
--- a/policy/modules/system/lvm.te
+++ b/policy/modules/system/lvm.te
@@ -345,6 +345,8 @@ optional_policy(`
 ')
 
 optional_policy(`
+	apt_use_fds(lvm_t)
+
 	dpkg_script_rw_pipes(lvm_t)
 ')
 
diff --git a/policy/modules/system/miscfiles.fc b/policy/modules/system/miscfiles.fc
index 2b1369f..b8538ed 100644
--- a/policy/modules/system/miscfiles.fc
+++ b/policy/modules/system/miscfiles.fc
@@ -14,6 +14,8 @@ ifdef(`distro_gentoo',`
 /etc/pki(/.*)?			gen_context(system_u:object_r:cert_t,s0)
 /etc/pki/.*/private(/.*)?	gen_context(system_u:object_r:tls_privkey_t,s0)
 /etc/ssl(/.*)?			gen_context(system_u:object_r:cert_t,s0)
+/etc/ssl/private(/.*)?		gen_context(system_u:object_r:tls_privkey_t,s0)
+/etc/letsencrypt(/.*)?		gen_context(system_u:object_r:tls_privkey_t,s0)
 /etc/timezone		--	gen_context(system_u:object_r:locale_t,s0)
 
 ifdef(`distro_debian',`
diff --git a/policy/modules/system/miscfiles.if b/policy/modules/system/miscfiles.if
index 47330a4..35be292 100644
--- a/policy/modules/system/miscfiles.if
+++ b/policy/modules/system/miscfiles.if
@@ -252,6 +252,26 @@ interface(`miscfiles_manage_generic_tls_privkey_files',`
 	read_lnk_files_pattern($1, tls_privkey_t, tls_privkey_t)
 ')
 
+########################################
+## <summary>
+##	Manage generic SSL/TLS private
+##	keys.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`miscfiles_manage_generic_tls_privkey_lnk_files',`
+	gen_require(`
+		type tls_privkey_t;
+	')
+
+	manage_lnk_files_pattern($1, tls_privkey_t, tls_privkey_t)
+')
+
 ########################################
 ## <summary>
 ##	Read fonts.
diff --git a/policy/modules/system/modutils.te b/policy/modules/system/modutils.te
index 0792509..d7f89d4 100644
--- a/policy/modules/system/modutils.te
+++ b/policy/modules/system/modutils.te
@@ -143,6 +143,8 @@ optional_policy(`
 	dpkg_manage_script_tmp_files(kmod_t)
 	dpkg_map_script_tmp_files(kmod_t)
 	dpkg_read_script_tmp_symlinks(kmod_t)
+	apt_use_fds(kmod_t)
+	apt_use_ptys(kmod_t)
 ')
 
 optional_policy(`
diff --git a/policy/modules/system/raid.fc b/policy/modules/system/raid.fc
index 84f1ab0..d5a9506 100644
--- a/policy/modules/system/raid.fc
+++ b/policy/modules/system/raid.fc
@@ -23,4 +23,6 @@
 /usr/sbin/mdmpd	--	gen_context(system_u:object_r:mdadm_exec_t,s0)
 /usr/sbin/raid-check	--	gen_context(system_u:object_r:mdadm_exec_t,s0)
 
+/usr/share/mdadm/checkarray --	gen_context(system_u:object_r:mdadm_exec_t,s0)
+
 /run/mdadm(/.*)?	gen_context(system_u:object_r:mdadm_runtime_t,s0)
diff --git a/policy/modules/system/raid.te b/policy/modules/system/raid.te
index 1cbd7e3..7edb98d 100644
--- a/policy/modules/system/raid.te
+++ b/policy/modules/system/raid.te
@@ -55,6 +55,7 @@ dev_dontaudit_getattr_all_chr_files(mdadm_t)
 dev_read_realtime_clock(mdadm_t)
 dev_read_raw_memory(mdadm_t)
 
+domain_dontaudit_search_all_domains_state(mdadm_t)
 domain_use_interactive_fds(mdadm_t)
 
 files_read_etc_files(mdadm_t)
@@ -91,6 +92,7 @@ userdom_dontaudit_use_user_terminals(mdadm_t)
 
 optional_policy(`
 	cron_system_entry(mdadm_t, mdadm_exec_t)
+	cron_rw_tmp_files(mdadm_t)
 ')
 
 optional_policy(`
diff --git a/policy/modules/system/sysnetwork.fc b/policy/modules/system/sysnetwork.fc
index efbfbde..64de910 100644
--- a/policy/modules/system/sysnetwork.fc
+++ b/policy/modules/system/sysnetwork.fc
@@ -27,6 +27,7 @@ ifdef(`distro_debian',`
 /etc/dhcp3?/dhclient.*		gen_context(system_u:object_r:dhcp_etc_t,s0)
 
 /etc/systemd/network(/.*)?	gen_context(system_u:object_r:net_conf_t,s0)
+/etc/tor/torsocks.conf	--	gen_context(system_u:object_r:net_conf_t,s0)
 
 ifdef(`distro_redhat',`
 /etc/sysconfig/network-scripts/.*resolv\.conf -- gen_context(system_u:object_r:net_conf_t,s0)
diff --git a/policy/modules/system/sysnetwork.te b/policy/modules/system/sysnetwork.te
index a2ae972..7a93f0d 100644
--- a/policy/modules/system/sysnetwork.te
+++ b/policy/modules/system/sysnetwork.te
@@ -337,6 +337,11 @@ files_dontaudit_read_root_files(ifconfig_t)
 init_use_fds(ifconfig_t)
 init_use_script_ptys(ifconfig_t)
 
+ifdef(`hide_broken_symptoms',`
+	# for /run/pm-utils/locks/pm-powersave.lock
+	init_read_utmp(ifconfig_t)
+')
+
 logging_send_syslog_msg(ifconfig_t)
 
 miscfiles_read_localization(ifconfig_t)
diff --git a/policy/modules/system/systemd.fc b/policy/modules/system/systemd.fc
index 43fdc95..fba57b8 100644
--- a/policy/modules/system/systemd.fc
+++ b/policy/modules/system/systemd.fc
@@ -5,7 +5,6 @@
 
 /run/log/journal(/.*)?				gen_context(system_u:object_r:systemd_journal_t,s0)
 
-/usr/bin/systemd-analyze		--	gen_context(system_u:object_r:systemd_analyze_exec_t,s0)
 /usr/bin/systemd-cgtop			--	gen_context(system_u:object_r:systemd_cgtop_exec_t,s0)
 /usr/bin/systemd-coredump		--	gen_context(system_u:object_r:systemd_coredump_exec_t,s0)
 /usr/bin/systemd-detect-virt		--	gen_context(system_u:object_r:systemd_detect_virt_exec_t,s0)
diff --git a/policy/modules/system/systemd.te b/policy/modules/system/systemd.te
index 8c0779e..9efd3b2 100644
--- a/policy/modules/system/systemd.te
+++ b/policy/modules/system/systemd.te
@@ -37,10 +37,6 @@ type systemd_activate_t;
 type systemd_activate_exec_t;
 init_system_domain(systemd_activate_t, systemd_activate_exec_t)
 
-type systemd_analyze_t;
-type systemd_analyze_exec_t;
-init_daemon_domain(systemd_analyze_t, systemd_analyze_exec_t)
-
 type systemd_backlight_t;
 type systemd_backlight_exec_t;
 init_system_domain(systemd_backlight_t, systemd_backlight_exec_t)
@@ -106,6 +102,7 @@ type systemd_hwdb_t;
 files_type(systemd_hwdb_t)
 
 type systemd_journal_t;
+typealias systemd_journal_t alias systemd_journal_log_t;
 files_type(systemd_journal_t)
 logging_log_file(systemd_journal_t)
 
@@ -347,10 +344,11 @@ ifdef(`enable_mls',`
 #
 
 allow systemd_coredump_t self:unix_dgram_socket { create write connect getopt setopt };
-allow systemd_coredump_t self:capability { setgid setuid setpcap };
+allow systemd_coredump_t self:capability { setgid setuid setpcap sys_ptrace };
 allow systemd_coredump_t self:process { getcap setcap setfscreate };
 
 manage_files_pattern(systemd_coredump_t, systemd_coredump_var_lib_t, systemd_coredump_var_lib_t)
+allow systemd_coredump_t systemd_coredump_var_lib_t:file map;
 
 kernel_domtrans_to(systemd_coredump_t, systemd_coredump_exec_t)
 kernel_read_kernel_sysctls(systemd_coredump_t)
@@ -367,6 +365,7 @@ files_read_etc_files(systemd_coredump_t)
 files_search_var_lib(systemd_coredump_t)
 
 fs_getattr_xattr_fs(systemd_coredump_t)
+fs_search_tmpfs(systemd_coredump_t)
 
 selinux_getattr_fs(systemd_coredump_t)
 
@@ -410,6 +409,10 @@ optional_policy(`
 	networkmanager_dbus_chat(systemd_hostnamed_t)
 ')
 
+optional_policy(`
+	unconfined_dbus_send(systemd_hostnamed_t)
+')
+
 #########################################
 #
 # hw local policy
@@ -1001,6 +1004,8 @@ optional_policy(`
 # Rfkill local policy
 #
 
+allow systemd_rfkill_t self:netlink_kobject_uevent_socket client_stream_socket_perms;
+
 manage_dirs_pattern(systemd_rfkill_t, systemd_rfkill_var_lib_t, systemd_rfkill_var_lib_t)
 manage_files_pattern(systemd_rfkill_t, systemd_rfkill_var_lib_t, systemd_rfkill_var_lib_t)
 init_var_lib_filetrans(systemd_rfkill_t, systemd_rfkill_var_lib_t, dir)
diff --git a/policy/modules/system/unconfined.te b/policy/modules/system/unconfined.te
index ce69479..ad175a4 100644
--- a/policy/modules/system/unconfined.te
+++ b/policy/modules/system/unconfined.te
@@ -86,6 +86,10 @@ optional_policy(`
 	bootloader_run(unconfined_t, unconfined_r)
 ')
 
+optional_policy(`
+	certbot_run(unconfined_r, unconfined_t)
+')
+
 optional_policy(`
 	cron_unconfined_role(unconfined_r, unconfined_t)
 ')
@@ -125,6 +129,7 @@ optional_policy(`
 
 optional_policy(`
 	lvm_run(unconfined_t, unconfined_r)
+	lvm_use_sem(unconfined_t)
 ')
 
 optional_policy(`
diff --git a/policy/modules/system/userdomain.if b/policy/modules/system/userdomain.if
index dd55585..0d50a7f 100644
--- a/policy/modules/system/userdomain.if
+++ b/policy/modules/system/userdomain.if
@@ -68,6 +68,8 @@ template(`userdom_base_user_template',`
 	dontaudit $1_t user_tty_device_t:chr_file ioctl;
 
 	kernel_read_kernel_sysctls($1_t)
+	kernel_read_crypto_sysctls($1_t)
+	kernel_read_vm_overcommit_sysctl($1_t)
 	kernel_dontaudit_list_unlabeled($1_t)
 	kernel_dontaudit_getattr_unlabeled_files($1_t)
 	kernel_dontaudit_getattr_unlabeled_symlinks($1_t)
@@ -110,11 +112,15 @@ template(`userdom_base_user_template',`
 
 	libs_exec_ld_so($1_t)
 
+	logging_send_syslog_msg($1_t)
+
 	miscfiles_read_localization($1_t)
 	miscfiles_read_generic_certs($1_t)
 
 	sysnet_read_config($1_t)
 
+	userdom_write_all_user_runtime_named_sockets($1_t)
+
 	# kdeinit wants systemd status
 	init_get_system_status($1_t)
 
@@ -860,6 +866,10 @@ template(`userdom_common_user_template',`
 		systemd_role_template($1, $1_r, $1_t)
 	')
 
+	optional_policy(`
+		udev_read_pid_files($1_t)
+	')
+
 	optional_policy(`
 		usernetctl_run($1_t, $1_r)
 	')
@@ -1208,6 +1218,15 @@ template(`userdom_unpriv_user_template', `
 
 	optional_policy(`
 		systemd_dbus_chat_logind($1_t)
+		systemd_use_logind_fds($1_t)
+		systemd_dbus_chat_hostnamed($1_t)
+		systemd_write_inherited_logind_inhibit_pipes($1_t)
+
+		# kwalletd5 inherits a socket from init
+		init_rw_inherited_stream_socket($1_t)
+		init_use_fds($1_t)
+		# for polkit-kde-auth
+		init_read_state($1_t)
 	')
 ')
 
@@ -2140,6 +2159,24 @@ interface(`userdom_dontaudit_append_user_home_content_files',`
 	dontaudit $1 user_home_t:file append_file_perms;
 ')
 
+########################################
+## <summary>
+##	Allow append on inherited user home files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to allow.
+##	</summary>
+## </param>
+#
+interface(`userdom_append_inherited_user_home_content_files',`
+	gen_require(`
+		type user_home_t;
+	')
+
+	allow $1 user_home_t:file { append getattr ioctl };
+')
+
 ########################################
 ## <summary>
 ##	Do not audit attempts to write user home files.
@@ -3518,6 +3555,25 @@ interface(`userdom_delete_all_user_runtime_named_sockets',`
 	allow $1 user_runtime_content_type:file delete_sock_file_perms;
 ')
 
+########################################
+## <summary>
+##	write user runtime socket files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_write_all_user_runtime_named_sockets',`
+	gen_require(`
+		attribute user_runtime_content_type;
+	')
+
+	allow $1 user_runtime_content_type:dir list_dir_perms;
+	allow $1 user_runtime_content_type:sock_file write;
+')
+
 ########################################
 ## <summary>
 ##	Create objects in the pid directory
diff --git a/policy/modules/system/xdg.if b/policy/modules/system/xdg.if
index 11fc430..3bbb3ec 100644
--- a/policy/modules/system/xdg.if
+++ b/policy/modules/system/xdg.if
@@ -793,6 +793,24 @@ interface(`xdg_relabel_all_data',`
 	userdom_search_user_home_dirs($1)
 ')
 
+########################################
+## <summary>
+##	Allow executing the xdg data home files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xdg_exec_data',`
+	gen_require(`
+		type xdg_data_t;
+	')
+
+	can_exec($1, xdg_data_t)
+')
+
 ########################################
 ## <summary>
 ##	Create objects in the user home dir with an automatic type transition to
diff --git a/policy/support/obj_perm_sets.spt b/policy/support/obj_perm_sets.spt
index feac40b..5d45db7 100644
--- a/policy/support/obj_perm_sets.spt
+++ b/policy/support/obj_perm_sets.spt
@@ -149,11 +149,6 @@ define(`relabel_dir_perms',`{ getattr relabelfrom relabelto }')
 define(`getattr_file_perms',`{ getattr }')
 define(`setattr_file_perms',`{ setattr }')
 define(`read_file_perms',`{ getattr open read lock ioctl }')
-# deprecated 20171213
-define(`mmap_file_perms',`
-	{ getattr open map read execute ioctl }
-	refpolicywarn(`mmap_file_perms is deprecated, please use mmap_exec_file_perms instead')
-')
 define(`mmap_read_inherited_file_perms',`{ getattr map read ioctl }')
 define(`mmap_read_file_perms',`{ getattr open map read ioctl }')
 define(`mmap_exec_inherited_file_perms',`{ getattr map read execute ioctl }')
-- 
2.27.0

