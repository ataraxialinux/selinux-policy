<summary>
	Policy modules for system functions from init to multi-user login.
</summary>
<module name="application" filename="policy/modules/system/application.if">
<summary>Policy for user executable applications.</summary>
<interface name="application_type" lineno="13">
<summary>
Make the specified type usable as an application domain.
</summary>
<param name="type">
<summary>
Type to be used as a domain type.
</summary>
</param>
</interface>
<interface name="application_executable_file" lineno="36">
<summary>
Make the specified type usable for files
that are exectuables, such as binary programs.
This does not include shared libraries.
</summary>
<param name="type">
<summary>
Type to be used for files.
</summary>
</param>
</interface>
<interface name="application_exec" lineno="56">
<summary>
Execute application executables in the caller domain.
</summary>
<param name="type">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="application_exec_all" lineno="75">
<summary>
Execute all executable files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="application_domain" lineno="110">
<summary>
Create a domain for applications.
</summary>
<desc>
<p>
Create a domain for applications.  Typically these are
programs that are run interactively.
</p>
<p>
The types will be made usable as a domain and file, making
calls to domain_type() and files_type() redundant.
</p>
</desc>
<param name="domain">
<summary>
Type to be used as an application domain.
</summary>
</param>
<param name="entry_point">
<summary>
Type of the program to be used as an entry point to this domain.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="application_signull" lineno="126">
<summary>
Send null signals to all application domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="application_dontaudit_signull" lineno="145">
<summary>
Do not audit attempts to send null signals
to all application domains.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="application_signal" lineno="163">
<summary>
Send general signals to all application domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="application_dontaudit_signal" lineno="182">
<summary>
Do not audit attempts to send general signals
to all application domains.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="application_dontaudit_sigkill" lineno="201">
<summary>
Do not audit attempts to send kill signals
to all application domains.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
</module>
<module name="authlogin" filename="policy/modules/system/authlogin.if">
<summary>Common policy for authentication and user login.</summary>
<interface name="auth_role" lineno="18">
<summary>
Role access for password authentication.
</summary>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_use_pam" lineno="43">
<summary>
Use PAM for authentication.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_use_pam_systemd" lineno="96">
<summary>
Use the pam module systemd during authentication.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_use_pam_motd_dynamic" lineno="113">
<summary>
Use the pam module motd with dynamic support during authentication.
This module comes from Ubuntu (https://bugs.launchpad.net/ubuntu/+source/pam/+bug/399071)
and was added to Debian (https://sources.debian.org/src/pam/1.3.1-5/debian/patches-applied/update-motd/)
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_login_pgm_domain" lineno="137">
<summary>
Make the specified domain used for a login program.
</summary>
<param name="domain">
<summary>
Domain type used for a login program domain.
</summary>
</param>
</interface>
<interface name="auth_login_entry_type" lineno="224">
<summary>
Use the login program as an entry point program.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_domtrans_login_program" lineno="247">
<summary>
Execute a login_program in the target domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="target_domain">
<summary>
The type of the login_program process.
</summary>
</param>
</interface>
<interface name="auth_ranged_domtrans_login_program" lineno="277">
<summary>
Execute a login_program in the target domain,
with a range transition.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="target_domain">
<summary>
The type of the login_program process.
</summary>
</param>
<param name="range">
<summary>
Range of the login program.
</summary>
</param>
</interface>
<interface name="auth_search_cache" lineno="303">
<summary>
Search authentication cache
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_read_cache" lineno="321">
<summary>
Read authentication cache
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_rw_cache" lineno="339">
<summary>
Read/Write authentication cache
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_manage_cache" lineno="357">
<summary>
Manage authentication cache
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_var_filetrans_cache" lineno="376">
<summary>
Automatic transition from cache_t to cache.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_domtrans_chk_passwd" lineno="394">
<summary>
Run unix_chkpwd to check a password.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="auth_domtrans_chkpwd" lineno="442">
<summary>
Run unix_chkpwd to check a password.
Stripped down version to be called within boolean
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="auth_run_chk_passwd" lineno="468">
<summary>
Execute chkpwd programs in the chkpwd domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
The role to allow the chkpwd domain.
</summary>
</param>
</interface>
<interface name="auth_domtrans_upd_passwd" lineno="487">
<summary>
Execute a domain transition to run unix_update.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="auth_run_upd_passwd" lineno="512">
<summary>
Execute updpwd programs in the updpwd domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
The role to allow the updpwd domain.
</summary>
</param>
</interface>
<interface name="auth_getattr_shadow" lineno="531">
<summary>
Get the attributes of the shadow passwords file.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_dontaudit_getattr_shadow" lineno="551">
<summary>
Do not audit attempts to get the attributes
of the shadow passwords file.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="auth_read_shadow" lineno="573">
<summary>
Read the shadow passwords file (/etc/shadow)
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_can_read_shadow_passwords" lineno="597">
<summary>
Pass shadow assertion for reading.
</summary>
<desc>
<p>
Pass shadow assertion for reading.
This should only be used with
auth_tunable_read_shadow(), and
only exists because typeattribute
does not work in conditionals.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_tunable_read_shadow" lineno="623">
<summary>
Read the shadow password file.
</summary>
<desc>
<p>
Read the shadow password file.  This
should only be used in a conditional;
it does not pass the reading shadow
assertion.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_dontaudit_read_shadow" lineno="643">
<summary>
Do not audit attempts to read the shadow
password file (/etc/shadow).
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="auth_rw_shadow" lineno="661">
<summary>
Read and write the shadow password file (/etc/shadow).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_manage_shadow" lineno="683">
<summary>
Create, read, write, and delete the shadow
password file.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_etc_filetrans_shadow" lineno="703">
<summary>
Automatic transition from etc to shadow.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_relabelto_shadow" lineno="722">
<summary>
Relabel to the shadow
password file type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_relabel_shadow" lineno="744">
<summary>
Relabel from and to the shadow
password file type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_append_faillog" lineno="765">
<summary>
Append to the login failure log.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_create_faillog_files" lineno="784">
<summary>
Create fail log lock (in /run/faillock).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_rw_faillog" lineno="802">
<summary>
Read and write the login failure log.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_manage_faillog" lineno="821">
<summary>
Manage the login failure logs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_setattr_faillog_files" lineno="840">
<summary>
Setattr the login failure logs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_read_lastlog" lineno="859">
<summary>
Read the last logins log.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="auth_append_lastlog" lineno="878">
<summary>
Append only to the last logins log.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_relabel_lastlog" lineno="897">
<summary>
relabel the last logins log.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_rw_lastlog" lineno="916">
<summary>
Read and write to the last logins log.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_manage_lastlog" lineno="935">
<summary>
Manage the last logins log.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_domtrans_pam" lineno="954">
<summary>
Execute pam programs in the pam domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="auth_signal_pam" lineno="972">
<summary>
Send generic signals to pam processes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_run_pam" lineno="995">
<summary>
Execute pam programs in the PAM domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
The role to allow the PAM domain.
</summary>
</param>
</interface>
<interface name="auth_exec_pam" lineno="1014">
<summary>
Execute the pam program.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_read_var_auth" lineno="1033">
<summary>
Read var auth files. Used by various other applications
and pam applets etc.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_rw_var_auth" lineno="1053">
<summary>
Read and write var auth files. Used by various other applications
and pam applets etc.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_manage_var_auth" lineno="1073">
<summary>
Manage var auth files. Used by various other applications
and pam applets etc.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_read_pam_pid" lineno="1094">
<summary>
Read PAM PID files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_dontaudit_read_pam_pid" lineno="1114">
<summary>
Do not audit attemps to read PAM PID files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="auth_pid_filetrans_pam_var_run" lineno="1145">
<summary>
Create specified objects in
pid directories with the pam var
run file type using a
file type transition.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="object_class">
<summary>
Class of the object being created.
</summary>
</param>
<param name="name" optional="true">
<summary>
The name of the object being created.
</summary>
</param>
</interface>
<interface name="auth_delete_pam_pid" lineno="1163">
<summary>
Delete pam PID files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_manage_pam_pid" lineno="1183">
<summary>
Manage pam PID files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_domtrans_pam_console" lineno="1203">
<summary>
Execute pam_console with a domain transition.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="auth_search_pam_console_data" lineno="1222">
<summary>
Search the contents of the
pam_console data directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_list_pam_console_data" lineno="1242">
<summary>
List the contents of the pam_console
data directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_create_pam_console_data_dirs" lineno="1261">
<summary>
Create pam var console pid directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_relabel_pam_console_data_dirs" lineno="1280">
<summary>
Relabel pam_console data directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_read_pam_console_data" lineno="1298">
<summary>
Read pam_console data files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_manage_pam_console_data" lineno="1319">
<summary>
Create, read, write, and delete
pam_console data files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_delete_pam_console_data" lineno="1339">
<summary>
Delete pam_console data.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_pid_filetrans_pam_var_console" lineno="1372">
<summary>
Create specified objects in
pid directories with the pam var
console pid file type using a
file type transition.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="object_class">
<summary>
Class of the object being created.
</summary>
</param>
<param name="name" optional="true">
<summary>
The name of the object being created.
</summary>
</param>
</interface>
<interface name="auth_domtrans_utempter" lineno="1390">
<summary>
Execute utempter programs in the utempter domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="auth_run_utempter" lineno="1413">
<summary>
Execute utempter programs in the utempter domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
The role to allow the utempter domain.
</summary>
</param>
</interface>
<interface name="auth_dontaudit_exec_utempter" lineno="1432">
<summary>
Do not audit attemps to execute utempter executable.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="auth_setattr_login_records" lineno="1450">
<summary>
Set the attributes of login record files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_read_login_records" lineno="1470">
<summary>
Read login records files (/var/log/wtmp).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="auth_dontaudit_read_login_records" lineno="1491">
<summary>
Do not audit attempts to read login records
files (/var/log/wtmp).
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
<rolecap/>
</interface>
<interface name="auth_dontaudit_write_login_records" lineno="1510">
<summary>
Do not audit attempts to write to
login records files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="auth_append_login_records" lineno="1528">
<summary>
Append to login records (wtmp).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_write_login_records" lineno="1547">
<summary>
Write to login records (wtmp).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_rw_login_records" lineno="1565">
<summary>
Read and write login records.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_log_filetrans_login_records" lineno="1585">
<summary>
Create a login records in the log directory
using a type transition.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_manage_login_records" lineno="1604">
<summary>
Create, read, write, and delete login
records files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_relabel_login_records" lineno="1623">
<summary>
Relabel login record files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_use_nsswitch" lineno="1651">
<summary>
Use nsswitch to look up user, password, group, or
host information.
</summary>
<desc>
<p>
Allow the specified domain to look up user, password,
group, or host information using the name service.
The most common use of this interface is for services
that do host name resolution (usually DNS resolution).
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="auth_unconfined" lineno="1679">
<summary>
Unconfined access to the authlogin module.
</summary>
<desc>
<p>
Unconfined access to the authlogin module.
</p>
<p>
Currently, this only allows assertions for
the shadow passwords file (/etc/shadow) to
be passed.  No access is granted yet.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<tunable name="authlogin_nsswitch_use_ldap" dftval="false">
<desc>
<p>
Allow users to resolve user passwd entries directly from ldap rather then using a sssd server
</p>
</desc>
</tunable>
</module>
<module name="clock" filename="policy/modules/system/clock.if">
<summary>Policy for reading and setting the hardware clock.</summary>
<interface name="clock_domtrans" lineno="13">
<summary>
Execute hwclock in the clock domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="clock_run" lineno="38">
<summary>
Execute hwclock in the clock domain, and
allow the specified role the hwclock domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="clock_exec" lineno="57">
<summary>
Execute hwclock in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="clock_read_adjtime" lineno="75">
<summary>
Read clock drift adjustments.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="clock_dontaudit_write_adjtime" lineno="94">
<summary>
Do not audit attempts to write clock drift adjustments.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="clock_rw_adjtime" lineno="112">
<summary>
Read and write clock drift adjustments.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="daemontools" filename="policy/modules/system/daemontools.if">
<summary>Collection of tools for managing UNIX services.</summary>
<interface name="daemontools_ipc_domain" lineno="14">
<summary>
An ipc channel between the
supervised domain and svc_start_t.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="daemontools_service_domain" lineno="41">
<summary>
Create a domain which can be
started by daemontools.
</summary>
<param name="domain">
<summary>
Type to be used as a domain.
</summary>
</param>
<param name="entrypoint">
<summary>
Type of the program to be used as an entry point to this domain.
</summary>
</param>
</interface>
<interface name="daemontools_domtrans_start" lineno="64">
<summary>
Execute svc start in the svc
start domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="daemonstools_run_start" lineno="91">
<summary>
Execute svc start in the svc
start domain, and allow the
specified role the svc start domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="daemontools_domtrans_run" lineno="110">
<summary>
Execute avc run in the svc run domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="daemontools_sigchld_run" lineno="130">
<summary>
Send child terminated signals
to svc run.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="daemontools_domtrans_multilog" lineno="149">
<summary>
Execute avc multilog in the svc
multilog domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="daemontools_search_svc_dir" lineno="168">
<summary>
Search svc svc directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="daemontools_read_svc" lineno="188">
<summary>
Read svc avc files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="daemontools_manage_svc" lineno="210">
<summary>
Create, read, write and delete
svc svc content.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
</module>
<module name="fstools" filename="policy/modules/system/fstools.if">
<summary>Tools for filesystem management, such as mkfs and fsck.</summary>
<interface name="fstools_domtrans" lineno="13">
<summary>
Execute fs tools in the fstools domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="fstools_run" lineno="39">
<summary>
Execute fs tools in the fstools domain, and
allow the specified role the fs tools domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="fstools_exec" lineno="58">
<summary>
Execute fsadm in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fstools_signal" lineno="76">
<summary>
Send signal to fsadm process
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fstools_use_fds" lineno="94">
<summary>
Inherit fstools file descriptors.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="fstools_read_pipes" lineno="112">
<summary>
Read fstools unnamed pipes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fstools_relabelto_entry_files" lineno="131">
<summary>
Relabel a file to the type used by the
filesystem tools programs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fstools_manage_entry_files" lineno="150">
<summary>
Create, read, write, and delete a file used by the
filesystem tools programs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fstools_write_log" lineno="168">
<summary>
Write to fsadm_log_t
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fstools_manage_runtime_files" lineno="187">
<summary>
Create, read, write, and delete filesystem tools
runtime files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fstools_getattr_swap_files" lineno="205">
<summary>
Getattr swapfile
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fstools_dontaudit_getattr_swap_files" lineno="223">
<summary>
Ignore access to a swapfile.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="fstools_relabelto_swap_files" lineno="241">
<summary>
Relabel to swapfile.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fstools_manage_swap_files" lineno="259">
<summary>
Manage swapfile.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="getty" filename="policy/modules/system/getty.if">
<summary>Manages physical or virtual terminals.</summary>
<interface name="getty_domtrans" lineno="13">
<summary>
Execute gettys in the getty domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="getty_use_fds" lineno="32">
<summary>
Inherit and use getty file descriptors.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="getty_read_log" lineno="51">
<summary>
Allow process to read getty log file.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="getty_read_config" lineno="71">
<summary>
Allow process to read getty config file.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="getty_rw_config" lineno="91">
<summary>
Allow process to edit getty config file.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
</module>
<module name="hostname" filename="policy/modules/system/hostname.if">
<summary>Policy for changing the system host name.</summary>
<interface name="hostname_domtrans" lineno="13">
<summary>
Execute hostname in the hostname domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="hostname_run" lineno="38">
<summary>
Execute hostname in the hostname domain, and
allow the specified role the hostname domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
</interface>
<interface name="hostname_exec" lineno="58">
<summary>
Execute hostname in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
</module>
<module name="hotplug" filename="policy/modules/system/hotplug.if">
<summary>
Policy for hotplug system, for supporting the
connection and disconnection of devices at runtime.
</summary>
<interface name="hotplug_domtrans" lineno="16">
<summary>
Execute hotplug with a domain transition.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="hotplug_exec" lineno="35">
<summary>
Execute hotplug in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="hotplug_use_fds" lineno="54">
<summary>
Inherit and use hotplug file descriptors.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="hotplug_dontaudit_use_fds" lineno="73">
<summary>
Do not audit attempts to inherit
hotplug file descriptors.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="hotplug_dontaudit_search_config" lineno="92">
<summary>
Do not audit attempts to search the
hotplug configuration directories.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="hotplug_getattr_config_dirs" lineno="110">
<summary>
Get the attributes of the hotplug configuration directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="hotplug_search_config" lineno="128">
<summary>
Search the hotplug configuration directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="hotplug_read_config" lineno="147">
<summary>
Read the configuration files for hotplug.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="hotplug_search_pids" lineno="168">
<summary>
Search the hotplug PIDs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="init" filename="policy/modules/system/init.if">
<summary>System initialization programs (init and init scripts).</summary>
<interface name="init_mountpoint" lineno="17">
<summary>
Make the specified type usable as a mountpoint.
</summary>
<desc>
Make the specified type usable as a mountpoint.
This is normally used for systemd BindPaths options.
</desc>
<param name="file_type">
<summary>
Type to be used as a mountpoint.
</summary>
</param>
</interface>
<interface name="init_path_unit_location_file" lineno="35">
<summary>
Create a file type monitored by a systemd path unit.
</summary>
<param name="script_file">
<summary>
Type to be used for a path unit monitored location.
</summary>
</param>
</interface>
<interface name="init_script_file" lineno="73">
<summary>
Create a file type used for init scripts.
</summary>
<desc>
<p>
Create a file type used for init scripts.  It can not be
used in conjunction with init_script_domain(). These
script files are typically stored in the /etc/init.d directory.
</p>
<p>
Typically this is used to constrain what services an
admin can start/stop.  For example, a policy writer may want
to constrain a web administrator to only being able to
restart the web server, not other services.  This special type
will help address that goal.
</p>
<p>
This also makes the type usable for files; thus an
explicit call to files_type() is redundant.
</p>
</desc>
<param name="script_file">
<summary>
Type to be used for a script file.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="init_unit_file" lineno="97">
<summary>
Make the specified type usable for
systemd unit files.
</summary>
<param name="type">
<summary>
Type to be used for systemd unit files.
</summary>
</param>
</interface>
<interface name="init_script_domain" lineno="128">
<summary>
Create a domain used for init scripts.
</summary>
<desc>
<p>
Create a domain used for init scripts.
Can not be used in conjunction with
init_script_file().
</p>
</desc>
<param name="domain">
<summary>
Type to be used as an init script domain.
</summary>
</param>
<param name="script_file">
<summary>
Type of the script file used as an entry point to this domain.
</summary>
</param>
</interface>
<interface name="init_domain" lineno="170">
<summary>
Create a domain which can be started by init.
</summary>
<param name="domain">
<summary>
Type to be used as a domain.
</summary>
</param>
<param name="entry_point">
<summary>
Type of the program to be used as an entry point to this domain.
</summary>
</param>
</interface>
<interface name="init_ranged_domain" lineno="217">
<summary>
Create a domain which can be started by init,
with a range transition.
</summary>
<param name="domain">
<summary>
Type to be used as a domain.
</summary>
</param>
<param name="entry_point">
<summary>
Type of the program to be used as an entry point to this domain.
</summary>
</param>
<param name="range">
<summary>
Range for the domain.
</summary>
</param>
</interface>
<interface name="init_spec_daemon_domain" lineno="258">
<summary>
Setup a domain which can be manually transitioned to from init.
</summary>
<desc>
<p>
Create a domain used for systemd services where the SELinuxContext
option is specified in the .service file.  This allows for the
manual transition from systemd into the new domain.  This is used
when automatic transitions won't work.  Used for the case where the
same binary is used for multiple target domains.
</p>
</desc>
<param name="domain">
<summary>
Type to be used as a domain.
</summary>
</param>
<param name="entry_point">
<summary>
Type of the program being executed when starting this domain.
</summary>
</param>
</interface>
<interface name="init_daemon_domain" lineno="331">
<summary>
Create a domain for long running processes
(daemons/services) which are started by init scripts.
</summary>
<desc>
<p>
Create a domain for long running processes (daemons/services)
which are started by init scripts. Short running processes
should use the init_system_domain() interface instead.
Typically all long running processes started by an init
script (usually in /etc/init.d) will need to use this
interface.
</p>
<p>
The types will be made usable as a domain and file, making
calls to domain_type() and files_type() redundant.
</p>
<p>
If the process must also run in a specific MLS/MCS level,
the init_ranged_daemon_domain() should be used instead.
</p>
</desc>
<param name="domain">
<summary>
Type to be used as a daemon domain.
</summary>
</param>
<param name="entry_point">
<summary>
Type of the program to be used as an entry point to this domain.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="init_ranged_daemon_domain" lineno="416">
<summary>
Create a domain for long running processes
(daemons/services) which are started by init scripts,
running at a specified MLS/MCS range.
</summary>
<desc>
<p>
Create a domain for long running processes (daemons/services)
which are started by init scripts, running at a specified
MLS/MCS range. Short running processes
should use the init_ranged_system_domain() interface instead.
Typically all long running processes started by an init
script (usually in /etc/init.d) will need to use this
interface if they need to run in a specific MLS/MCS range.
</p>
<p>
The types will be made usable as a domain and file, making
calls to domain_type() and files_type() redundant.
</p>
<p>
If the policy build option TYPE is standard (MLS and MCS disabled),
this interface has the same behavior as init_daemon_domain().
</p>
</desc>
<param name="domain">
<summary>
Type to be used as a daemon domain.
</summary>
</param>
<param name="entry_point">
<summary>
Type of the program to be used as an entry point to this domain.
</summary>
</param>
<param name="range">
<summary>
MLS/MCS range for the domain.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="init_abstract_socket_activation" lineno="447">
<summary>
Abstract socket service activation (systemd).
</summary>
<param name="domain">
<summary>
The domain to be started by systemd socket activation.
</summary>
</param>
</interface>
<interface name="init_named_socket_activation" lineno="472">
<summary>
Named socket service activation (systemd).
</summary>
<param name="domain">
<summary>
The domain to be started by systemd socket activation.
</summary>
</param>
<param name="sock_file">
<summary>
The domain socket file type.
</summary>
</param>
</interface>
<interface name="init_system_domain" lineno="523">
<summary>
Create a domain for short running processes
which are started by init scripts.
</summary>
<desc>
<p>
Create a domain for short running processes
which are started by init scripts. These are generally applications that
are used to initialize the system during boot.
Long running processes, such as daemons/services
should use the init_daemon_domain() interface instead.
Typically all short running processes started by an init
script (usually in /etc/init.d) will need to use this
interface.
</p>
<p>
The types will be made usable as a domain and file, making
calls to domain_type() and files_type() redundant.
</p>
<p>
If the process must also run in a specific MLS/MCS level,
the init_ranged_system_domain() should be used instead.
</p>
</desc>
<param name="domain">
<summary>
Type to be used as a system domain.
</summary>
</param>
<param name="entry_point">
<summary>
Type of the program to be used as an entry point to this domain.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="init_ranged_system_domain" lineno="585">
<summary>
Create a domain for short running processes
which are started by init scripts.
</summary>
<desc>
<p>
Create a domain for long running processes (daemons/services)
which are started by init scripts.
These are generally applications that
are used to initialize the system during boot.
Long running processes
should use the init_ranged_system_domain() interface instead.
Typically all short running processes started by an init
script (usually in /etc/init.d) will need to use this
interface if they need to run in a specific MLS/MCS range.
</p>
<p>
The types will be made usable as a domain and file, making
calls to domain_type() and files_type() redundant.
</p>
<p>
If the policy build option TYPE is standard (MLS and MCS disabled),
this interface has the same behavior as init_system_domain().
</p>
</desc>
<param name="domain">
<summary>
Type to be used as a system domain.
</summary>
</param>
<param name="entry_point">
<summary>
Type of the program to be used as an entry point to this domain.
</summary>
</param>
<param name="range">
<summary>
Range for the domain.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="init_dyntrans" lineno="616">
<summary>
Allow domain dyntransition to init_t domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="init_daemon_pid_file" lineno="645">
<summary>
Mark the file type as a daemon pid file, allowing initrc_t
to create it
</summary>
<param name="filetype">
<summary>
Type to mark as a daemon pid file
</summary>
</param>
<param name="class">
<summary>
Class on which the type is applied
</summary>
</param>
<param name="filename">
<summary>
Filename of the file that the init script creates
</summary>
</param>
</interface>
<interface name="init_daemon_lock_file" lineno="678">
<summary>
Mark the file type as a daemon lock file, allowing initrc_t
to create it
</summary>
<param name="filetype">
<summary>
Type to mark as a daemon lock file
</summary>
</param>
<param name="class">
<summary>
Class on which the type is applied
</summary>
</param>
<param name="filename">
<summary>
Filename of the file that the init script creates
</summary>
</param>
</interface>
<interface name="init_domtrans" lineno="700">
<summary>
Execute init (/sbin/init) with a domain transition.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="init_pgm_spec_user_daemon_domain" lineno="724">
<summary>
Execute init (/sbin/init) with a domain transition
to the provided domain.
</summary>
<desc>
Execute init (/sbin/init) with a domain transition
to the provided domain.  This is used by systemd
to execute the systemd user session.
</desc>
<param name="domain">
<summary>
The type to be used as a systemd --user domain.
</summary>
</param>
</interface>
<interface name="init_exec" lineno="752">
<summary>
Execute the init program in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="init_pgm_entrypoint" lineno="773">
<summary>
Allow the init program to be an entrypoint
for the specified domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="init_exec_rc" lineno="802">
<summary>
Execute the rc application in the caller domain.
</summary>
<desc>
<p>
This is only applicable to Gentoo or distributions that use the OpenRC
init system.
</p>
<p>
The OpenRC /sbin/rc binary is used for both init scripts as well as
management applications and tools. When used for management purposes,
calling /sbin/rc should never cause a transition to initrc_t.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_getpgid" lineno="821">
<summary>
Get the process group of init.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_signal" lineno="839">
<summary>
Send init a generic signal.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_signull" lineno="857">
<summary>
Send init a null signal.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_sigchld" lineno="875">
<summary>
Send init a SIGCHLD signal.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_stream_connect" lineno="893">
<summary>
Connect to init with a unix socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_use_fds" lineno="953">
<summary>
Inherit and use file descriptors from init.
</summary>
<desc>
<p>
Allow the specified domain to inherit file
descriptors from the init program (process ID 1).
Typically the only file descriptors to be
inherited from init are for the console.
This does not allow the domain any access to
the object to which the file descriptors references.
</p>
<p>
Related interfaces:
</p>
<ul>
<li>init_dontaudit_use_fds()</li>
<li>term_dontaudit_use_console()</li>
<li>term_use_console()</li>
</ul>
<p>
Example usage:
</p>
<p>
init_use_fds(mydomain_t)
term_use_console(mydomain_t)
</p>
<p>
Normally, processes that can inherit these file
descriptors (usually services) write messages to the
system log instead of writing to the console.
Therefore, in many cases, this access should
dontaudited instead.
</p>
<p>
Example dontaudit usage:
</p>
<p>
init_dontaudit_use_fds(mydomain_t)
term_dontaudit_use_console(mydomain_t)
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<infoflow type="read" weight="1"/>
</interface>
<interface name="init_dontaudit_use_fds" lineno="972">
<summary>
Do not audit attempts to inherit file
descriptors from init.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="init_dgram_send" lineno="991">
<summary>
Send messages to init unix datagram sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="init_rw_inherited_stream_socket" lineno="1011">
<summary>
Read and write to inherited init unix streams.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_rw_stream_sockets" lineno="1030">
<summary>
Allow the specified domain to read/write to
init with unix domain stream sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_start_system" lineno="1048">
<summary>
start service (systemd).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_stop_system" lineno="1066">
<summary>
stop service (systemd).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_get_system_status" lineno="1084">
<summary>
Get all service status (systemd).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_enable" lineno="1102">
<summary>
Enable all systemd services (systemd).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_disable" lineno="1120">
<summary>
Disable all services (systemd).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_reload" lineno="1138">
<summary>
Reload all services (systemd).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_reboot_system" lineno="1156">
<summary>
Reboot the system (systemd).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_shutdown_system" lineno="1174">
<summary>
Shutdown (halt) the system (systemd).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_service_status" lineno="1192">
<summary>
Allow specified domain to get init status
</summary>
<param name="domain">
<summary>
Domain to allow access.
</summary>
</param>
</interface>
<interface name="init_service_start" lineno="1211">
<summary>
Allow specified domain to get init start
</summary>
<param name="domain">
<summary>
Domain to allow access.
</summary>
</param>
</interface>
<interface name="init_dbus_chat" lineno="1231">
<summary>
Send and receive messages from
systemd over dbus.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_read_var_lib_links" lineno="1251">
<summary>
read/follow symlinks under /var/lib/systemd/
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_list_var_lib_dirs" lineno="1270">
<summary>
List /var/lib/systemd/ dir
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_relabel_var_lib_dirs" lineno="1288">
<summary>
Relabel dirs in /var/lib/systemd/.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_manage_var_lib_files" lineno="1306">
<summary>
Manage files in /var/lib/systemd/.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_var_lib_filetrans" lineno="1341">
<summary>
Create files in /var/lib/systemd
with an automatic type transition.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="type">
<summary>
The type of object to be created
</summary>
</param>
<param name="object_class">
<summary>
The object class.
</summary>
</param>
<param name="name" optional="true">
<summary>
The name of the object being created.
</summary>
</param>
</interface>
<interface name="init_search_pids" lineno="1360">
<summary>
Allow search  directory in the /run/systemd directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_list_pids" lineno="1378">
<summary>
Allow listing of the /run/systemd directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_manage_pid_symlinks" lineno="1397">
<summary>
Create symbolic links in the /run/systemd directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_create_pid_files" lineno="1415">
<summary>
Create files in the /run/systemd directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_write_pid_files" lineno="1433">
<summary>
Write files in the /run/systemd directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_manage_pid_dirs" lineno="1452">
<summary>
Create, read, write, and delete
directories in the /run/systemd directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_pid_filetrans" lineno="1485">
<summary>
Create files in an init PID directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="file_type">
<summary>
The type of the object to be created
</summary>
</param>
<param name="object_class">
<summary>
The object class.
</summary>
</param>
<param name="name" optional="true">
<summary>
The name of the object being created.
</summary>
</param>
</interface>
<interface name="init_getattr_initctl" lineno="1504">
<summary>
Get the attributes of initctl.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_dontaudit_getattr_initctl" lineno="1525">
<summary>
Do not audit attempts to get the
attributes of initctl.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="init_write_initctl" lineno="1543">
<summary>
Write to initctl.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_telinit" lineno="1564">
<summary>
Use telinit (Read and write initctl).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="init_rw_initctl" lineno="1597">
<summary>
Read and write initctl.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_dontaudit_rw_initctl" lineno="1618">
<summary>
Do not audit attempts to read and
write initctl.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="init_script_file_entry_type" lineno="1637">
<summary>
Make init scripts an entry point for
the specified domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_spec_domtrans_script" lineno="1655">
<summary>
Execute init scripts with a specified domain transition.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="init_domtrans_script" lineno="1690">
<summary>
Execute init scripts with an automatic domain transition.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="init_domtrans_labeled_script" lineno="1717">
<summary>
Execute labelled init scripts with an automatic domain transition.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="init_script_file_domtrans" lineno="1763">
<summary>
Execute a init script in a specified domain.
</summary>
<desc>
<p>
Execute a init script in a specified domain.
</p>
<p>
No interprocess communication (signals, pipes,
etc.) is provided by this interface since
the domains are not owned by this module.
</p>
</desc>
<param name="source_domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="target_domain">
<summary>
Domain to transition to.
</summary>
</param>
</interface>
<interface name="init_kill_scripts" lineno="1782">
<summary>
Send a kill signal to init scripts.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_manage_script_service" lineno="1800">
<summary>
Allow manage service for initrc_exec_t scripts
</summary>
<param name="domain">
<summary>
Target domain
</summary>
</param>
</interface>
<interface name="init_labeled_script_domtrans" lineno="1825">
<summary>
Transition to the init script domain
on a specified labeled init script.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="init_script_file">
<summary>
Labeled init script file.
</summary>
</param>
</interface>
<interface name="init_all_labeled_script_domtrans" lineno="1847">
<summary>
Transition to the init script domain
for all labeled init script types
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="init_get_script_status" lineno="1865">
<summary>
Allow getting service status of initrc_exec_t scripts
</summary>
<param name="domain">
<summary>
Target domain
</summary>
</param>
</interface>
<interface name="init_startstop_service" lineno="1905">
<summary>
Allow the role to start and stop
labeled services.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
The role to be performing this action.
</summary>
</param>
<param name="domain">
<summary>
Type to be used as a daemon domain.
</summary>
</param>
<param name="init_script_file">
<summary>
Labeled init script file.
</summary>
</param>
<param name="unit" optional="true">
<summary>
Systemd unit file type.
</summary>
</param>
</interface>
<interface name="init_run_daemon" lineno="1959">
<summary>
Start and stop daemon programs directly.
</summary>
<desc>
<p>
Start and stop daemon programs directly
in the traditional "/etc/init.d/daemon start"
style, and do not require run_init.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="role">
<summary>
The role to be performing this action.
</summary>
</param>
</interface>
<interface name="init_startstop_all_script_services" lineno="1981">
<summary>
Start and stop init_script_file_type services
</summary>
<param name="domain">
<summary>
domain that can start and stop the services
</summary>
</param>
</interface>
<interface name="init_read_state" lineno="2000">
<summary>
Read the process state (/proc/pid) of init.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_dontaudit_read_state" lineno="2020">
<summary>
Dontaudit read the process state (/proc/pid) of init.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="init_ptrace" lineno="2041">
<summary>
Ptrace init
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="init_getattr" lineno="2060">
<summary>
get init process stats
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="init_write_script_pipes" lineno="2078">
<summary>
Write an init script unnamed pipe.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_getattr_script_files" lineno="2096">
<summary>
Get the attribute of init script entrypoint files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_read_script_files" lineno="2115">
<summary>
Read init scripts.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_exec_script_files" lineno="2134">
<summary>
Execute init scripts in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_getattr_all_script_files" lineno="2153">
<summary>
Get the attribute of all init script entrypoint files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_read_all_script_files" lineno="2172">
<summary>
Read all init script files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_dontaudit_read_all_script_files" lineno="2191">
<summary>
Dontaudit read all init script files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="init_exec_all_script_files" lineno="2209">
<summary>
Execute all init scripts in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_read_script_state" lineno="2228">
<summary>
Read the process state (/proc/pid) of the init scripts.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_use_script_fds" lineno="2247">
<summary>
Inherit and use init script file descriptors.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_dontaudit_use_script_fds" lineno="2266">
<summary>
Do not audit attempts to inherit
init script file descriptors.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="init_search_script_keys" lineno="2284">
<summary>
Search init script keys.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_getpgid_script" lineno="2302">
<summary>
Get the process group ID of init scripts.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_sigchld_script" lineno="2320">
<summary>
Send SIGCHLD signals to init scripts.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_signal_script" lineno="2338">
<summary>
Send generic signals to init scripts.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_signull_script" lineno="2356">
<summary>
Send null signals to init scripts.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_rw_script_pipes" lineno="2374">
<summary>
Read and write init script unnamed pipes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_stream_connect_script" lineno="2393">
<summary>
Allow the specified domain to connect to
init scripts with a unix socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_rw_script_stream_sockets" lineno="2412">
<summary>
Allow the specified domain to read/write to
init scripts with a unix domain stream sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_dontaudit_stream_connect_script" lineno="2431">
<summary>
Dont audit the specified domain connecting to
init scripts with a unix domain stream socket.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="init_dbus_send_script" lineno="2448">
<summary>
Send messages to init scripts over dbus.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_dbus_chat_script" lineno="2468">
<summary>
Send and receive messages from
init scripts over dbus.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_use_script_ptys" lineno="2497">
<summary>
Read and write the init script pty.
</summary>
<desc>
<p>
Read and write the init script pty.  This
pty is generally opened by the open_init_pty
portion of the run_init program so that the
daemon does not require direct access to
the administrator terminal.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_use_inherited_script_ptys" lineno="2516">
<summary>
Read and write inherited init script ptys.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_dontaudit_use_script_ptys" lineno="2538">
<summary>
Do not audit attempts to read and
write the init script pty.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="init_getattr_script_status_files" lineno="2557">
<summary>
Get the attributes of init script
status files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_dontaudit_read_script_status_files" lineno="2576">
<summary>
Do not audit attempts to read init script
status files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="init_search_run" lineno="2595">
<summary>
Search the /run/systemd directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_read_script_tmp_files" lineno="2614">
<summary>
Read init script temporary data.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_rw_inherited_script_tmp_files" lineno="2633">
<summary>
Read and write init script inherited temporary data.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_rw_script_tmp_files" lineno="2651">
<summary>
Read and write init script temporary data.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_script_tmp_filetrans" lineno="2686">
<summary>
Create files in a init script
temporary data directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="file_type">
<summary>
The type of the object to be created
</summary>
</param>
<param name="object_class">
<summary>
The object class.
</summary>
</param>
<param name="name" optional="true">
<summary>
The name of the object being created.
</summary>
</param>
</interface>
<interface name="init_getattr_utmp" lineno="2705">
<summary>
Get the attributes of init script process id files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_read_utmp" lineno="2723">
<summary>
Read utmp.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_dontaudit_write_utmp" lineno="2742">
<summary>
Do not audit attempts to write utmp.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="init_write_utmp" lineno="2760">
<summary>
Write to utmp.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_dontaudit_lock_utmp" lineno="2780">
<summary>
Do not audit attempts to lock
init script pid files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="init_rw_utmp" lineno="2798">
<summary>
Read and write utmp.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_dontaudit_rw_utmp" lineno="2817">
<summary>
Do not audit attempts to read and write utmp.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="init_manage_utmp" lineno="2835">
<summary>
Create, read, write, and delete utmp.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_relabel_utmp" lineno="2854">
<summary>
Relabel utmp.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_pid_filetrans_utmp" lineno="2873">
<summary>
Create files in /var/run with the
utmp file type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_runtime_filetrans_utmp" lineno="2889">
<summary>
Create files in /var/run with the
utmp file type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_create_pid_dirs" lineno="2907">
<summary>
Create a directory in the /run/systemd directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_create_runtime_dirs" lineno="2922">
<summary>
Create a directory in the /run/systemd directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_rename_pid_files" lineno="2941">
<summary>
Rename init_runtime_t files
</summary>
<param name="domain">
<summary>
domain
</summary>
</param>
</interface>
<interface name="init_rename_runtime_files" lineno="2956">
<summary>
Rename init_runtime_t files
</summary>
<param name="domain">
<summary>
domain
</summary>
</param>
</interface>
<interface name="init_delete_pid_files" lineno="2974">
<summary>
Delete init_runtime_t files
</summary>
<param name="domain">
<summary>
domain
</summary>
</param>
</interface>
<interface name="init_delete_runtime_files" lineno="2989">
<summary>
Delete init_runtime_t files
</summary>
<param name="domain">
<summary>
domain
</summary>
</param>
</interface>
<interface name="init_write_pid_socket" lineno="3008">
<summary>
Allow the specified domain to write to
init sock file.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_write_runtime_socket" lineno="3024">
<summary>
Allow the specified domain to write to
init sock file.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_read_pid_pipes" lineno="3042">
<summary>
Read init unnamed pipes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_read_runtime_pipes" lineno="3057">
<summary>
Read init unnamed pipes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_read_runtime_symlinks" lineno="3075">
<summary>
read systemd unit symlinks (usually under /run/systemd/units/)
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_tcp_recvfrom_all_daemons" lineno="3093">
<summary>
Allow the specified domain to connect to daemon with a tcp socket
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_udp_recvfrom_all_daemons" lineno="3111">
<summary>
Allow the specified domain to connect to daemon with a udp socket
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_search_units" lineno="3128">
<summary>
Search systemd unit dirs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_list_unit_dirs" lineno="3153">
<summary>
List systemd unit dirs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_read_generic_units_symlinks" lineno="3173">
<summary>
Read systemd unit links
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_get_generic_units_status" lineno="3191">
<summary>
Get status of generic systemd units.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_start_generic_units" lineno="3210">
<summary>
Start generic systemd units.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_stop_generic_units" lineno="3229">
<summary>
Stop generic systemd units.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="init_reload_generic_units" lineno="3248">
<summary>
Reload generic systemd units.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_get_all_units_status" lineno="3267">
<summary>
Get status of all systemd units.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_manage_all_units" lineno="3286">
<summary>
All perms on all systemd units.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_start_all_units" lineno="3306">
<summary>
Start all systemd units.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_stop_all_units" lineno="3325">
<summary>
Stop all systemd units.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="init_reload_all_units" lineno="3344">
<summary>
Reload all systemd units.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_admin" lineno="3363">
<summary>
Allow unconfined access to send instructions to init
</summary>
<param name="domain">
<summary>
Target domain
</summary>
</param>
</interface>
<interface name="init_getrlimit" lineno="3395">
<summary>
Allow getting init_t rlimit
</summary>
<param name="domain">
<summary>
Source domain
</summary>
</param>
</interface>
<tunable name="init_upstart" dftval="false">
<desc>
<p>
Enable support for upstart as the init program.
</p>
</desc>
</tunable>
<tunable name="init_daemons_use_tty" dftval="false">
<desc>
<p>
Allow all daemons the ability to read/write terminals
</p>
</desc>
</tunable>
<tunable name="init_mounton_non_security" dftval="false">
<desc>
<p>
Enable systemd to mount on all non-security files.
</p>
</desc>
</tunable>
</module>
<module name="ipsec" filename="policy/modules/system/ipsec.if">
<summary>TCP/IP encryption</summary>
<interface name="ipsec_domtrans" lineno="13">
<summary>
Execute ipsec in the ipsec domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="ipsec_stream_connect" lineno="31">
<summary>
Connect to IPSEC using a unix domain stream socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ipsec_domtrans_mgmt" lineno="50">
<summary>
Execute ipsec in the ipsec mgmt domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ipsec_stream_connect_racoon" lineno="68">
<summary>
Connect to racoon using a unix domain stream socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ipsec_getattr_key_sockets" lineno="87">
<summary>
Get the attributes of an IPSEC key socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ipsec_exec_mgmt" lineno="105">
<summary>
Execute the IPSEC management program in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ipsec_signal_mgmt" lineno="124">
<summary>
Send ipsec mgmt a general signal.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ipsec_signull_mgmt" lineno="143">
<summary>
Send ipsec mgmt a null signal.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ipsec_kill_mgmt" lineno="162">
<summary>
Send ipsec mgmt a kill signal.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ipsec_mgmt_dbus_chat" lineno="181">
<summary>
Send and receive messages from
ipsec-mgmt over dbus.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ipsec_read_config" lineno="202">
<summary>
Read the IPSEC configuration
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="ipsec_match_default_spd" lineno="221">
<summary>
Match the default SPD entry.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ipsec_setcontext_default_spd" lineno="241">
<summary>
Set the context of a SPD entry to
the default context.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ipsec_write_pid" lineno="259">
<summary>
write the ipsec_runtime_t files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ipsec_manage_pid" lineno="278">
<summary>
Create, read, write, and delete the IPSEC pid files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ipsec_domtrans_racoon" lineno="297">
<summary>
Execute racoon in the racoon domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="ipsec_run_racoon" lineno="321">
<summary>
Execute racoon and allow the specified role the domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="ipsec_domtrans_setkey" lineno="340">
<summary>
Execute setkey in the setkey domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="ipsec_run_setkey" lineno="364">
<summary>
Execute setkey and allow the specified role the domains.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access..
</summary>
</param>
<rolecap/>
</interface>
<interface name="ipsec_admin" lineno="390">
<summary>
All of the rules required to
administrate an ipsec environment.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<tunable name="racoon_read_shadow" dftval="false">
<desc>
<p>
Allow racoon to read shadow
</p>
</desc>
</tunable>
</module>
<module name="iptables" filename="policy/modules/system/iptables.if">
<summary>Administration tool for IP packet filtering and NAT.</summary>
<interface name="iptables_domtrans" lineno="13">
<summary>
Execute iptables in the iptables domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="iptables_run" lineno="43">
<summary>
Execute iptables in the iptables domain, and
allow the specified role the iptables domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="iptables_exec" lineno="62">
<summary>
Execute iptables in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="iptables_initrc_domtrans" lineno="82">
<summary>
Execute iptables init scripts in
the init script domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="iptables_setattr_config" lineno="100">
<summary>
Set the attributes of iptables config files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="iptables_read_config" lineno="119">
<summary>
Read iptables config files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="iptables_etc_filetrans_config" lineno="140">
<summary>
Create files in /etc with the type used for
the iptables config files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="iptables_manage_config" lineno="158">
<summary>
Manage iptables config files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="iptables_dontaudit_read_pids" lineno="177">
<summary>
dontaudit reading iptables_runtime_t
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="iptables_startstop" lineno="195">
<summary>
Allow specified domain to start and stop iptables service
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="iptables_status" lineno="214">
<summary>
Allow specified domain to get status of iptables service
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="iptables_admin" lineno="241">
<summary>
All of the rules required to
administrate an iptables
environment.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
</module>
<module name="iscsi" filename="policy/modules/system/iscsi.if">
<summary>Establish connections to iSCSI devices.</summary>
<interface name="iscsid_domtrans" lineno="13">
<summary>
Execute a domain transition to run iscsid.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="iscsi_manage_semaphores" lineno="33">
<summary>
Create, read, write, and delete
iscsid sempaphores.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="iscsi_stream_connect" lineno="52">
<summary>
Connect to iscsid using a unix
domain stream socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="iscsi_read_lib_files" lineno="71">
<summary>
Read iscsid lib files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="iscsi_admin" lineno="98">
<summary>
All of the rules required to
administrate an iscsi environment.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
</module>
<module name="libraries" filename="policy/modules/system/libraries.if">
<summary>Policy for system libraries.</summary>
<interface name="libs_domtrans_ldconfig" lineno="13">
<summary>
Execute ldconfig in the ldconfig domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="libs_run_ldconfig" lineno="38">
<summary>
Execute ldconfig in the ldconfig domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
The role to allow the ldconfig domain.
</summary>
</param>
<rolecap/>
</interface>
<interface name="libs_exec_ldconfig" lineno="58">
<summary>
Execute ldconfig in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="libs_use_ld_so" lineno="78">
<summary>
Use the dynamic link/loader for automatic loading
of shared libraries.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="libs_legacy_use_ld_so" lineno="103">
<summary>
Use the dynamic link/loader for automatic loading
of shared libraries with legacy support.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="libs_exec_ld_so" lineno="123">
<summary>
Execute the dynamic link/loader in the caller's domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="libs_manage_ld_so" lineno="145">
<summary>
Create, read, write, and delete the
dynamic link/loader.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="libs_relabel_ld_so" lineno="165">
<summary>
Relabel to and from the type used for
the dynamic link/loader.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="libs_rw_ld_so_cache" lineno="184">
<summary>
Modify the dynamic link/loader's cached listing
of shared libraries.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="libs_search_lib" lineno="203">
<summary>
Search library directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="libs_dontaudit_write_lib_dirs" lineno="228">
<summary>
Do not audit attempts to write to library directories.
</summary>
<desc>
<p>
Do not audit attempts to write to library directories.
Typically this is used to quiet attempts to recompile
python byte code.
</p>
</desc>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="libs_manage_lib_dirs" lineno="246">
<summary>
Create, read, write, and delete library directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="libs_dontaudit_setattr_lib_files" lineno="264">
<summary>
dontaudit attempts to setattr on library files
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="libs_read_lib_files" lineno="283">
<summary>
Read files in the library directories, such
as static libraries.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="libs_exec_lib_files" lineno="304">
<summary>
Execute library scripts in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="libs_manage_lib_files" lineno="327">
<summary>
Create, read, write, and delete generic
files in library directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="libs_relabelto_lib_files" lineno="345">
<summary>
Relabel files to the type used in library directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="libs_relabel_lib_files" lineno="365">
<summary>
Relabel to and from the type used
for generic lib files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="libs_delete_lib_symlinks" lineno="384">
<summary>
Delete generic symlinks in library directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="libs_manage_shared_libs" lineno="403">
<summary>
Create, read, write, and delete shared libraries.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="libs_use_shared_libs" lineno="421">
<summary>
Load and execute functions from shared libraries.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="libs_legacy_use_shared_libs" lineno="444">
<summary>
Load and execute functions from shared libraries,
with legacy support.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="libs_relabel_shared_libs" lineno="465">
<summary>
Relabel to and from the type used for
shared libraries.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="locallogin" filename="policy/modules/system/locallogin.if">
<summary>Policy for local logins.</summary>
<interface name="locallogin_domtrans" lineno="13">
<summary>
Execute local logins in the local login domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="locallogin_read_state" lineno="35">
<summary>
Allow calling domain to read locallogin state.
</summary>
<param name="domain">
<summary>
Domain allowed permission.
</summary>
</param>
</interface>
<interface name="locallogin_use_fds" lineno="56">
<summary>
Allow processes to inherit local login file descriptors.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="locallogin_dontaudit_use_fds" lineno="74">
<summary>
Do not audit attempts to inherit local login file descriptors.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="locallogin_signull" lineno="92">
<summary>
Send a null signal to local login processes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="locallogin_search_keys" lineno="110">
<summary>
Search for key.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="locallogin_link_keys" lineno="128">
<summary>
Allow link to the local_login key ring.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="locallogin_domtrans_sulogin" lineno="146">
<summary>
Execute single-user logins in the single-user login domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
</module>
<module name="logging" filename="policy/modules/system/logging.if">
<summary>Policy for the kernel message logger and system logging daemon.</summary>
<interface name="logging_log_file" lineno="41">
<summary>
Make the specified type usable for log files
in a filesystem.
</summary>
<desc>
<p>
Make the specified type usable for log files in a filesystem.
This will also make the type usable for files, making
calls to files_type() redundant.  Failure to use this interface
for a log file type may result in problems with log
rotation, log analysis, and log monitoring programs.
</p>
<p>
Related interfaces:
</p>
<ul>
<li>logging_log_filetrans()</li>
</ul>
<p>
Example usage with a domain that can create
and append to a private log file stored in the
general directories (e.g., /var/log):
</p>
<p>
type mylogfile_t;
logging_log_file(mylogfile_t)
allow mydomain_t mylogfile_t:file { create_file_perms append_file_perms };
logging_log_filetrans(mydomain_t, mylogfile_t, file)
</p>
</desc>
<param name="type">
<summary>
Type to be used for files.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="logging_send_audit_msgs" lineno="62">
<summary>
Send audit messages.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_dontaudit_send_audit_msgs" lineno="77">
<summary>
dontaudit attempts to send audit messages.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="logging_set_loginuid" lineno="92">
<summary>
Set login uid
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_set_tty_audit" lineno="107">
<summary>
Set tty auditing
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_set_audit_parameters" lineno="121">
<summary>
Set up audit
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_read_audit_log" lineno="137">
<summary>
Read the audit log.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_domtrans_auditctl" lineno="159">
<summary>
Execute auditctl in the auditctl domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="logging_run_auditctl" lineno="184">
<summary>
Execute auditctl in the auditctl domain, and
allow the specified role the auditctl domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_domtrans_auditd" lineno="203">
<summary>
Execute auditd in the auditd domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="logging_run_auditd" lineno="227">
<summary>
Execute auditd in the auditd domain, and
allow the specified role the auditd domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
</interface>
<interface name="logging_domtrans_dispatcher" lineno="246">
<summary>
Execute a domain transition to run the audit dispatcher.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="logging_signal_dispatcher" lineno="264">
<summary>
Signal the audit dispatcher.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_dispatcher_domain" lineno="288">
<summary>
Create a domain for processes
which can be started by the system audit dispatcher
</summary>
<param name="domain">
<summary>
Type to be used as a domain.
</summary>
</param>
<param name="entry_point">
<summary>
Type of the program to be used as an entry point to this domain.
</summary>
</param>
</interface>
<interface name="logging_stream_connect_dispatcher" lineno="316">
<summary>
Connect to the audit dispatcher over an unix stream socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_manage_audit_config" lineno="336">
<summary>
Manage the auditd configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_manage_audit_log" lineno="358">
<summary>
Manage the audit log.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_domtrans_klog" lineno="380">
<summary>
Execute klogd in the klog domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="logging_check_exec_syslog" lineno="399">
<summary>
Check if syslogd is executable.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_domtrans_syslog" lineno="418">
<summary>
Execute syslogd in the syslog domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="logging_startstop_syslog" lineno="440">
<summary>
Allow specified domain to start/stop syslog units
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_status_syslog" lineno="459">
<summary>
Allow specified domain to check status of syslog unit
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_setattr_syslogd_tmp_files" lineno="479">
<summary>
Set the attributes of syslog temporary files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_relabel_syslogd_tmp_files" lineno="498">
<summary>
Relabel to and from syslog temporary file type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_setattr_syslogd_tmp_dirs" lineno="517">
<summary>
Set the attributes of syslog temporary directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_relabel_syslogd_tmp_dirs" lineno="536">
<summary>
Relabel to and from syslog temporary directory type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_log_filetrans" lineno="597">
<summary>
Create an object in the log directory, with a private type.
</summary>
<desc>
<p>
Allow the specified domain to create an object
in the general system log directories (e.g., /var/log)
with a private type.  Typically this is used for creating
private log files in /var/log with the private type instead
of the general system log type. To accomplish this goal,
either the program must be SELinux-aware, or use this interface.
</p>
<p>
Related interfaces:
</p>
<ul>
<li>logging_log_file()</li>
</ul>
<p>
Example usage with a domain that can create
and append to a private log file stored in the
general directories (e.g., /var/log):
</p>
<p>
type mylogfile_t;
logging_log_file(mylogfile_t)
allow mydomain_t mylogfile_t:file { create_file_perms append_file_perms };
logging_log_filetrans(mydomain_t, mylogfile_t, file)
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="private type">
<summary>
The type of the object to be created.
</summary>
</param>
<param name="object">
<summary>
The object class of the object being created.
</summary>
</param>
<param name="name" optional="true">
<summary>
The name of the object being created.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="logging_send_syslog_msg" lineno="639">
<summary>
Send system log messages.
</summary>
<desc>
<p>
Allow the specified domain to connect to the
system log service (syslog), to send messages be added to
the system logs. Typically this is used by services
that do not have their own log file in /var/log.
</p>
<p>
This does not allow messages to be sent to
the auditing system.
</p>
<p>
Programs which use the libc function syslog() will
require this access.
</p>
<p>
Related interfaces:
</p>
<ul>
<li>logging_send_audit_msgs()</li>
</ul>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_relabelto_devlog_sock_files" lineno="682">
<summary>
Allow domain to relabelto devlog sock_files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_create_devlog" lineno="700">
<summary>
Connect to the syslog control unix stream socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_read_audit_config" lineno="721">
<summary>
Read the auditd configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_dontaudit_search_audit_config" lineno="744">
<summary>
dontaudit search of auditd configuration files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_read_syslog_config" lineno="763">
<summary>
Read syslog configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_watch_runtime_dirs" lineno="781">
<summary>
Watch syslog runtime dirs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_manage_pid_sockets" lineno="799">
<summary>
Create, read, write, and delete syslog PID sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_search_logs" lineno="820">
<summary>
Allows the domain to open a file in the
log directory, but does not allow the listing
of the contents of the log directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_dontaudit_search_logs" lineno="840">
<summary>
Do not audit attempts to search the var log directory.
</summary>
<param name="domain">
<summary>
Domain not to audit.
</summary>
</param>
</interface>
<interface name="logging_list_logs" lineno="858">
<summary>
List the contents of the generic log directory (/var/log).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_rw_generic_log_dirs" lineno="878">
<summary>
Read and write the generic log directory (/var/log).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_search_all_logs" lineno="899">
<summary>
Search through all log dirs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_setattr_all_log_dirs" lineno="918">
<summary>
Set attributes on all log dirs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_dontaudit_getattr_all_logs" lineno="937">
<summary>
Do not audit attempts to get the attributes
of any log files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="logging_getattr_all_logs" lineno="955">
<summary>
Read the atttributes of any log file
</summary>
<param name="domain">
<summary>
Domain allowed access
</summary>
</param>
</interface>
<interface name="logging_append_all_logs" lineno="973">
<summary>
Append to all log files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_append_all_inherited_logs" lineno="994">
<summary>
Append to all log files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_read_all_logs" lineno="1013">
<summary>
Read all log files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_exec_all_logs" lineno="1035">
<summary>
Execute all log files in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_rw_all_logs" lineno="1055">
<summary>
read/write to all log files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_manage_all_logs" lineno="1075">
<summary>
Create, read, write, and delete all log files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_manage_generic_log_dirs" lineno="1096">
<summary>
Create, read, write, and delete generic log directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_relabel_generic_log_dirs" lineno="1116">
<summary>
Relabel from and to generic log directory type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_read_generic_logs" lineno="1136">
<summary>
Read generic log files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_mmap_generic_logs" lineno="1157">
<summary>
Map generic log files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_write_generic_logs" lineno="1175">
<summary>
Write generic log files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_dontaudit_write_generic_logs" lineno="1196">
<summary>
Dontaudit Write generic log files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="logging_rw_generic_logs" lineno="1214">
<summary>
Read and write generic log files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_manage_generic_logs" lineno="1237">
<summary>
Create, read, write, and delete
generic log files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_watch_generic_logs_dir" lineno="1256">
<summary>
Watch generic log dirs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_admin_audit" lineno="1281">
<summary>
All of the rules required to administrate
the audit environment
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="role">
<summary>
User role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_admin_syslog" lineno="1325">
<summary>
All of the rules required to administrate
the syslog environment
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="role">
<summary>
User role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_admin" lineno="1381">
<summary>
All of the rules required to administrate
the logging environment
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="role">
<summary>
User role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="logging_mmap_journal" lineno="1396">
<summary>
Map files in /run/log/journal/ directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="lvm" filename="policy/modules/system/lvm.if">
<summary>Policy for logical volume management programs.</summary>
<interface name="lvm_domtrans" lineno="13">
<summary>
Execute lvm programs in the lvm domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="lvm_exec" lineno="32">
<summary>
Execute lvm programs in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="lvm_run" lineno="57">
<summary>
Execute lvm programs in the lvm domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
The role to allow the LVM domain.
</summary>
</param>
<rolecap/>
</interface>
<interface name="lvm_signull" lineno="76">
<summary>
Send lvm a null signal.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="lvm_read_config" lineno="95">
<summary>
Read LVM configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="lvm_manage_config" lineno="116">
<summary>
Manage LVM configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="lvm_create_lock_dirs" lineno="137">
<summary>
Create lvm_lock_t directories
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="lvm_rw_inherited_pid_pipes" lineno="156">
<summary>
Read and write a lvm unnamed pipe.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="lvm_domtrans_clvmd" lineno="174">
<summary>
Execute a domain transition to run clvmd.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="lvm_admin" lineno="199">
<summary>
All of the rules required to
administrate an lvm environment.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
</interface>
<interface name="lvm_use_sem" lineno="236">
<summary>
Allow lvm_t to use a semaphore
</summary>
<param name="domain">
<summary>
Domain that created the semaphore
</summary>
</param>
</interface>
</module>
<module name="miscfiles" filename="policy/modules/system/miscfiles.if">
<summary>Miscellaneous files.</summary>
<interface name="miscfiles_cert_type" lineno="38">
<summary>
Make the specified type usable as a cert file.
</summary>
<desc>
<p>
Make the specified type usable for cert files.
This will also make the type usable for files, making
calls to files_type() redundant.  Failure to use this interface
for a temporary file may result in problems with
cert management tools.
</p>
<p>
Related interfaces:
</p>
<ul>
<li>files_type()</li>
</ul>
<p>
Example:
</p>
<p>
type mycertfile_t;
cert_type(mycertfile_t)
allow mydomain_t mycertfile_t:file read_file_perms;
files_search_etc(mydomain_t)
</p>
</desc>
<param name="type">
<summary>
Type to be used for files.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="miscfiles_tls_privkey_type" lineno="83">
<summary>
Make the specified type usable
as a SSL/TLS private key file.
</summary>
<desc>
<p>
Make the specified type usable for SSL/TLS private key files.
This will also make the type usable for files, making
calls to files_type() redundant.  Failure to use this interface
for a temporary file may result in problems with
SSL/TLS private key management tools.
</p>
<p>
Related interfaces:
</p>
<ul>
<li>files_type()</li>
</ul>
<p>
Example:
</p>
<p>
type mytlsprivkeyfile_t;
tls_privkey_type(mytlsprivkeyfile_t)
allow mydomain_t mytlsprivkeyfile_t:file read_file_perms;
files_search_etc(mydomain_t)
</p>
</desc>
<param name="type">
<summary>
Type to be used for files.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="miscfiles_read_all_certs" lineno="103">
<summary>
Read all SSL/TLS certificates.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="miscfiles_read_generic_certs" lineno="124">
<summary>
Read generic SSL/TLS certificates.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="miscfiles_dontaudit_read_generic_certs" lineno="145">
<summary>
Do not audit attempts to read generic SSL/TLS certificates.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
<rolecap/>
</interface>
<interface name="miscfiles_manage_generic_cert_dirs" lineno="165">
<summary>
Manage generic SSL/TLS certificates.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_manage_generic_cert_files" lineno="184">
<summary>
Manage generic SSL/TLS certificates.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="miscfiles_read_generic_tls_privkey" lineno="205">
<summary>
Read generic SSL/TLS private
keys.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="miscfiles_manage_generic_tls_privkey_dirs" lineno="226">
<summary>
Manage generic SSL/TLS private
keys.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_manage_generic_tls_privkey_files" lineno="246">
<summary>
Manage generic SSL/TLS private
keys.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="miscfiles_manage_generic_tls_privkey_lnk_files" lineno="267">
<summary>
Manage generic SSL/TLS private
keys.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="miscfiles_read_fonts" lineno="286">
<summary>
Read fonts.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="miscfiles_setattr_fonts_dirs" lineno="317">
<summary>
Set the attributes on a fonts directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="miscfiles_dontaudit_setattr_fonts_dirs" lineno="337">
<summary>
Do not audit attempts to set the attributes
on a fonts directory.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
<rolecap/>
</interface>
<interface name="miscfiles_dontaudit_write_fonts" lineno="356">
<summary>
Do not audit attempts to write fonts.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
<rolecap/>
</interface>
<interface name="miscfiles_manage_fonts" lineno="376">
<summary>
Create, read, write, and delete fonts.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="miscfiles_setattr_fonts_cache_dirs" lineno="400">
<summary>
Set the attributes on a fonts cache directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_dontaudit_setattr_fonts_cache_dirs" lineno="419">
<summary>
Do not audit attempts to set the attributes
on a fonts cache directory.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="miscfiles_manage_fonts_cache" lineno="438">
<summary>
Create, read, write, and delete fonts cache.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="miscfiles_read_hwdata" lineno="460">
<summary>
Read hardware identification data.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_setattr_localization" lineno="480">
<summary>
Allow process to setattr localization info
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_read_localization" lineno="512">
<summary>
Allow process to read localization information.
</summary>
<desc>
<p>
Allow the specified domain to read the localization files.
This is typically for time zone configuration files, such as
/etc/localtime and files in /usr/share/zoneinfo.
Typically, any domain which needs to know the GMT/UTC
offset of the current timezone will need access
to these files. Generally, it should be safe for any
domain to read these files.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="miscfiles_rw_localization" lineno="535">
<summary>
Allow process to write localization info
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_relabel_localization" lineno="555">
<summary>
Allow process to relabel localization info
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_legacy_read_localization" lineno="574">
<summary>
Allow process to read legacy time localization info
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_watch_localization" lineno="593">
<summary>
Watch time localization info
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_search_man_pages" lineno="611">
<summary>
Search man pages.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_dontaudit_search_man_pages" lineno="630">
<summary>
Do not audit attempts to search man pages.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="miscfiles_read_man_pages" lineno="649">
<summary>
Read man pages
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="miscfiles_delete_man_pages" lineno="671">
<summary>
Delete man pages
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_manage_man_pages" lineno="693">
<summary>
Create, read, write, and delete man pages
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_read_man_cache" lineno="714">
<summary>
Read man cache content.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_map_man_cache" lineno="735">
<summary>
Map man cache content.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_manage_man_cache" lineno="754">
<summary>
Create, read, write, and delete
man cache content.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_relabel_man_cache" lineno="775">
<summary>
Relabel from and to man cache.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_read_public_files" lineno="796">
<summary>
Read public files used for file
transfer services.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="miscfiles_manage_public_files" lineno="818">
<summary>
Create, read, write, and delete public files
and directories used for file transfer services.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="miscfiles_read_tetex_data" lineno="838">
<summary>
Read TeX data
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_exec_tetex_data" lineno="862">
<summary>
Execute TeX data programs in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_domain_entry_test_files" lineno="886">
<summary>
Let test files be an entry point for
a specified domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_read_test_files" lineno="904">
<summary>
Read test files and directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_exec_test_files" lineno="923">
<summary>
Execute test files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_etc_filetrans_localization" lineno="943">
<summary>
Create files in etc directories
with localization file type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_manage_localization" lineno="963">
<summary>
Create, read, write, and delete localization
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
</module>
<module name="modutils" filename="policy/modules/system/modutils.if">
<summary>Policy for kernel module utilities</summary>
<interface name="modutils_getattr_module_deps" lineno="13">
<summary>
Getattr the dependencies of kernel modules.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="modutils_read_module_deps" lineno="31">
<summary>
Read the dependencies of kernel modules.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="modutils_read_module_objects" lineno="50">
<summary>
Read the kernel modules.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="modutils_read_module_config" lineno="71">
<summary>
Read the configuration options used when
loading modules.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="modutils_rename_module_config" lineno="97">
<summary>
Rename a file with the configuration options used when
loading modules.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="modutils_delete_module_config" lineno="116">
<summary>
Unlink a file with the configuration options used when
loading modules.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="modutils_manage_module_config" lineno="135">
<summary>
Manage files with the configuration options used when
loading modules.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="modutils_domtrans" lineno="155">
<summary>
Execute any modutil,
like insmod, kmod, depmod or updates-modules,
in the kmod domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="modutils_run" lineno="184">
<summary>
Execute any modutil,
like insmod, kmod, depmod or updates-modules,
in the kmod domain, and allow the specified role
the kmod domain, and use the caller's terminal.
Has a sigchld backchannel.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="modutils_exec" lineno="205">
<summary>
Execute any modutil,
like insmod, kmod, depmod or updates-modules,
in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="modutils_domtrans_insmod_uncond" lineno="226">
<summary>
Unconditionally execute insmod in the insmod domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="modutils_domtrans_insmod" lineno="241">
<summary>
Execute insmod in the insmod domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="modutils_run_insmod" lineno="265">
<summary>
Execute insmod in the insmod domain, and
allow the specified role the insmod domain,
and use the caller's terminal.  Has a sigchld
backchannel.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="modutils_exec_insmod" lineno="280">
<summary>
Execute insmod in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="modutils_domtrans_depmod" lineno="295">
<summary>
Execute depmod in the depmod domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="modutils_run_depmod" lineno="316">
<summary>
Execute depmod in the depmod domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="modutils_exec_depmod" lineno="331">
<summary>
Execute depmod in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="modutils_domtrans_update_mods" lineno="346">
<summary>
Execute update_modules in the update_modules domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="modutils_run_update_mods" lineno="367">
<summary>
Execute update_modules in the update_modules domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="modutils_exec_update_mods" lineno="382">
<summary>
Execute update_modules in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="modutils_read_var_run_files" lineno="397">
<summary>
Read kmod lib files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="mount" filename="policy/modules/system/mount.if">
<summary>Policy for mount.</summary>
<interface name="mount_domtrans" lineno="13">
<summary>
Execute mount in the mount domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="mount_run" lineno="40">
<summary>
Execute mount in the mount domain, and
allow the specified role the mount domain,
and use the caller's terminal.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="mount_exec" lineno="59">
<summary>
Execute mount in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mount_signal" lineno="82">
<summary>
Send a generic signal to mount.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mount_use_fds" lineno="100">
<summary>
Use file descriptors for mount.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="mount_domtrans_unconfined" lineno="118">
<summary>
Execute mount in the unconfined mount domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="mount_run_unconfined" lineno="144">
<summary>
Execute mount in the unconfined mount domain, and
allow the specified role the unconfined mount domain,
and use the caller's terminal.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="mount_read_loopback_files" lineno="163">
<summary>
Read loopback filesystem image files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mount_rw_loopback_files" lineno="181">
<summary>
Read and write loopback filesystem image files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mount_list_runtime" lineno="199">
<summary>
List mount runtime files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mount_watch_runtime_dirs" lineno="217">
<summary>
Watch mount runtime dirs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mount_getattr_runtime_files" lineno="235">
<summary>
Getattr on mount_runtime_t files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mount_rw_runtime_files" lineno="253">
<summary>
Read and write mount runtime files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<tunable name="allow_mount_anyfile" dftval="false">
<desc>
<p>
Allow the mount command to mount any directory or file.
</p>
</desc>
</tunable>
</module>
<module name="netlabel" filename="policy/modules/system/netlabel.if">
<summary>NetLabel/CIPSO labeled networking management</summary>
<interface name="netlabel_domtrans_mgmt" lineno="13">
<summary>
Execute netlabel_mgmt in the netlabel_mgmt domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="netlabel_run_mgmt" lineno="39">
<summary>
Execute netlabel_mgmt in the netlabel_mgmt domain, and
allow the specified role the netlabel_mgmt domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
</module>
<module name="pcmcia" filename="policy/modules/system/pcmcia.if">
<summary>PCMCIA card management services.</summary>
<interface name="pcmcia_stub" lineno="13">
<summary>
PCMCIA stub interface.  No access allowed.
</summary>
<param name="domain" unused="true">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="pcmcia_domtrans_cardmgr" lineno="29">
<summary>
Execute cardmgr in the cardmgr domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="pcmcia_use_cardmgr_fds" lineno="48">
<summary>
Inherit and use cardmgr file descriptors.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="pcmcia_domtrans_cardctl" lineno="66">
<summary>
Execute cardctl in the cardmgr domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="pcmcia_run_cardctl" lineno="93">
<summary>
Execute cardctl in the cardmgr
domain, and allow the specified
role the cardmgr domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="pcmcia_read_pid" lineno="112">
<summary>
Read cardmgr pid files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="pcmcia_manage_pid" lineno="132">
<summary>
Create, read, write, and delete
cardmgr pid files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="pcmcia_manage_pid_chr_files" lineno="152">
<summary>
Create, read, write, and delete
cardmgr runtime character nodes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="raid" filename="policy/modules/system/raid.if">
<summary>RAID array management tools.</summary>
<interface name="raid_domtrans_mdadm" lineno="14">
<summary>
Execute software raid tools in
the mdadm domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="raid_run_mdadm" lineno="40">
<summary>
Execute mdadm in the mdadm
domain, and allow the specified
role the mdadm domain.
</summary>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="raid_read_mdadm_pid" lineno="59">
<summary>
read mdadm pid files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="raid_manage_mdadm_pid" lineno="80">
<summary>
Create, read, write, and delete
mdadm pid files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="raid_admin_mdadm" lineno="106">
<summary>
All of the rules required to
administrate an mdadm environment.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
</module>
<module name="selinuxutil" filename="policy/modules/system/selinuxutil.if">
<summary>Policy for SELinux policy and userland applications.</summary>
<interface name="seutil_domtrans_checkpolicy" lineno="13">
<summary>
Execute checkpolicy in the checkpolicy domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="seutil_run_checkpolicy" lineno="41">
<summary>
Execute checkpolicy in the checkpolicy domain, and
allow the specified role the checkpolicy domain,
and use the caller's terminal.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="seutil_exec_checkpolicy" lineno="61">
<summary>
Execute checkpolicy in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="seutil_domtrans_loadpolicy" lineno="81">
<summary>
Execute load_policy in the load_policy domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="seutil_run_loadpolicy" lineno="108">
<summary>
Execute load_policy in the load_policy domain, and
allow the specified role the load_policy domain,
and use the caller's terminal.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="seutil_exec_loadpolicy" lineno="127">
<summary>
Execute load_policy in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="seutil_read_loadpolicy" lineno="146">
<summary>
Read the load_policy program file.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="seutil_domtrans_newrole" lineno="165">
<summary>
Execute newrole in the newole domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="seutil_run_newrole" lineno="193">
<summary>
Execute newrole in the newrole domain, and
allow the specified role the newrole domain,
and use the caller's terminal.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="seutil_exec_newrole" lineno="212">
<summary>
Execute newrole in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="seutil_dontaudit_signal_newrole" lineno="233">
<summary>
Do not audit the caller attempts to send
a signal to newrole.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="seutil_sigchld_newrole" lineno="261">
<summary>
Send a SIGCHLD signal to newrole.
</summary>
<desc>
<p>
Allow the specified domain to send a SIGCHLD
signal to newrole.  This signal is automatically
sent from a process that is terminating to
its parent.  This may be needed by domains
that are executed from newrole.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<infoflow type="write" weight="1"/>
</interface>
<interface name="seutil_use_newrole_fds" lineno="279">
<summary>
Inherit and use newrole file descriptors.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="seutil_dontaudit_use_newrole_fds" lineno="298">
<summary>
Do not audit attempts to inherit and use
newrole file descriptors.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="seutil_domtrans_runinit" lineno="316">
<summary>
Execute run_init in the run_init domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="seutil_labeled_init_script_domtrans_runinit" lineno="347">
<summary>
Execute file in the run_init domain.
</summary>
<desc>
<p>
Execute file in the run_init domain.
This is used for the Gentoo integrated run_init.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="domain">
<summary>
Type of entry file.
</summary>
</param>
</interface>
<interface name="seutil_init_script_domtrans_runinit" lineno="376">
<summary>
Execute init scripts in the run_init domain.
</summary>
<desc>
<p>
Execute init scripts in the run_init domain.
This is used for the Gentoo integrated run_init.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="seutil_run_runinit" lineno="406">
<summary>
Execute run_init in the run_init domain, and
allow the specified role the run_init domain,
and use the caller's terminal.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="seutil_init_script_run_runinit" lineno="442">
<summary>
Execute init scripts in the run_init domain, and
allow the specified role the run_init domain,
and use the caller's terminal.
</summary>
<desc>
<p>
Execute init scripts in the run_init domain, and
allow the specified role the run_init domain,
and use the caller's terminal.
</p>
<p>
This is used for the Gentoo integrated run_init.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
</interface>
<interface name="seutil_labeled_init_script_run_runinit" lineno="483">
<summary>
Execute specified file in the run_init domain, and
allow the specified role the run_init domain,
and use the caller's terminal.
</summary>
<desc>
<p>
Execute specified file in the run_init domain, and
allow the specified role the run_init domain,
and use the caller's terminal.
</p>
<p>
This is used for the Gentoo integrated run_init.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<param name="domain">
<summary>
Type of init script.
</summary>
</param>
</interface>
<interface name="seutil_use_runinit_fds" lineno="502">
<summary>
Inherit and use run_init file descriptors.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="seutil_domtrans_setfiles" lineno="520">
<summary>
Execute setfiles in the setfiles domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="seutil_run_setfiles" lineno="548">
<summary>
Execute setfiles in the setfiles domain, and
allow the specified role the setfiles domain,
and use the caller's terminal.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="seutil_exec_setfiles" lineno="567">
<summary>
Execute setfiles in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="seutil_dontaudit_search_config" lineno="588">
<summary>
Do not audit attempts to search the SELinux
configuration directory (/etc/selinux).
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="seutil_dontaudit_read_config" lineno="607">
<summary>
Do not audit attempts to read the SELinux
userland configuration (/etc/selinux).
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="seutil_read_config" lineno="627">
<summary>
Read the general SELinux configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="seutil_rw_config" lineno="649">
<summary>
Read and write the general SELinux configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="seutil_manage_config" lineno="671">
<summary>
Create, read, write, and delete
the general selinux configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="seutil_manage_config_dirs" lineno="693">
<summary>
Create, read, write, and delete
the general selinux configuration directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="seutil_search_default_contexts" lineno="712">
<summary>
Search the policy directory with default_context files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="seutil_read_default_contexts" lineno="732">
<summary>
Read the default_contexts files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="seutil_manage_default_contexts" lineno="752">
<summary>
Create, read, write, and delete the default_contexts files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="seutil_read_file_contexts" lineno="773">
<summary>
Read the file_contexts files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="seutil_dontaudit_read_file_contexts" lineno="795">
<summary>
Do not audit attempts to read the file_contexts files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
<rolecap/>
</interface>
<interface name="seutil_rw_file_contexts" lineno="815">
<summary>
Read and write the file_contexts files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="seutil_manage_file_contexts" lineno="837">
<summary>
Create, read, write, and delete the file_contexts files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="seutil_read_bin_policy" lineno="858">
<summary>
Read the SELinux binary policy.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="seutil_create_bin_policy" lineno="879">
<summary>
Create the SELinux binary policy.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="seutil_relabelto_bin_policy" lineno="902">
<summary>
Allow the caller to relabel a file to the binary policy type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="seutil_manage_bin_policy" lineno="923">
<summary>
Create, read, write, and delete the SELinux
binary policy.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="seutil_read_src_policy" lineno="945">
<summary>
Read SELinux policy source files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="seutil_manage_src_policy" lineno="967">
<summary>
Create, read, write, and delete SELinux
policy source files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="seutil_domtrans_semanage" lineno="988">
<summary>
Execute a domain transition to run semanage.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="seutil_run_semanage" lineno="1016">
<summary>
Execute semanage in the semanage domain, and
allow the specified role the semanage domain,
and use the caller's terminal.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="seutil_read_module_store" lineno="1035">
<summary>
Read the semanage module store.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="seutil_manage_module_store" lineno="1060">
<summary>
Full management of the semanage
module store.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="seutil_get_semanage_read_lock" lineno="1084">
<summary>
Get read lock on module store
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="seutil_get_semanage_trans_lock" lineno="1103">
<summary>
Get trans lock on module store
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="seutil_libselinux_linked" lineno="1131">
<summary>
SELinux-enabled program access for
libselinux-linked programs.
</summary>
<desc>
<p>
SELinux-enabled programs are typically
linked to the libselinux library.  This
interface will allow access required for
the libselinux constructor to function.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="seutil_dontaudit_libselinux_linked" lineno="1161">
<summary>
Do not audit SELinux-enabled program access for
libselinux-linked programs.
</summary>
<desc>
<p>
SELinux-enabled programs are typically
linked to the libselinux library.  This
interface will dontaudit access required for
the libselinux constructor to function.
</p>
<p>
Generally this should not be used on anything
but simple SELinux-enabled programs that do not
rely on data initialized by the libselinux
constructor.
</p>
</desc>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
</module>
<module name="setrans" filename="policy/modules/system/setrans.if">
<summary>SELinux MLS/MCS label translation service.</summary>
<interface name="setrans_initrc_domtrans" lineno="14">
<summary>
Execute setrans server in the setrans domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="setrans_translate_context" lineno="32">
<summary>
Allow a domain to translate contexts.  (Deprecated)
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="setrans_admin" lineno="52">
<summary>
All of the rules required to
administrate an setrans environment.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
</interface>
</module>
<module name="sysnetwork" filename="policy/modules/system/sysnetwork.if">
<summary>Policy for network configuration: ifconfig and dhcp client.</summary>
<interface name="sysnet_domtrans_dhcpc" lineno="13">
<summary>
Execute dhcp client in dhcpc domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="sysnet_run_dhcpc" lineno="39">
<summary>
Execute DHCP clients in the dhcpc domain, and
allow the specified role the dhcpc domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="sysnet_dontaudit_rw_dhcpc_udp_sockets" lineno="59">
<summary>
Do not audit attempts to read and
write dhcpc udp socket descriptors.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="sysnet_dontaudit_use_dhcpc_fds" lineno="78">
<summary>
Do not audit attempts to use
the dhcp file descriptors.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="sysnet_dontaudit_rw_dhcpc_unix_stream_sockets" lineno="97">
<summary>
Do not audit attempts to read/write to the
dhcp unix stream socket descriptors.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="sysnet_sigchld_dhcpc" lineno="115">
<summary>
Send a SIGCHLD signal to the dhcp client.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_kill_dhcpc" lineno="134">
<summary>
Send a kill signal to the dhcp client.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="sysnet_sigstop_dhcpc" lineno="152">
<summary>
Send a SIGSTOP signal to the dhcp client.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_signull_dhcpc" lineno="170">
<summary>
Send a null signal to the dhcp client.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_signal_dhcpc" lineno="189">
<summary>
Send a generic signal to the dhcp client.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="sysnet_dbus_chat_dhcpc" lineno="208">
<summary>
Send and receive messages from
dhcpc over dbus.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_rw_dhcp_config" lineno="228">
<summary>
Read and write dhcp configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_search_dhcpc_state" lineno="248">
<summary>
Search the DHCP client state
directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_read_dhcpc_state" lineno="267">
<summary>
Read dhcp client state files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_delete_dhcpc_state" lineno="285">
<summary>
Delete the dhcp client state files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_setattr_config" lineno="303">
<summary>
Set the attributes of network config files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_read_config" lineno="343">
<summary>
Read network config files.
</summary>
<desc>
<p>
Allow the specified domain to read the
general network configuration files.  A
common example of this is the
/etc/resolv.conf file, which has domain
name system (DNS) server IP addresses.
Typically, most networking processes will
require	the access provided by this interface.
</p>
<p>
Higher-level interfaces which involve
networking will generally call this interface,
for example:
</p>
<ul>
<li>sysnet_dns_name_resolve()</li>
<li>sysnet_use_ldap()</li>
<li>sysnet_use_portmap()</li>
</ul>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_dontaudit_read_config" lineno="377">
<summary>
Do not audit attempts to read network config files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="sysnet_write_config" lineno="395">
<summary>
Write network config files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_create_config" lineno="414">
<summary>
Create network config files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_relabel_config" lineno="433">
<summary>
Relabel network config files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_etc_filetrans_config" lineno="458">
<summary>
Create files in /etc with the type used for
the network config files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="name" optional="true">
<summary>
The name of the object being created.
</summary>
</param>
</interface>
<interface name="sysnet_manage_config" lineno="476">
<summary>
Create, read, write, and delete network config files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_read_dhcpc_pid" lineno="504">
<summary>
Read the dhcp client pid file.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_delete_dhcpc_pid" lineno="523">
<summary>
Delete the dhcp client pid file.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_domtrans_ifconfig" lineno="541">
<summary>
Execute ifconfig in the ifconfig domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="sysnet_run_ifconfig" lineno="568">
<summary>
Execute ifconfig in the ifconfig domain, and
allow the specified role the ifconfig domain,
and use the caller's terminal.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="sysnet_exec_ifconfig" lineno="588">
<summary>
Execute ifconfig in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_signal_ifconfig" lineno="608">
<summary>
Send a generic signal to ifconfig.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="sysnet_signull_ifconfig" lineno="627">
<summary>
Send null signals to ifconfig.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="sysnet_read_dhcp_config" lineno="645">
<summary>
Read the DHCP configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_search_dhcp_state" lineno="665">
<summary>
Search the DHCP state data directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_dhcp_state_filetrans" lineno="709">
<summary>
Create DHCP state data.
</summary>
<desc>
<p>
Create DHCP state data.
</p>
<p>
This is added for DHCP server, as
the server and client put their state
files in the same directory.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="file_type">
<summary>
The type of the object to be created
</summary>
</param>
<param name="object_class">
<summary>
The object class.
</summary>
</param>
<param name="name" optional="true">
<summary>
The name of the object being created.
</summary>
</param>
</interface>
<interface name="sysnet_dns_name_resolve" lineno="729">
<summary>
Perform a DNS name resolution.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="sysnet_use_ldap" lineno="780">
<summary>
Connect and use a LDAP server.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_use_portmap" lineno="808">
<summary>
Connect and use remote port mappers.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="systemd" filename="policy/modules/system/systemd.if">
<summary>Systemd components (not PID 1)</summary>
<template name="systemd_role_template" lineno="23">
<summary>
Template for systemd --user per-role domains.
</summary>
<param name="prefix">
<summary>
Prefix for generated types
</summary>
</param>
<param name="role">
<summary>
The user role.
</summary>
</param>
<param name="userdomain">
<summary>
The user domain for the role.
</summary>
</param>
</template>
<interface name="systemd_log_parse_environment" lineno="74">
<summary>
Make the specified type usable as an
log parse environment type.
</summary>
<param name="domain">
<summary>
Type to be used as a log parse environment type.
</summary>
</param>
</interface>
<interface name="systemd_use_nss" lineno="94">
<summary>
Allow domain to use systemd's Name Service Switch (NSS) module.
This module provides UNIX user and group name resolution for dynamic users
and groups allocated through the DynamicUser= option in systemd unit files
</summary>
<param name="domain">
<summary>
Domain allowed access
</summary>
</param>
</interface>
<interface name="systemd_PrivateDevices" lineno="121">
<summary>
Allow domain to be used as a systemd service with a unit
that uses PrivateDevices=yes in section [Service].
</summary>
<param name="domain">
<summary>
Domain allowed access
</summary>
</param>
</interface>
<interface name="systemd_read_hwdb" lineno="138">
<summary>
Allow domain to read udev hwdb file
</summary>
<param name="domain">
<summary>
domain allowed access
</summary>
</param>
</interface>
<interface name="systemd_map_hwdb" lineno="156">
<summary>
Allow domain to map udev hwdb file
</summary>
<param name="domain">
<summary>
domain allowed access
</summary>
</param>
</interface>
<interface name="systemd_read_logind_pids" lineno="174">
<summary>
Read systemd_login PID files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_manage_logind_pid_pipes" lineno="194">
<summary>
Manage systemd_login PID pipes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_write_logind_pid_pipes" lineno="213">
<summary>
Write systemd_login named pipe.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_use_logind_fds" lineno="234">
<summary>
Use inherited systemd
logind file descriptors.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_read_logind_sessions_files" lineno="252">
<summary>
Read logind sessions files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_write_inherited_logind_sessions_pipes" lineno="273">
<summary>
Write inherited logind sessions pipes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_write_inherited_logind_inhibit_pipes" lineno="293">
<summary>
Write inherited logind inhibit pipes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_dbus_chat_logind" lineno="314">
<summary>
Send and receive messages from
systemd logind over dbus.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_write_kmod_files" lineno="335">
<summary>
Allow process to write to systemd_kmod_conf_t.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="systemd_status_logind" lineno="349">
<summary>
Get the system status information from systemd_login
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_signull_logind" lineno="368">
<summary>
Send systemd_login a null signal.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_read_machines" lineno="386">
<summary>
Allow reading /run/systemd/machines
</summary>
<param name="domain">
<summary>
Domain that can access the machines files
</summary>
</param>
</interface>
<interface name="systemd_dbus_chat_hostnamed" lineno="406">
<summary>
Send and receive messages from
systemd hostnamed over dbus.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_use_passwd_agent_fds" lineno="426">
<summary>
allow systemd_passwd_agent to inherit fds
</summary>
<param name="domain">
<summary>
Domain that owns the fds
</summary>
</param>
</interface>
<interface name="systemd_use_passwd_agent" lineno="445">
<summary>
Allow a systemd_passwd_agent_t process to interact with a daemon
that needs a password from the sysadmin.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_filetrans_passwd_runtime_dirs" lineno="469">
<summary>
Transition to systemd_passwd_runtime_t when creating dirs
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_manage_passwd_runtime_symlinks" lineno="488">
<summary>
Allow to domain to create systemd-passwd symlink
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_manage_all_units" lineno="506">
<summary>
manage systemd unit dirs and the files in them
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_read_journal_files" lineno="526">
<summary>
Allow domain to read systemd_journal_t files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_manage_journal_files" lineno="545">
<summary>
Allow domain to create/manage systemd_journal_t files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_relabelto_journal_dirs" lineno="565">
<summary>
Relabel to systemd-journald directory type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_relabelto_journal_files" lineno="584">
<summary>
Relabel to systemd-journald file type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_read_networkd_units" lineno="604">
<summary>
Allow domain to read systemd_networkd_t unit files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_manage_networkd_units" lineno="624">
<summary>
Allow domain to create/manage systemd_networkd_t unit files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_enabledisable_networkd" lineno="644">
<summary>
Allow specified domain to enable systemd-networkd units
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_startstop_networkd" lineno="663">
<summary>
Allow specified domain to start systemd-networkd units
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_status_networkd" lineno="682">
<summary>
Allow specified domain to get status of systemd-networkd
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_relabelfrom_networkd_tun_sockets" lineno="701">
<summary>
Relabel systemd_networkd tun socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_rw_networkd_netlink_route_sockets" lineno="719">
<summary>
Read/Write from systemd_networkd netlink route socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_list_networkd_runtime" lineno="737">
<summary>
Allow domain to list dirs under /run/systemd/netif
</summary>
<param name="domain">
<summary>
domain permitted the access
</summary>
</param>
</interface>
<interface name="systemd_watch_networkd_runtime_dirs" lineno="756">
<summary>
Watch directories under /run/systemd/netif
</summary>
<param name="domain">
<summary>
Domain permitted the access
</summary>
</param>
</interface>
<interface name="systemd_read_networkd_runtime" lineno="775">
<summary>
Allow domain to read files generated by systemd_networkd
</summary>
<param name="domain">
<summary>
domain allowed access
</summary>
</param>
</interface>
<interface name="systemd_read_logind_state" lineno="794">
<summary>
Allow systemd_logind_t to read process state for cgroup file
</summary>
<param name="domain">
<summary>
Domain systemd_logind_t may access.
</summary>
</param>
</interface>
<interface name="systemd_start_power_units" lineno="813">
<summary>
Allow specified domain to start power units
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="systemd_status_power_units" lineno="832">
<summary>
Get the system status information about power units
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_tmpfiles_conf_file" lineno="852">
<summary>
Make the specified type usable for
systemd tmpfiles config files.
</summary>
<param name="type">
<summary>
Type to be used for systemd tmpfiles config files.
</summary>
</param>
</interface>
<interface name="systemd_tmpfiles_creator" lineno="873">
<summary>
Allow the specified domain to create
the tmpfiles config directory with
the correct context.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_tmpfiles_conf_filetrans" lineno="909">
<summary>
Create an object in the systemd tmpfiles config
directory, with a private type
using a type transition.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="private type">
<summary>
The type of the object to be created.
</summary>
</param>
<param name="object">
<summary>
The object class of the object being created.
</summary>
</param>
<param name="name" optional="true">
<summary>
The name of the object being created.
</summary>
</param>
</interface>
<interface name="systemd_list_tmpfiles_conf" lineno="928">
<summary>
Allow domain to list systemd tmpfiles config directory
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_relabelto_tmpfiles_conf_dirs" lineno="946">
<summary>
Allow domain to relabel to systemd tmpfiles config directory
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_relabelto_tmpfiles_conf_files" lineno="964">
<summary>
Allow domain to relabel to systemd tmpfiles config files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_tmpfilesd_managed" lineno="987">
<summary>
Allow systemd_tmpfiles_t to manage filesystem objects
</summary>
<param name="type">
<summary>
type of object to manage
</summary>
</param>
<param name="class">
<summary>
object class to manage
</summary>
</param>
</interface>
<interface name="systemd_dbus_chat_resolved" lineno="1006">
<summary>
Send and receive messages from
systemd resolved over dbus.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_read_resolved_runtime" lineno="1026">
<summary>
Allow domain to read resolv.conf file generated by systemd_resolved
</summary>
<param name="domain">
<summary>
domain allowed access
</summary>
</param>
</interface>
<interface name="systemd_getattr_updated_runtime" lineno="1044">
<summary>
Allow domain to getattr on .updated file (generated by systemd-update-done
</summary>
<param name="domain">
<summary>
domain allowed access
</summary>
</param>
</interface>
<interface name="systemd_search_all_user_keys" lineno="1062">
<summary>
Search keys for the all systemd --user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_create_all_user_keys" lineno="1080">
<summary>
Create keys for the all systemd --user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="systemd_write_all_user_keys" lineno="1098">
<summary>
Write keys for the all systemd --user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<tunable name="systemd_tmpfiles_manage_all" dftval="false">
<desc>
<p>
Enable support for systemd-tmpfiles to manage all non-security files.
</p>
</desc>
</tunable>
<tunable name="systemd_nspawn_labeled_namespace" dftval="false">
<desc>
<p>
Allow systemd-nspawn to create a labelled namespace with the same types
as parent environment
</p>
</desc>
</tunable>
<tunable name="systemd_logind_get_bootloader" dftval="false">
<desc>
<p>
Allow systemd-logind to interact with the bootloader (read which one is
installed on fixed disks, enumerate entries for dbus property
BootLoaderEntries, etc.)
</p>
</desc>
</tunable>
</module>
<module name="udev" filename="policy/modules/system/udev.if">
<summary>Policy for udev.</summary>
<interface name="udev_signal" lineno="13">
<summary>
Send generic signals to udev.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="udev_domtrans" lineno="31">
<summary>
Execute udev in the udev domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="udev_run_domain" lineno="62">
<summary>
Allow udev to execute the specified program in
the specified domain.
</summary>
<desc>
<p>
This is a interface to support the UDEV 'RUN'
command.  This will allow the command run by
udev to be run in a domain other than udev_t.
</p>
</desc>
<param name="domain">
<summary>
Domain to execute in.
</summary>
</param>
<param name="entry_file">
<summary>
Domain entry point file.
</summary>
</param>
</interface>
<interface name="udev_exec" lineno="80">
<summary>
Execute udev in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="udev_helper_domtrans" lineno="98">
<summary>
Execute a udev helper in the udev domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="udev_read_state" lineno="116">
<summary>
Allow process to read udev process state.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="udev_create_kobject_uevent_sockets" lineno="137">
<summary>
Allow domain to create uevent sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="udev_dontaudit_use_fds" lineno="156">
<summary>
Do not audit attempts to inherit a
udev file descriptor.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="udev_dontaudit_rw_dgram_sockets" lineno="175">
<summary>
Do not audit attempts to read or write
to a udev unix datagram socket.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="udev_manage_rules_files" lineno="193">
<summary>
Manage udev rules files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="udev_dontaudit_search_db" lineno="215">
<summary>
Do not audit search of udev database directories.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="udev_read_db" lineno="239">
<summary>
Read the udev device table.
</summary>
<desc>
<p>
Allow the specified domain to read the udev device table.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="udev_rw_db" lineno="266">
<summary>
Allow process to modify list of devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="udev_relabelto_db" lineno="285">
<summary>
Allow process to relabelto udev database
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="udev_relabelto_db_sockets" lineno="305">
<summary>
Allow process to relabelto sockets in /run/udev
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="udev_search_pids" lineno="323">
<summary>
Search through udev pid content
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="udev_list_pids" lineno="342">
<summary>
list udev pid content
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="udev_manage_pid_dirs" lineno="362">
<summary>
Create, read, write, and delete
udev pid directories
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="udev_read_pid_files" lineno="381">
<summary>
Read udev pid files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="udev_dontaudit_rw_pid_files" lineno="400">
<summary>
dontaudit attempts to read/write udev pidfiles
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="udev_manage_pid_files" lineno="419">
<summary>
Create, read, write, and delete
udev pid files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="udev_generic_pid_filetrans_run_dirs" lineno="443">
<summary>
Create directories in the run location with udev_runtime_t type
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="name" optional="true">
<summary>
Name of the directory that is created
</summary>
</param>
</interface>
<interface name="udevadm_domtrans" lineno="461">
<summary>
Execute udev admin in the udevadm domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="udevadm_run" lineno="486">
<summary>
Execute udevadm in the udevadm domain, and
allow the specified role the udevadm domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
Role allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="udevadm_exec" lineno="505">
<summary>
Execute udevadm in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="unconfined" filename="policy/modules/system/unconfined.if">
<summary>The unconfined domain.</summary>
<interface name="unconfined_domain_noaudit" lineno="13">
<summary>
Make the specified domain unconfined.
</summary>
<param name="domain">
<summary>
Domain to make unconfined.
</summary>
</param>
</interface>
<interface name="unconfined_domain" lineno="133">
<summary>
Make the specified domain unconfined and
audit executable heap usage.
</summary>
<desc>
<p>
Make the specified domain unconfined and
audit executable heap usage.  With exception
of memory protections, usage of this interface
will result in the level of access the domain has
is like SELinux	was not being used.
</p>
<p>
Only completely trusted domains should use this interface.
</p>
<p>
Does not allow return communications from confined
domains via message based mechanisms such as dbus or
SysV message queues.
</p>
</desc>
<param name="domain">
<summary>
Domain to make unconfined.
</summary>
</param>
</interface>
<interface name="unconfined_domtrans" lineno="151">
<summary>
Transition to the unconfined domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="unconfined_run" lineno="174">
<summary>
Execute specified programs in the unconfined domain.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="role">
<summary>
The role to allow the unconfined domain.
</summary>
</param>
</interface>
<interface name="unconfined_shell_domtrans" lineno="193">
<summary>
Transition to the unconfined domain by executing a shell.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="unconfined_domtrans_to" lineno="231">
<summary>
Allow unconfined to execute the specified program in
the specified domain.
</summary>
<desc>
<p>
Allow unconfined to execute the specified program in
the specified domain.
</p>
<p>
This is a interface to support third party modules
and its use is not allowed in upstream reference
policy.
</p>
</desc>
<param name="domain">
<summary>
Domain to execute in.
</summary>
</param>
<param name="entry_file">
<summary>
Domain entry point file.
</summary>
</param>
</interface>
<interface name="unconfined_run_to" lineno="268">
<summary>
Allow unconfined to execute the specified program in
the specified domain.  Allow the specified domain the
unconfined role and use of unconfined user terminals.
</summary>
<desc>
<p>
Allow unconfined to execute the specified program in
the specified domain.  Allow the specified domain the
unconfined role and use of unconfined user terminals.
</p>
<p>
This is a interface to support third party modules
and its use is not allowed in upstream reference
policy.
</p>
</desc>
<param name="domain">
<summary>
Domain to execute in.
</summary>
</param>
<param name="entry_file">
<summary>
Domain entry point file.
</summary>
</param>
</interface>
<interface name="unconfined_use_fds" lineno="289">
<summary>
Inherit file descriptors from the unconfined domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="unconfined_sigchld" lineno="307">
<summary>
Send a SIGCHLD signal to the unconfined domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="unconfined_signull" lineno="325">
<summary>
Send a SIGNULL signal to the unconfined domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="unconfined_signal" lineno="343">
<summary>
Send generic signals to the unconfined domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="unconfined_read_pipes" lineno="361">
<summary>
Read unconfined domain unnamed pipes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="unconfined_dontaudit_read_pipes" lineno="379">
<summary>
Do not audit attempts to read unconfined domain unnamed pipes.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="unconfined_rw_pipes" lineno="397">
<summary>
Read and write unconfined domain unnamed pipes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="unconfined_dontaudit_rw_pipes" lineno="416">
<summary>
Do not audit attempts to read and write
unconfined domain unnamed pipes.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="unconfined_stream_connect" lineno="435">
<summary>
Connect to the unconfined domain using
a unix domain stream socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="unconfined_dontaudit_rw_stream_sockets" lineno="454">
<summary>
Do not audit attempts to read and write
unconfined domain stream.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="unconfined_dontaudit_rw_tcp_sockets" lineno="483">
<summary>
Do not audit attempts to read or write
unconfined domain tcp sockets.
</summary>
<desc>
<p>
Do not audit attempts to read or write
unconfined domain tcp sockets.
</p>
<p>
This interface was added due to a broken
symptom in ldconfig.
</p>
</desc>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="unconfined_search_keys" lineno="501">
<summary>
Search keys for the unconfined domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="unconfined_create_keys" lineno="519">
<summary>
Create keys for the unconfined domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="unconfined_write_keys" lineno="537">
<summary>
Write keys for the unconfined domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="unconfined_dbus_send" lineno="555">
<summary>
Send messages to the unconfined domain over dbus.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="unconfined_dbus_chat" lineno="575">
<summary>
Send and receive messages from
unconfined_t over dbus.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="unconfined_dbus_connect" lineno="596">
<summary>
Connect to the the unconfined DBUS
for service (acquire_svc).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="userdomain" filename="policy/modules/system/userdomain.if">
<summary>Policy for user domains</summary>
<template name="userdom_base_user_template" lineno="24">
<summary>
The template containing the most basic rules common to all users.
</summary>
<desc>
<p>
The template containing the most basic rules common to all users.
</p>
<p>
This template creates a user domain, types, and
rules for the user's tty and pty.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<rolebase/>
</template>
<template name="userdom_user_content_access_template" lineno="181">
<summary>
Template for handling user content through standard tunables
</summary>
<desc>
<p>
This template generates the tunable blocks for accessing
end user content, either the generic one (user_home_t)
or the complete one (based on user_home_content_type).
</p>
<p>
It calls the *_read_generic_user_content,
*_read_all_user_content, *_manage_generic_user_content, and
*_manage_all_user_content booleans.
</p>
</desc>
<param name="prefix">
<summary>
The application domain prefix to use, meant for the boolean
calls
</summary>
</param>
<param name="domain">
<summary>
The application domain which is granted the necessary privileges
</summary>
</param>
<rolebase/>
</template>
<interface name="userdom_ro_home_role" lineno="272">
<summary>
Allow a home directory for which the
role has read-only access.
</summary>
<desc>
<p>
Allow a home directory for which the
role has read-only access.
</p>
<p>
This does not allow execute access.
</p>
</desc>
<param name="role" unused="true">
<summary>
The user role
</summary>
</param>
<param name="userdomain">
<summary>
The user domain
</summary>
</param>
<rolebase/>
</interface>
<interface name="userdom_manage_home_role" lineno="343">
<summary>
Allow a home directory for which the
role has full access.
</summary>
<desc>
<p>
Allow a home directory for which the
role has full access.
</p>
<p>
This does not allow execute access.
</p>
</desc>
<param name="role" unused="true">
<summary>
The user role
</summary>
</param>
<param name="userdomain">
<summary>
The user domain
</summary>
</param>
<rolebase/>
</interface>
<interface name="userdom_manage_tmp_role" lineno="415">
<summary>
Manage user temporary files
</summary>
<param name="role" unused="true">
<summary>
Role allowed access.
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolebase/>
</interface>
<interface name="userdom_exec_user_tmp_files" lineno="442">
<summary>
The execute access user temporary files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolebase/>
</interface>
<interface name="userdom_manage_tmpfs_role" lineno="478">
<summary>
Role access for the user tmpfs type
that the user has full access.
</summary>
<desc>
<p>
Role access for the user tmpfs type
that the user has full access.
</p>
<p>
This does not allow execute access.
</p>
</desc>
<param name="role" unused="true">
<summary>
Role allowed access.
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<template name="userdom_basic_networking_template" lineno="504">
<summary>
The template allowing the user basic
network permissions
</summary>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<rolebase/>
</template>
<template name="userdom_change_password_template" lineno="545">
<summary>
The template for allowing the user to change passwords.
</summary>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<rolebase/>
</template>
<template name="userdom_common_user_template" lineno="575">
<summary>
The template containing rules common to unprivileged
users and administrative users.
</summary>
<desc>
<p>
This template creates a user domain, types, and
rules for the user's tty, pty, tmp, and tmpfs files.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
</template>
<template name="userdom_login_user_template" lineno="904">
<summary>
The template for creating a login user.
</summary>
<desc>
<p>
This template creates a user domain, types, and
rules for the user's tty, pty, home directories,
tmp, and tmpfs files.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
</template>
<template name="userdom_restricted_user_template" lineno="1027">
<summary>
The template for creating a unprivileged login user.
</summary>
<desc>
<p>
This template creates a user domain, types, and
rules for the user's tty, pty, home directories,
tmp, and tmpfs files.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
</template>
<template name="userdom_restricted_xwindows_user_template" lineno="1068">
<summary>
The template for creating a unprivileged xwindows login user.
</summary>
<desc>
<p>
The template for creating a unprivileged xwindows login user.
</p>
<p>
This template creates a user domain, types, and
rules for the user's tty, pty, home directories,
tmp, and tmpfs files.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
</template>
<template name="userdom_unpriv_user_template" lineno="1155">
<summary>
The template for creating a unprivileged user roughly
equivalent to a regular linux user.
</summary>
<desc>
<p>
The template for creating a unprivileged user roughly
equivalent to a regular linux user.
</p>
<p>
This template creates a user domain, types, and
rules for the user's tty, pty, home directories,
tmp, and tmpfs files.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
</template>
<template name="userdom_admin_user_template" lineno="1262">
<summary>
The template for creating an administrative user.
</summary>
<desc>
<p>
This template creates a user domain, types, and
rules for the user's tty, pty, home directories,
tmp, and tmpfs files.
</p>
<p>
The privileges given to administrative users are:
<ul>
<li>Raw disk access</li>
<li>Set all sysctls</li>
<li>All kernel ring buffer controls</li>
<li>Create, read, write, and delete all files but shadow</li>
<li>Manage source and binary format SELinux policy</li>
<li>Run insmod</li>
</ul>
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., sysadm
is the prefix for sysadm_t).
</summary>
</param>
</template>
<template name="userdom_security_admin_template" lineno="1422">
<summary>
Allow user to run as a secadm
</summary>
<desc>
<p>
Create objects in a user home directory
with an automatic type transition to
a specified private type.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="role">
<summary>
The role  of the object to create.
</summary>
</param>
</template>
<interface name="userdom_user_application_type" lineno="1497">
<summary>
Make the specified type usable as
a user application domain type.
</summary>
<param name="type">
<summary>
Type to be used as a user application domain.
</summary>
</param>
</interface>
<interface name="userdom_user_application_domain" lineno="1518">
<summary>
Make the specified type usable as
a user application domain.
</summary>
<param name="type">
<summary>
Type to be used as a user application domain.
</summary>
</param>
<param name="type">
<summary>
Type to be used as the domain entry point.
</summary>
</param>
</interface>
<interface name="userdom_user_home_content" lineno="1535">
<summary>
Make the specified type usable in a
user home directory.
</summary>
<param name="type">
<summary>
Type to be used as a file in the
user home directory.
</summary>
</param>
</interface>
<interface name="userdom_user_tmp_file" lineno="1561">
<summary>
Make the specified type usable as a
user temporary file.
</summary>
<param name="type">
<summary>
Type to be used as a file in the
temporary directories.
</summary>
</param>
</interface>
<interface name="userdom_user_tmpfs_file" lineno="1578">
<summary>
Make the specified type usable as a
user tmpfs file.
</summary>
<param name="type">
<summary>
Type to be used as a file in
tmpfs directories.
</summary>
</param>
</interface>
<interface name="userdom_attach_admin_tun_iface" lineno="1593">
<summary>
Allow domain to attach to TUN devices created by administrative users.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_setattr_user_ptys" lineno="1612">
<summary>
Set the attributes of a user pty.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_create_user_pty" lineno="1630">
<summary>
Create a user pty.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_getattr_user_home_dirs" lineno="1648">
<summary>
Get the attributes of user home directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_getattr_user_home_dirs" lineno="1667">
<summary>
Do not audit attempts to get the attributes of user home directories.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_search_user_home_dirs" lineno="1685">
<summary>
Search user home directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_search_user_home_dirs" lineno="1712">
<summary>
Do not audit attempts to search user home directories.
</summary>
<desc>
<p>
Do not audit attempts to search user home directories.
This will suppress SELinux denial messages when the specified
domain is denied the permission to search these directories.
</p>
</desc>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="userdom_list_user_home_dirs" lineno="1730">
<summary>
List user home directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_list_user_home_dirs" lineno="1749">
<summary>
Do not audit attempts to list user home subdirectories.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_create_user_home_dirs" lineno="1767">
<summary>
Create user home directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_user_home_dirs" lineno="1785">
<summary>
Manage user home directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_relabelto_user_home_dirs" lineno="1803">
<summary>
Relabel to user home directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_home_filetrans_user_home_dir" lineno="1827">
<summary>
Create directories in the home dir root with
the user home directory type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="name" optional="true">
<summary>
The name of the object being created.
</summary>
</param>
</interface>
<interface name="userdom_user_home_domtrans" lineno="1864">
<summary>
Do a domain transition to the specified
domain when executing a program in the
user home directory.
</summary>
<desc>
<p>
Do a domain transition to the specified
domain when executing a program in the
user home directory.
</p>
<p>
No interprocess communication (signals, pipes,
etc.) is provided by this interface since
the domains are not owned by this module.
</p>
</desc>
<param name="source_domain">
<summary>
Domain allowed to transition.
</summary>
</param>
<param name="target_domain">
<summary>
Domain to transition to.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_search_user_home_content" lineno="1884">
<summary>
Do not audit attempts to search user home content directories.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_list_all_user_home_content" lineno="1902">
<summary>
List all users home content directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_list_user_home_content" lineno="1921">
<summary>
List contents of users home directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_user_home_content_dirs" lineno="1940">
<summary>
Create, read, write, and delete directories
in a user home subdirectory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_delete_all_user_home_content_dirs" lineno="1959">
<summary>
Delete all user home content directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_delete_user_home_content_dirs" lineno="1979">
<summary>
Delete directories in a user home subdirectory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_setattr_all_user_home_content_dirs" lineno="1997">
<summary>
Set attributes of all user home content directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_setattr_user_home_content_files" lineno="2017">
<summary>
Do not audit attempts to set the
attributes of user home files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_map_user_home_content_files" lineno="2035">
<summary>
Map user home files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_mmap_user_home_content_files" lineno="2053">
<summary>
Mmap user home files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_read_user_home_content_files" lineno="2072">
<summary>
Read user home files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_read_user_home_content_files" lineno="2091">
<summary>
Do not audit attempts to read user home files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_read_all_user_home_content" lineno="2110">
<summary>
Read all user home content, including application-specific resources.
</summary>
<param name="domain">
<summary>
Domain allowed access
</summary>
</param>
</interface>
<interface name="userdom_manage_all_user_home_content" lineno="2132">
<summary>
Manage all user home content, including application-specific resources.
</summary>
<param name="domain">
<summary>
Domain allowed access
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_append_user_home_content_files" lineno="2154">
<summary>
Do not audit attempts to append user home files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_append_inherited_user_home_content_files" lineno="2172">
<summary>
Allow append on inherited user home files.
</summary>
<param name="domain">
<summary>
Domain to allow.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_write_user_home_content_files" lineno="2190">
<summary>
Do not audit attempts to write user home files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_delete_all_user_home_content_files" lineno="2208">
<summary>
Delete all user home content files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_delete_user_home_content_files" lineno="2228">
<summary>
Delete files in a user home subdirectory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_relabel_user_home_content_files" lineno="2246">
<summary>
Do not audit attempts to relabel user home files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_read_user_home_content_symlinks" lineno="2264">
<summary>
Read user home subdirectory symbolic links.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_exec_user_home_content_files" lineno="2284">
<summary>
Execute user home files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="userdom_dontaudit_exec_user_home_content_files" lineno="2311">
<summary>
Do not audit attempts to execute user home files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_manage_user_home_content_files" lineno="2330">
<summary>
Create, read, write, and delete files
in a user home subdirectory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_manage_user_home_content_dirs" lineno="2351">
<summary>
Do not audit attempts to create, read, write, and delete directories
in a user home subdirectory.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_manage_user_home_content_symlinks" lineno="2370">
<summary>
Create, read, write, and delete symbolic links
in a user home subdirectory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_delete_all_user_home_content_symlinks" lineno="2390">
<summary>
Delete all user home content symbolic links.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_delete_user_home_content_symlinks" lineno="2410">
<summary>
Delete symbolic links in a user home directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_user_home_content_pipes" lineno="2429">
<summary>
Create, read, write, and delete named pipes
in a user home subdirectory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_user_home_content_sockets" lineno="2450">
<summary>
Create, read, write, and delete named sockets
in a user home subdirectory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_user_home_dir_filetrans" lineno="2487">
<summary>
Create objects in a user home directory
with an automatic type transition to
a specified private type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="private_type">
<summary>
The type of the object to create.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.
</summary>
</param>
<param name="name" optional="true">
<summary>
The name of the object being created.
</summary>
</param>
</interface>
<interface name="userdom_user_home_content_filetrans" lineno="2524">
<summary>
Create objects in a directory located
in a user home directory with an
automatic type transition to
a specified private type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="private_type">
<summary>
The type of the object to create.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.
</summary>
</param>
<param name="name" optional="true">
<summary>
The name of the object being created.
</summary>
</param>
</interface>
<interface name="userdom_user_home_dir_filetrans_user_cert" lineno="2555">
<summary>
Automatically use the user_cert_t label for selected resources
created in a users home directory
</summary>
<param name="domain">
<summary>
Domain allowed access
</summary>
</param>
<param name="class">
<summary>
Resource type(s) for which the label should be used
</summary>
</param>
<param name="filename" optional="true">
<summary>
Name of the resource that is being created
</summary>
</param>
</interface>
<interface name="userdom_user_home_dir_filetrans_user_home_content" lineno="2585">
<summary>
Create objects in a user home directory
with an automatic type transition to
the user home file type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.
</summary>
</param>
<param name="name" optional="true">
<summary>
The name of the object being created.
</summary>
</param>
</interface>
<interface name="userdom_read_user_certs" lineno="2605">
<summary>
Read user SSL certificates.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="userdom_dontaudit_manage_user_certs" lineno="2628">
<summary>
Do not audit attempts to manage
the user SSL certificates.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<rolecap/>
</interface>
<interface name="userdom_manage_user_certs" lineno="2648">
<summary>
Manage user SSL certificates.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_write_user_tmp_sockets" lineno="2669">
<summary>
Write to user temporary named sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_list_user_tmp" lineno="2689">
<summary>
List user temporary directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_list_user_tmp" lineno="2711">
<summary>
Do not audit attempts to list user
temporary directories.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_delete_user_tmp_dirs" lineno="2729">
<summary>
Delete users temporary directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_manage_user_tmp_dirs" lineno="2748">
<summary>
Do not audit attempts to manage users
temporary directories.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_read_user_tmp_files" lineno="2766">
<summary>
Read user temporary files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_map_user_tmp_files" lineno="2787">
<summary>
Map user temporary files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_read_user_tmp_files" lineno="2806">
<summary>
Do not audit attempts to read users
temporary files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_append_user_tmp_files" lineno="2825">
<summary>
Do not audit attempts to append users
temporary files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_rw_user_tmp_files" lineno="2843">
<summary>
Read and write user temporary files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_delete_user_tmp_files" lineno="2864">
<summary>
Delete users temporary files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_manage_user_tmp_files" lineno="2883">
<summary>
Do not audit attempts to manage users
temporary files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_read_user_tmp_symlinks" lineno="2901">
<summary>
Read user temporary symbolic links.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_delete_user_tmp_symlinks" lineno="2922">
<summary>
Delete users temporary symbolic links.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_user_tmp_dirs" lineno="2941">
<summary>
Create, read, write, and delete user
temporary directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_delete_user_tmp_named_pipes" lineno="2961">
<summary>
Delete users temporary named pipes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_user_tmp_files" lineno="2980">
<summary>
Create, read, write, and delete user
temporary files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_delete_user_tmp_named_sockets" lineno="3000">
<summary>
Delete users temporary named sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_user_tmp_symlinks" lineno="3019">
<summary>
Create, read, write, and delete user
temporary symbolic links.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_user_tmp_pipes" lineno="3040">
<summary>
Create, read, write, and delete user
temporary named pipes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_user_tmp_sockets" lineno="3061">
<summary>
Create, read, write, and delete user
temporary named sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_user_tmp_filetrans" lineno="3098">
<summary>
Create objects in a user temporary directory
with an automatic type transition to
a specified private type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="private_type">
<summary>
The type of the object to create.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.
</summary>
</param>
<param name="name" optional="true">
<summary>
The name of the object being created.
</summary>
</param>
</interface>
<interface name="userdom_tmp_filetrans_user_tmp" lineno="3130">
<summary>
Create objects in the temporary directory
with an automatic type transition to
the user temporary type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.
</summary>
</param>
<param name="name" optional="true">
<summary>
The name of the object being created.
</summary>
</param>
</interface>
<interface name="userdom_map_user_tmpfs_files" lineno="3148">
<summary>
Map user tmpfs files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_read_user_tmpfs_files" lineno="3166">
<summary>
Read user tmpfs files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_read_user_tmpfs_files" lineno="3186">
<summary>
dontaudit Read attempts of user tmpfs files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_relabel_user_tmpfs_dirs" lineno="3205">
<summary>
relabel to/from user tmpfs dirs
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_relabel_user_tmpfs_files" lineno="3224">
<summary>
relabel to/from user tmpfs files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_user_runtime_content" lineno="3246">
<summary>
Make the specified type usable in
the directory /run/user/%{USERID}/.
</summary>
<param name="type">
<summary>
Type to be used as a file in the
user_runtime_content_dir_t.
</summary>
</param>
</interface>
<interface name="userdom_search_user_runtime" lineno="3266">
<summary>
Search users runtime directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_search_user_runtime_root" lineno="3285">
<summary>
Search user runtime root directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_user_runtime_root_dirs" lineno="3305">
<summary>
Create, read, write, and delete user
runtime root dirs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_relabel_user_runtime_root_dirs" lineno="3324">
<summary>
Relabel to and from user runtime root dirs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_user_runtime_dirs" lineno="3343">
<summary>
Create, read, write, and delete user
runtime dirs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_mounton_user_runtime_dirs" lineno="3363">
<summary>
Mount a filesystem on user runtime dir
directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_relabelto_user_runtime_dirs" lineno="3381">
<summary>
Relabel to user runtime directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_relabelfrom_user_runtime_dirs" lineno="3399">
<summary>
Relabel from user runtime directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_delete_user_runtime_files" lineno="3417">
<summary>
delete user runtime files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_search_all_user_runtime" lineno="3436">
<summary>
Search users runtime directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_list_all_user_runtime" lineno="3455">
<summary>
List user runtime directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_delete_all_user_runtime_dirs" lineno="3474">
<summary>
delete user runtime directories
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_delete_all_user_runtime_files" lineno="3492">
<summary>
delete user runtime files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_delete_all_user_runtime_symlinks" lineno="3511">
<summary>
delete user runtime symlink files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_delete_all_user_runtime_named_pipes" lineno="3530">
<summary>
delete user runtime fifo files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_delete_all_user_runtime_named_sockets" lineno="3549">
<summary>
delete user runtime socket files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_write_all_user_runtime_named_sockets" lineno="3568">
<summary>
write user runtime socket files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_pid_filetrans_user_runtime_root" lineno="3599">
<summary>
Create objects in the pid directory
with an automatic type transition to
the user runtime root type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.
</summary>
</param>
<param name="name" optional="true">
<summary>
The name of the object being created.
</summary>
</param>
</interface>
<interface name="userdom_user_runtime_filetrans" lineno="3635">
<summary>
Create objects in a user runtime
directory with an automatic type
transition to a specified private
type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="private_type">
<summary>
The type of the object to create.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.
</summary>
</param>
<param name="name" optional="true">
<summary>
The name of the object being created.
</summary>
</param>
</interface>
<interface name="userdom_user_runtime_filetrans_user_tmp" lineno="3666">
<summary>
Create objects in the user runtime directory
with an automatic type transition to
the user temporary type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.
</summary>
</param>
<param name="name" optional="true">
<summary>
The name of the object being created.
</summary>
</param>
</interface>
<interface name="userdom_user_runtime_root_filetrans_user_runtime" lineno="3696">
<summary>
Create objects in the user runtime root
directory with an automatic type transition
to the user runtime dir type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.
</summary>
</param>
<param name="name" optional="true">
<summary>
The name of the object being created.
</summary>
</param>
</interface>
<interface name="userdom_user_run_filetrans_user_runtime" lineno="3727">
<summary>
Create objects in the user runtime root
directory with an automatic type transition
to the user runtime dir type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.
</summary>
</param>
<param name="name" optional="true">
<summary>
The name of the object being created.
</summary>
</param>
</interface>
<interface name="userdom_rw_user_tmpfs_files" lineno="3745">
<summary>
Read and write user tmpfs files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_delete_user_tmpfs_files" lineno="3766">
<summary>
Delete user tmpfs files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_user_tmpfs_files" lineno="3785">
<summary>
Create, read, write, and delete user tmpfs files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_getattr_user_ttys" lineno="3805">
<summary>
Get the attributes of a user domain tty.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_getattr_user_ttys" lineno="3823">
<summary>
Do not audit attempts to get the attributes of a user domain tty.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_setattr_user_ttys" lineno="3841">
<summary>
Set the attributes of a user domain tty.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_setattr_user_ttys" lineno="3859">
<summary>
Do not audit attempts to set the attributes of a user domain tty.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_use_user_ttys" lineno="3877">
<summary>
Read and write a user domain tty.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_use_user_ptys" lineno="3895">
<summary>
Read and write a user domain pty.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_use_inherited_user_terminals" lineno="3930">
<summary>
Read and write a user TTYs and PTYs.
</summary>
<desc>
<p>
Allow the specified domain to read and write user
TTYs and PTYs. This will allow the domain to
interact with the user via the terminal. Typically
all interactive applications will require this
access.
</p>
<p>
However, this also allows the applications to spy
on user sessions or inject information into the
user session.  Thus, this access should likely
not be allowed for non-interactive domains.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="userdom_use_user_terminals" lineno="3971">
<summary>
Read, write and open a user TTYs and PTYs.
</summary>
<desc>
<p>
Allow the specified domain to read and write user
TTYs and PTYs. This will allow the domain to
interact with the user via the terminal. Typically
all interactive applications will require this
access.
</p>
<p>
This interface will also allow to open these user
terminals, which should not be necessary in general
and userdom_use_inherited_user_terminals() should
be sufficient.
</p>
<p>
However, this also allows the applications to spy
on user sessions or inject information into the
user session.  Thus, this access should likely
not be allowed for non-interactive domains.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="userdom_dontaudit_use_user_terminals" lineno="3987">
<summary>
Do not audit attempts to read and write
a user domain tty and pty.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_spec_domtrans_all_users" lineno="4008">
<summary>
Execute a shell in all user domains.  This
is an explicit transition, requiring the
caller to use setexeccon().
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="userdom_xsession_spec_domtrans_all_users" lineno="4031">
<summary>
Execute an Xserver session in all user domains.  This
is an explicit transition, requiring the
caller to use setexeccon().
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="userdom_spec_domtrans_unpriv_users" lineno="4054">
<summary>
Execute a shell in all unprivileged user domains.  This
is an explicit transition, requiring the
caller to use setexeccon().
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="userdom_xsession_spec_domtrans_unpriv_users" lineno="4077">
<summary>
Execute an Xserver session in all unprivileged user domains.  This
is an explicit transition, requiring the
caller to use setexeccon().
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="userdom_rw_unpriv_user_semaphores" lineno="4098">
<summary>
Read and write unpriviledged user SysV sempaphores.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_unpriv_user_semaphores" lineno="4116">
<summary>
Manage unpriviledged user SysV sempaphores.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_rw_unpriv_user_shared_mem" lineno="4135">
<summary>
Read and write unpriviledged user SysV shared
memory segments.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_unpriv_user_shared_mem" lineno="4154">
<summary>
Manage unpriviledged user SysV shared
memory segments.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_bin_spec_domtrans_unpriv_users" lineno="4174">
<summary>
Execute bin_t in the unprivileged user domains. This
is an explicit transition, requiring the
caller to use setexeccon().
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="userdom_entry_spec_domtrans_unpriv_users" lineno="4197">
<summary>
Execute all entrypoint files in unprivileged user
domains. This is an explicit transition, requiring the
caller to use setexeccon().
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_search_user_home_content" lineno="4218">
<summary>
Search users home directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_signull_unpriv_users" lineno="4237">
<summary>
Send signull to unprivileged user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_signal_unpriv_users" lineno="4255">
<summary>
Send general signals to unprivileged user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_use_unpriv_users_fds" lineno="4273">
<summary>
Inherit the file descriptors from unprivileged user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_use_unpriv_user_fds" lineno="4301">
<summary>
Do not audit attempts to inherit the file descriptors
from unprivileged user domains.
</summary>
<desc>
<p>
Do not audit attempts to inherit the file descriptors
from unprivileged user domains. This will suppress
SELinux denial messages when the specified domain is denied
the permission to inherit these file descriptors.
</p>
</desc>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="userdom_dontaudit_use_user_ptys" lineno="4319">
<summary>
Do not audit attempts to use user ptys.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_relabelto_user_ptys" lineno="4337">
<summary>
Relabel files to unprivileged user pty types.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_relabelfrom_user_ptys" lineno="4356">
<summary>
Do not audit attempts to relabel files from
user pty types.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_write_user_tmp_files" lineno="4374">
<summary>
Write all users files in /tmp
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_write_user_tmp_files" lineno="4393">
<summary>
Do not audit attempts to write users
temporary files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_use_user_ttys" lineno="4411">
<summary>
Do not audit attempts to use user ttys.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_read_all_users_state" lineno="4429">
<summary>
Read the process state of all user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_getattr_all_users" lineno="4448">
<summary>
Get the attributes of all user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_use_all_users_fds" lineno="4466">
<summary>
Inherit the file descriptors from all user domains
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_use_all_users_fds" lineno="4485">
<summary>
Do not audit attempts to inherit the file
descriptors from any user domains.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_signal_all_users" lineno="4503">
<summary>
Send general signals to all user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_sigchld_all_users" lineno="4521">
<summary>
Send a SIGCHLD signal to all user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_read_all_users_keys" lineno="4539">
<summary>
Read keys for all user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_write_all_users_keys" lineno="4557">
<summary>
Write keys for all user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_rw_all_users_keys" lineno="4575">
<summary>
Read and write keys for all user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_create_all_users_keys" lineno="4593">
<summary>
Create keys for all user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_all_users_keys" lineno="4611">
<summary>
Manage keys for all user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dbus_send_all_users" lineno="4629">
<summary>
Send a dbus message to all user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_rw_all_users_stream_sockets" lineno="4649">
<summary>
Do not audit attempts to read and write
unserdomain stream.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<tunable name="allow_user_mysql_connect" dftval="false">
<desc>
<p>
Allow users to connect to mysql
</p>
</desc>
</tunable>
<tunable name="allow_user_postgresql_connect" dftval="false">
<desc>
<p>
Allow users to connect to PostgreSQL
</p>
</desc>
</tunable>
<tunable name="user_direct_mouse" dftval="false">
<desc>
<p>
Allow regular users direct mouse access
</p>
</desc>
</tunable>
<tunable name="user_dmesg" dftval="false">
<desc>
<p>
Allow users to read system messages.
</p>
</desc>
</tunable>
<tunable name="user_rw_noexattrfile" dftval="false">
<desc>
<p>
Allow user to r/w files on filesystems
that do not have extended attributes (FAT, CDROM, FLOPPY)
</p>
</desc>
</tunable>
<tunable name="user_exec_noexattrfile" dftval="false">
<desc>
<p>
Allow user to execute files on filesystems
that do not have extended attributes (FAT, CDROM, FLOPPY)
</p>
</desc>
</tunable>
<tunable name="user_write_removable" dftval="false">
<desc>
<p>
Allow user to write files on removable
devices (e.g. external USB memory
devices or floppies)
</p>
</desc>
</tunable>
<tunable name="user_ttyfile_stat" dftval="false">
<desc>
<p>
Allow w to display everyone
</p>
</desc>
</tunable>
</module>
<module name="xdg" filename="policy/modules/system/xdg.if">
<summary>
Freedesktop standard locations (formerly known as X Desktop Group)
</summary>
<interface name="xdg_cache_content" lineno="16">
<summary>
Mark the selected type as an xdg_cache_type
</summary>
<param name="type">
<summary>
Type to give the xdg_cache_type attribute to
</summary>
</param>
</interface>
<interface name="xdg_config_content" lineno="36">
<summary>
Mark the selected type as an xdg_config_type
</summary>
<param name="type">
<summary>
Type to give the xdg_config_type attribute to
</summary>
</param>
</interface>
<interface name="xdg_data_content" lineno="56">
<summary>
Mark the selected type as an xdg_data_type
</summary>
<param name="type">
<summary>
Type to give the xdg_data_type attribute to
</summary>
</param>
</interface>
<interface name="xdg_search_cache_dirs" lineno="76">
<summary>
Search through the xdg cache home directories
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_read_cache_files" lineno="96">
<summary>
Read the xdg cache home files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_read_all_cache_files" lineno="119">
<summary>
Read all xdg_cache_type files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_cache_filetrans" lineno="159">
<summary>
Create objects in an xdg_cache directory
with an automatic type transition to
a specified private type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="private_type">
<summary>
The type of the object to create.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.
</summary>
</param>
<param name="filename" optional="true">
<summary>
Name of the file or directory created
</summary>
</param>
</interface>
<interface name="xdg_generic_user_home_dir_filetrans_cache" lineno="192">
<summary>
Create objects in the user home dir with an automatic type transition to
the xdg_cache_t type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.
</summary>
</param>
<param name="filename" optional="true">
<summary>
Name of the directory created
</summary>
</param>
</interface>
<interface name="xdg_create_cache_dirs" lineno="210">
<summary>
Create xdg cache home directories
</summary>
<param name="domain">
<summary>
Domain allowed access
</summary>
</param>
</interface>
<interface name="xdg_manage_cache" lineno="228">
<summary>
Manage the xdg cache home files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_manage_all_cache" lineno="253">
<summary>
Manage all the xdg cache home files regardless of their specific type
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_relabel_cache" lineno="278">
<summary>
Allow relabeling the xdg cache home files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_relabel_all_cache" lineno="302">
<summary>
Allow relabeling the xdg cache home files, regardless of their specific type
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_search_config_dirs" lineno="326">
<summary>
Search through the xdg config home directories
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_read_config_files" lineno="346">
<summary>
Read the xdg config home files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_read_all_config_files" lineno="369">
<summary>
Read all xdg_config_type files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_config_filetrans" lineno="409">
<summary>
Create objects in an xdg_config directory
with an automatic type transition to
a specified private type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="private_type">
<summary>
The type of the object to create.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.
</summary>
</param>
<param name="filename" optional="true">
<summary>
Name of the file or directory created
</summary>
</param>
</interface>
<interface name="xdg_generic_user_home_dir_filetrans_config" lineno="442">
<summary>
Create objects in the user home dir with an automatic type transition to
the xdg_config_t type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.
</summary>
</param>
<param name="filename" optional="true">
<summary>
Name of the directory created
</summary>
</param>
</interface>
<interface name="xdg_create_config_dirs" lineno="460">
<summary>
Create xdg config home directories
</summary>
<param name="domain">
<summary>
Domain allowed access
</summary>
</param>
</interface>
<interface name="xdg_manage_config" lineno="478">
<summary>
Manage the xdg config home files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_manage_all_config" lineno="503">
<summary>
Manage all the xdg config home files regardless of their specific type
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_relabel_config" lineno="528">
<summary>
Allow relabeling the xdg config home files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_relabel_all_config" lineno="552">
<summary>
Allow relabeling the xdg config home files, regardless of their specific type
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_read_data_files" lineno="576">
<summary>
Read the xdg data home files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_read_all_data_files" lineno="599">
<summary>
Read all xdg_data_type files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_data_filetrans" lineno="639">
<summary>
Create objects in an xdg_data directory
with an automatic type transition to
a specified private type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="private_type">
<summary>
The type of the object to create.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.
</summary>
</param>
<param name="filename" optional="true">
<summary>
Optional name of the file or directory created
</summary>
</param>
</interface>
<interface name="xdg_generic_user_home_dir_filetrans_data" lineno="672">
<summary>
Create objects in the user home dir with an automatic type transition to
the xdg_data_t type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.
</summary>
</param>
<param name="filename" optional="true">
<summary>
Name of the directory created
</summary>
</param>
</interface>
<interface name="xdg_create_data_dirs" lineno="690">
<summary>
Create xdg data home directories
</summary>
<param name="domain">
<summary>
Domain allowed access
</summary>
</param>
</interface>
<interface name="xdg_manage_data" lineno="708">
<summary>
Manage the xdg data home files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_manage_all_data" lineno="733">
<summary>
Manage all the xdg data home files, regardless of their specific type
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_relabel_data" lineno="758">
<summary>
Allow relabeling the xdg data home files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_relabel_all_data" lineno="782">
<summary>
Allow relabeling the xdg data home files, regardless of their type
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_exec_data" lineno="806">
<summary>
Allow executing the xdg data home files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_generic_user_home_dir_filetrans_documents" lineno="835">
<summary>
Create objects in the user home dir with an automatic type transition to
the xdg_documents_t type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.
</summary>
</param>
<param name="filename" optional="true">
<summary>
Name of the directory created
</summary>
</param>
</interface>
<interface name="xdg_manage_documents" lineno="853">
<summary>
Manage documents content
</summary>
<param name="domain">
<summary>
Domain allowed access
</summary>
</param>
</interface>
<interface name="xdg_relabel_documents" lineno="874">
<summary>
Allow relabeling the documents resources
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_read_downloads" lineno="896">
<summary>
Read downloaded content
</summary>
<param name="domain">
<summary>
Domain allowed access
</summary>
</param>
</interface>
<interface name="xdg_create_downloads" lineno="919">
<summary>
Create downloaded content
</summary>
<param name="domain">
<summary>
Domain allowed access
</summary>
</param>
</interface>
<interface name="xdg_write_downloads" lineno="942">
<summary>
Write downloaded content
</summary>
<param name="domain">
<summary>
Domain allowed access
</summary>
</param>
</interface>
<interface name="xdg_generic_user_home_dir_filetrans_downloads" lineno="976">
<summary>
Create objects in the user home dir with an automatic type transition to
the xdg_downloads_t type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.
</summary>
</param>
<param name="filename" optional="true">
<summary>
Name of the directory created
</summary>
</param>
</interface>
<interface name="xdg_manage_downloads" lineno="994">
<summary>
Manage downloaded content
</summary>
<param name="domain">
<summary>
Domain allowed access
</summary>
</param>
</interface>
<interface name="xdg_relabel_downloads" lineno="1015">
<summary>
Allow relabeling the downloads resources
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_read_pictures" lineno="1037">
<summary>
Read user pictures content
</summary>
<param name="domain">
<summary>
Domain allowed access
</summary>
</param>
</interface>
<interface name="xdg_generic_user_home_dir_filetrans_pictures" lineno="1071">
<summary>
Create objects in the user home dir with an automatic type transition to
the xdg_pictures_t type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.
</summary>
</param>
<param name="filename" optional="true">
<summary>
Name of the directory created
</summary>
</param>
</interface>
<interface name="xdg_manage_pictures" lineno="1089">
<summary>
Manage pictures content
</summary>
<param name="domain">
<summary>
Domain allowed access
</summary>
</param>
</interface>
<interface name="xdg_relabel_pictures" lineno="1110">
<summary>
Allow relabeling the pictures resources
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_read_music" lineno="1132">
<summary>
Read user music content
</summary>
<param name="domain">
<summary>
Domain allowed access
</summary>
</param>
</interface>
<interface name="xdg_generic_user_home_dir_filetrans_music" lineno="1166">
<summary>
Create objects in the user home dir with an automatic type transition to
the xdg_pictures_t type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.
</summary>
</param>
<param name="filename" optional="true">
<summary>
Name of the directory created
</summary>
</param>
</interface>
<interface name="xdg_manage_music" lineno="1184">
<summary>
Manage music content
</summary>
<param name="domain">
<summary>
Domain allowed access
</summary>
</param>
</interface>
<interface name="xdg_relabel_music" lineno="1205">
<summary>
Allow relabeling the music resources
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xdg_read_videos" lineno="1227">
<summary>
Read user video content
</summary>
<param name="domain">
<summary>
Domain allowed access
</summary>
</param>
</interface>
<interface name="xdg_generic_user_home_dir_filetrans_videos" lineno="1261">
<summary>
Create objects in the user home dir with an automatic type transition to
the xdg_videos_t type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.
</summary>
</param>
<param name="filename" optional="true">
<summary>
Name of the directory created
</summary>
</param>
</interface>
<interface name="xdg_manage_videos" lineno="1279">
<summary>
Manage video content
</summary>
<param name="domain">
<summary>
Domain allowed access
</summary>
</param>
</interface>
<interface name="xdg_relabel_videos" lineno="1300">
<summary>
Allow relabeling the videos resources
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="xen" filename="policy/modules/system/xen.if">
<summary>Xen hypervisor.</summary>
<interface name="xen_domtrans" lineno="13">
<summary>
Execute a domain transition to run xend.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="xen_exec" lineno="32">
<summary>
Execute xend in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xen_use_fds" lineno="51">
<summary>
Inherit and use xen file descriptors.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xen_dontaudit_use_fds" lineno="70">
<summary>
Do not audit attempts to inherit
xen file descriptors.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="xen_manage_image_dirs" lineno="89">
<summary>
Create, read, write, and delete
xend image directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xen_read_image_files" lineno="108">
<summary>
Read xend image files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xen_rw_image_files" lineno="128">
<summary>
Read and write xend image files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xen_append_log" lineno="148">
<summary>
Append xend log files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xen_manage_log" lineno="169">
<summary>
Create, read, write, and delete
xend log files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xen_read_xenstored_pid_files" lineno="189">
<summary>
Read xenstored pid files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xen_dontaudit_rw_unix_stream_sockets" lineno="209">
<summary>
Do not audit attempts to read and write
Xen unix domain stream sockets.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="xen_stream_connect_xenstore" lineno="228">
<summary>
Connect to xenstored with a unix
domain stream socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xen_stream_connect" lineno="248">
<summary>
Connect to xend with a unix
domain stream socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xen_pid_filetrans" lineno="280">
<summary>
Create in a xend_runtime_t directory
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="private type">
<summary>
The type of the object to be created.
</summary>
</param>
<param name="object">
<summary>
The object class of the object being created.
</summary>
</param>
</interface>
<interface name="xen_domtrans_xm" lineno="298">
<summary>
Execute a domain transition to run xm.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="xen_stream_connect_xm" lineno="318">
<summary>
Connect to xm with a unix
domain stream socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<tunable name="xend_run_blktap" dftval="false">
<desc>
<p>
Determine whether xend can
run blktapctrl and tapdisk.
</p>
</desc>
</tunable>
<tunable name="xen_use_fusefs" dftval="false">
<desc>
<p>
Determine whether xen can
use fusefs file systems.
</p>
</desc>
</tunable>
<tunable name="xen_use_nfs" dftval="false">
<desc>
<p>
Determine whether xen can
use nfs file systems.
</p>
</desc>
</tunable>
<tunable name="xen_use_samba" dftval="false">
<desc>
<p>
Determine whether xen can
use samba file systems.
</p>
</desc>
</tunable>
</module>
